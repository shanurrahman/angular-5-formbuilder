{"ast":null,"code":"import _toConsumableArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directive, Optional, Self, Renderer2, ElementRef, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ContentChildren, NgZone, NgModule } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject, merge } from 'rxjs';\nimport { filter, takeUntil, startWith, switchMap, flatMap, map } from 'rxjs/operators';\nimport { NgControl } from '@angular/forms';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/forms';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/platform';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/services';\nimport * as ɵngcc6 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc7 from 'ng-zorro-antd/icon';\n\nfunction NzInputGroupComponent_span_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r7.nzAddOnBeforeIcon)(\"template\", ctx_r7.nzAddOnBefore);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_span_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_span_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtemplate(1, NzInputGroupComponent_span_0_span_2_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r3 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵclassProp(\"ant-input-affix-wrapper-sm\", ctx_r8.isSmall)(\"ant-input-affix-wrapper-lg\", ctx_r8.isLarge);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r9.nzAddOnAfterIcon)(\"template\", ctx_r9.nzAddOnAfter);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 4);\n    ɵngcc0.ɵɵtemplate(1, NzInputGroupComponent_span_0_span_1_Template, 1, 2, \"span\", 5);\n    ɵngcc0.ɵɵtemplate(2, NzInputGroupComponent_span_0_span_2_Template, 2, 5, \"span\", 6);\n    ɵngcc0.ɵɵtemplate(3, NzInputGroupComponent_span_0_span_3_Template, 1, 2, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n\n    var _r5 = ɵngcc0.ɵɵreference(6);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.nzAddOnBefore || ctx_r0.nzAddOnBeforeIcon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isAffix)(\"ngIfElse\", _r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.nzAddOnAfter || ctx_r0.nzAddOnAfterIcon);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_ng_template_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext(2);\n\n    var _r3 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_1_ng_template_0_Template, 1, 1, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r5 = ɵngcc0.ɵɵreference(6);\n\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isAffix)(\"ngIfElse\", _r5);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r13.nzPrefixIcon)(\"template\", ctx_r13.nzPrefix);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_ng_template_1_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_ng_template_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 14);\n  }\n\n  if (rf & 2) {\n    var ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r15.nzSuffixIcon)(\"template\", ctx_r15.nzSuffix);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_3_span_0_Template, 1, 2, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_3_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵtemplate(2, NzInputGroupComponent_ng_template_3_span_2_Template, 1, 2, \"span\", 12);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n\n    var _r5 = ɵngcc0.ɵɵreference(6);\n\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.nzPrefix || ctx_r4.nzPrefixIcon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.nzSuffix || ctx_r4.nzSuffixIcon);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nvar _c0 = [\"*\"];\nvar _c1 = [\"nz-input-group-slot\", \"\"];\n\nfunction NzInputGroupSlotComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 2);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r0.icon);\n  }\n}\n\nfunction NzInputGroupSlotComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.template);\n  }\n}\n\nvar NzInputDirective = /*#__PURE__*/function () {\n  function NzInputDirective(ngControl, renderer, elementRef) {\n    _classCallCheck(this, NzInputDirective);\n\n    this.ngControl = ngControl;\n    this.nzBorderless = false;\n    this.nzSize = 'default';\n    this._disabled = false;\n    this.disabled$ = new Subject();\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-input');\n  }\n\n  _createClass(NzInputDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      var _a;\n\n      if (this.ngControl) {\n        (_a = this.ngControl.statusChanges) === null || _a === void 0 ? void 0 : _a.pipe(filter(function () {\n          return _this.ngControl.disabled !== null;\n        }), takeUntil(this.destroy$)).subscribe(function () {\n          _this.disabled$.next(_this.ngControl.disabled);\n        });\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var disabled = changes.disabled;\n\n      if (disabled) {\n        this.disabled$.next(this.disabled);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      if (this.ngControl && this.ngControl.disabled !== null) {\n        return this.ngControl.disabled;\n      }\n\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = value != null && \"\".concat(value) !== 'false';\n    }\n  }]);\n\n  return NzInputDirective;\n}();\n\nNzInputDirective.ɵfac = function NzInputDirective_Factory(t) {\n  return new (t || NzInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNzInputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzInputDirective,\n  selectors: [[\"input\", \"nz-input\", \"\"], [\"textarea\", \"nz-input\", \"\"]],\n  hostVars: 9,\n  hostBindings: function NzInputDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n      ɵngcc0.ɵɵclassProp(\"ant-input-disabled\", ctx.disabled)(\"ant-input-borderless\", ctx.nzBorderless)(\"ant-input-lg\", ctx.nzSize === \"large\")(\"ant-input-sm\", ctx.nzSize === \"small\");\n    }\n  },\n  inputs: {\n    nzBorderless: \"nzBorderless\",\n    nzSize: \"nzSize\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"nzInput\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNzInputDirective.ctorParameters = function () {\n  return [{\n    type: NgControl,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nNzInputDirective.propDecorators = {\n  nzBorderless: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzInputDirective.prototype, \"nzBorderless\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzInputGroupWhitSuffixOrPrefixDirective = function NzInputGroupWhitSuffixOrPrefixDirective(elementRef) {\n  _classCallCheck(this, NzInputGroupWhitSuffixOrPrefixDirective);\n\n  this.elementRef = elementRef;\n};\n\nNzInputGroupWhitSuffixOrPrefixDirective.ɵfac = function NzInputGroupWhitSuffixOrPrefixDirective_Factory(t) {\n  return new (t || NzInputGroupWhitSuffixOrPrefixDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNzInputGroupWhitSuffixOrPrefixDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzInputGroupWhitSuffixOrPrefixDirective,\n  selectors: [[\"nz-input-group\", \"nzSuffix\", \"\"], [\"nz-input-group\", \"nzPrefix\", \"\"]]\n});\n\nNzInputGroupWhitSuffixOrPrefixDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nvar NzInputGroupComponent = /*#__PURE__*/function () {\n  function NzInputGroupComponent(focusMonitor, elementRef, cdr) {\n    _classCallCheck(this, NzInputGroupComponent);\n\n    this.focusMonitor = focusMonitor;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.nzAddOnBeforeIcon = null;\n    this.nzAddOnAfterIcon = null;\n    this.nzPrefixIcon = null;\n    this.nzSuffixIcon = null;\n    this.nzSize = 'default';\n    this.nzSearch = false;\n    this.nzCompact = false;\n    this.isLarge = false;\n    this.isSmall = false;\n    this.isAffix = false;\n    this.isAddOn = false;\n    this.focused = false;\n    this.disabled = false;\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzInputGroupComponent, [{\n    key: \"updateChildrenInputSize\",\n    value: function updateChildrenInputSize() {\n      var _this2 = this;\n\n      if (this.listOfNzInputDirective) {\n        this.listOfNzInputDirective.forEach(function (item) {\n          return item.nzSize = _this2.nzSize;\n        });\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this3 = this;\n\n      this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(function (focusOrigin) {\n        _this3.focused = !!focusOrigin;\n\n        _this3.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this4 = this;\n\n      this.updateChildrenInputSize();\n      var listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n      listOfInputChange$.pipe(switchMap(function (list) {\n        return merge.apply(void 0, [listOfInputChange$].concat(_toConsumableArray(list.map(function (input) {\n          return input.disabled$;\n        }))));\n      }), flatMap(function () {\n        return listOfInputChange$;\n      }), map(function (list) {\n        return list.some(function (input) {\n          return input.disabled;\n        });\n      }), takeUntil(this.destroy$)).subscribe(function (disabled) {\n        _this4.disabled = disabled;\n\n        _this4.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzSize = changes.nzSize,\n          nzSuffix = changes.nzSuffix,\n          nzPrefix = changes.nzPrefix,\n          nzPrefixIcon = changes.nzPrefixIcon,\n          nzSuffixIcon = changes.nzSuffixIcon,\n          nzAddOnAfter = changes.nzAddOnAfter,\n          nzAddOnBefore = changes.nzAddOnBefore,\n          nzAddOnAfterIcon = changes.nzAddOnAfterIcon,\n          nzAddOnBeforeIcon = changes.nzAddOnBeforeIcon;\n\n      if (nzSize) {\n        this.updateChildrenInputSize();\n        this.isLarge = this.nzSize === 'large';\n        this.isSmall = this.nzSize === 'small';\n      }\n\n      if (nzSuffix || nzPrefix || nzPrefixIcon || nzSuffixIcon) {\n        this.isAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n      }\n\n      if (nzAddOnAfter || nzAddOnBefore || nzAddOnAfterIcon || nzAddOnBeforeIcon) {\n        this.isAddOn = !!(this.nzAddOnAfter || this.nzAddOnBefore || this.nzAddOnAfterIcon || this.nzAddOnBeforeIcon);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzInputGroupComponent;\n}();\n\nNzInputGroupComponent.ɵfac = function NzInputGroupComponent_Factory(t) {\n  return new (t || NzInputGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzInputGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzInputGroupComponent,\n  selectors: [[\"nz-input-group\"]],\n  contentQueries: function NzInputGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzInputDirective, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listOfNzInputDirective = _t);\n    }\n  },\n  hostVars: 32,\n  hostBindings: function NzInputGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-input-group-compact\", ctx.nzCompact)(\"ant-input-search-enter-button\", ctx.nzSearch)(\"ant-input-search\", ctx.nzSearch)(\"ant-input-search-sm\", ctx.nzSearch && ctx.isSmall)(\"ant-input-search-large\", ctx.nzSearch && ctx.isLarge)(\"ant-input-group-wrapper\", ctx.isAddOn)(\"ant-input-group-wrapper-lg\", ctx.isAddOn && ctx.isLarge)(\"ant-input-group-wrapper-sm\", ctx.isAddOn && ctx.isSmall)(\"ant-input-affix-wrapper\", ctx.isAffix && !ctx.isAddOn)(\"ant-input-affix-wrapper-focused\", ctx.isAffix && ctx.focused)(\"ant-input-affix-wrapper-disabled\", ctx.isAffix && ctx.disabled)(\"ant-input-affix-wrapper-lg\", ctx.isAffix && !ctx.isAddOn && ctx.isLarge)(\"ant-input-affix-wrapper-sm\", ctx.isAffix && !ctx.isAddOn && ctx.isSmall)(\"ant-input-group\", !ctx.isAffix && !ctx.isAddOn)(\"ant-input-group-lg\", !ctx.isAffix && !ctx.isAddOn && ctx.isLarge)(\"ant-input-group-sm\", !ctx.isAffix && !ctx.isAddOn && ctx.isSmall);\n    }\n  },\n  inputs: {\n    nzAddOnBeforeIcon: \"nzAddOnBeforeIcon\",\n    nzAddOnAfterIcon: \"nzAddOnAfterIcon\",\n    nzPrefixIcon: \"nzPrefixIcon\",\n    nzSuffixIcon: \"nzSuffixIcon\",\n    nzSize: \"nzSize\",\n    nzSearch: \"nzSearch\",\n    nzCompact: \"nzCompact\",\n    nzAddOnBefore: \"nzAddOnBefore\",\n    nzAddOnAfter: \"nzAddOnAfter\",\n    nzPrefix: \"nzPrefix\",\n    nzSuffix: \"nzSuffix\"\n  },\n  exportAs: [\"nzInputGroup\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 7,\n  vars: 2,\n  consts: [[\"class\", \"ant-input-wrapper ant-input-group\", 4, \"ngIf\", \"ngIfElse\"], [\"noAddOnTemplate\", \"\"], [\"affixTemplate\", \"\"], [\"contentTemplate\", \"\"], [1, \"ant-input-wrapper\", \"ant-input-group\"], [\"nz-input-group-slot\", \"\", \"type\", \"addon\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"class\", \"ant-input-affix-wrapper\", 3, \"ant-input-affix-wrapper-sm\", \"ant-input-affix-wrapper-lg\", 4, \"ngIf\", \"ngIfElse\"], [\"nz-input-group-slot\", \"\", \"type\", \"addon\", 3, \"icon\", \"template\"], [1, \"ant-input-affix-wrapper\"], [3, \"ngTemplateOutlet\"], [3, \"ngIf\", \"ngIfElse\"], [\"nz-input-group-slot\", \"\", \"type\", \"prefix\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"prefix\", 3, \"icon\", \"template\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 3, \"icon\", \"template\"]],\n  template: function NzInputGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzInputGroupComponent_span_0_Template, 4, 4, \"span\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_1_Template, 1, 2, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(3, NzInputGroupComponent_ng_template_3_Template, 3, 3, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(5, NzInputGroupComponent_ng_template_5_Template, 1, 0, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r1 = ɵngcc0.ɵɵreference(2);\n\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isAddOn)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc3.NgIf, NzInputGroupSlotComponent, ɵngcc3.NgTemplateOutlet];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzInputGroupComponent.ctorParameters = function () {\n  return [{\n    type: FocusMonitor\n  }, {\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNzInputGroupComponent.propDecorators = {\n  listOfNzInputDirective: [{\n    type: ContentChildren,\n    args: [NzInputDirective]\n  }],\n  nzAddOnBeforeIcon: [{\n    type: Input\n  }],\n  nzAddOnAfterIcon: [{\n    type: Input\n  }],\n  nzPrefixIcon: [{\n    type: Input\n  }],\n  nzSuffixIcon: [{\n    type: Input\n  }],\n  nzAddOnBefore: [{\n    type: Input\n  }],\n  nzAddOnAfter: [{\n    type: Input\n  }],\n  nzPrefix: [{\n    type: Input\n  }],\n  nzSuffix: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  nzSearch: [{\n    type: Input\n  }],\n  nzCompact: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzInputGroupComponent.prototype, \"nzSearch\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzInputGroupComponent.prototype, \"nzCompact\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'input[nz-input],textarea[nz-input]',\n      exportAs: 'nzInput',\n      host: {\n        '[class.ant-input-disabled]': 'disabled',\n        '[class.ant-input-borderless]': 'nzBorderless',\n        '[class.ant-input-lg]': \"nzSize === 'large'\",\n        '[class.ant-input-sm]': \"nzSize === 'small'\",\n        '[attr.disabled]': 'disabled || null'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    nzBorderless: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzInputGroupWhitSuffixOrPrefixDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"nz-input-group[nzSuffix], nz-input-group[nzPrefix]\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzInputGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-input-group',\n      exportAs: 'nzInputGroup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <span class=\\\"ant-input-wrapper ant-input-group\\\" *ngIf=\\\"isAddOn; else noAddOnTemplate\\\">\\n      <span\\n        *ngIf=\\\"nzAddOnBefore || nzAddOnBeforeIcon\\\"\\n        nz-input-group-slot\\n        type=\\\"addon\\\"\\n        [icon]=\\\"nzAddOnBeforeIcon\\\"\\n        [template]=\\\"nzAddOnBefore\\\"\\n      >\\n      </span>\\n      <span\\n        *ngIf=\\\"isAffix; else contentTemplate\\\"\\n        class=\\\"ant-input-affix-wrapper\\\"\\n        [class.ant-input-affix-wrapper-sm]=\\\"isSmall\\\"\\n        [class.ant-input-affix-wrapper-lg]=\\\"isLarge\\\"\\n      >\\n        <ng-template [ngTemplateOutlet]=\\\"affixTemplate\\\"></ng-template>\\n      </span>\\n      <span\\n        *ngIf=\\\"nzAddOnAfter || nzAddOnAfterIcon\\\"\\n        nz-input-group-slot\\n        type=\\\"addon\\\"\\n        [icon]=\\\"nzAddOnAfterIcon\\\"\\n        [template]=\\\"nzAddOnAfter\\\"\\n      ></span>\\n    </span>\\n    <ng-template #noAddOnTemplate>\\n      <ng-template [ngIf]=\\\"isAffix\\\" [ngIfElse]=\\\"contentTemplate\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"affixTemplate\\\"></ng-template>\\n      </ng-template>\\n    </ng-template>\\n    <ng-template #affixTemplate>\\n      <span *ngIf=\\\"nzPrefix || nzPrefixIcon\\\" nz-input-group-slot type=\\\"prefix\\\" [icon]=\\\"nzPrefixIcon\\\" [template]=\\\"nzPrefix\\\"></span>\\n      <ng-template [ngTemplateOutlet]=\\\"contentTemplate\\\"></ng-template>\\n      <span *ngIf=\\\"nzSuffix || nzSuffixIcon\\\" nz-input-group-slot type=\\\"suffix\\\" [icon]=\\\"nzSuffixIcon\\\" [template]=\\\"nzSuffix\\\"></span>\\n    </ng-template>\\n    <ng-template #contentTemplate>\\n      <ng-content></ng-content>\\n    </ng-template>\\n  \",\n      host: {\n        '[class.ant-input-group-compact]': \"nzCompact\",\n        '[class.ant-input-search-enter-button]': \"nzSearch\",\n        '[class.ant-input-search]': \"nzSearch\",\n        '[class.ant-input-search-sm]': \"nzSearch && isSmall\",\n        '[class.ant-input-search-large]': \"nzSearch && isLarge\",\n        '[class.ant-input-group-wrapper]': \"isAddOn\",\n        '[class.ant-input-group-wrapper-lg]': \"isAddOn && isLarge\",\n        '[class.ant-input-group-wrapper-sm]': \"isAddOn && isSmall\",\n        '[class.ant-input-affix-wrapper]': \"isAffix && !isAddOn\",\n        '[class.ant-input-affix-wrapper-focused]': \"isAffix && focused\",\n        '[class.ant-input-affix-wrapper-disabled]': \"isAffix && disabled\",\n        '[class.ant-input-affix-wrapper-lg]': \"isAffix && !isAddOn && isLarge\",\n        '[class.ant-input-affix-wrapper-sm]': \"isAffix && !isAddOn && isSmall\",\n        '[class.ant-input-group]': \"!isAffix && !isAddOn\",\n        '[class.ant-input-group-lg]': \"!isAffix && !isAddOn && isLarge\",\n        '[class.ant-input-group-sm]': \"!isAffix && !isAddOn && isSmall\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc2.FocusMonitor\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    nzAddOnBeforeIcon: [{\n      type: Input\n    }],\n    nzAddOnAfterIcon: [{\n      type: Input\n    }],\n    nzPrefixIcon: [{\n      type: Input\n    }],\n    nzSuffixIcon: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzSearch: [{\n      type: Input\n    }],\n    nzCompact: [{\n      type: Input\n    }],\n    listOfNzInputDirective: [{\n      type: ContentChildren,\n      args: [NzInputDirective]\n    }],\n    nzAddOnBefore: [{\n      type: Input\n    }],\n    nzAddOnAfter: [{\n      type: Input\n    }],\n    nzPrefix: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzAutosizeDirective = /*#__PURE__*/function () {\n  function NzAutosizeDirective(elementRef, ngZone, platform, resizeService) {\n    _classCallCheck(this, NzAutosizeDirective);\n\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.resizeService = resizeService;\n    this.autosize = false;\n    this.el = this.elementRef.nativeElement;\n    this.maxHeight = null;\n    this.minHeight = null;\n    this.destroy$ = new Subject();\n    this.inputGap = 10;\n  }\n\n  _createClass(NzAutosizeDirective, [{\n    key: \"resizeToFitContent\",\n    value: function resizeToFitContent() {\n      var _this5 = this;\n\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.cacheTextareaLineHeight(); // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n      // in checking the height of the textarea.\n\n      if (!this.cachedLineHeight) {\n        return;\n      }\n\n      var textarea = this.el;\n      var value = textarea.value; // Only resize if the value or minRows have changed since these calculations can be expensive.\n\n      if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n        return;\n      }\n\n      var placeholderText = textarea.placeholder; // Reset the textarea height to auto in order to shrink back to its default size.\n      // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n      // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n      // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n      // need to be removed temporarily.\n\n      textarea.classList.add('nz-textarea-autosize-measuring');\n      textarea.placeholder = '';\n      var height = Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight + this.inputGap;\n\n      if (this.maxHeight !== null && height > this.maxHeight) {\n        height = this.maxHeight;\n      }\n\n      if (this.minHeight !== null && height < this.minHeight) {\n        height = this.minHeight;\n      } // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n\n\n      textarea.style.height = \"\".concat(height, \"px\");\n      textarea.classList.remove('nz-textarea-autosize-measuring');\n      textarea.placeholder = placeholderText; // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n      // We need to re-set the selection in order for it to scroll to the proper position.\n\n      if (typeof requestAnimationFrame !== 'undefined') {\n        this.ngZone.runOutsideAngular(function () {\n          return requestAnimationFrame(function () {\n            var selectionStart = textarea.selectionStart,\n                selectionEnd = textarea.selectionEnd; // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n            // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n            // between the time we requested the animation frame and when it was executed.\n            // Also note that we have to assert that the textarea is focused before we set the\n            // selection range. Setting the selection range on a non-focused textarea will cause\n            // it to receive focus on IE and Edge.\n\n            if (!_this5.destroy$.isStopped && document.activeElement === textarea) {\n              textarea.setSelectionRange(selectionStart, selectionEnd);\n            }\n          });\n        });\n      }\n\n      this.previousValue = value;\n      this.previousMinRows = this.minRows;\n    }\n  }, {\n    key: \"cacheTextareaLineHeight\",\n    value: function cacheTextareaLineHeight() {\n      if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n        return;\n      } // Use a clone element because we have to override some styles.\n\n\n      var textareaClone = this.el.cloneNode(false);\n      textareaClone.rows = 1; // Use `position: absolute` so that this doesn't cause a browser layout and use\n      // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n      // would affect the height.\n\n      textareaClone.style.position = 'absolute';\n      textareaClone.style.visibility = 'hidden';\n      textareaClone.style.border = 'none';\n      textareaClone.style.padding = '0';\n      textareaClone.style.height = '';\n      textareaClone.style.minHeight = '';\n      textareaClone.style.maxHeight = ''; // In Firefox it happens that textarea elements are always bigger than the specified amount\n      // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n      // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n      // to hidden. This ensures that there is no invalid calculation of the line height.\n      // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n\n      textareaClone.style.overflow = 'hidden';\n      this.el.parentNode.appendChild(textareaClone);\n      this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\n      this.el.parentNode.removeChild(textareaClone); // Min and max heights have to be re-calculated if the cached line height changes\n\n      this.maxHeight = this.setMaxHeight();\n      this.minHeight = this.setMinHeight();\n    }\n  }, {\n    key: \"setMinHeight\",\n    value: function setMinHeight() {\n      var minHeight = this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\n\n      if (minHeight !== null) {\n        this.el.style.minHeight = \"\".concat(minHeight, \"px\");\n      }\n\n      return minHeight;\n    }\n  }, {\n    key: \"setMaxHeight\",\n    value: function setMaxHeight() {\n      var maxHeight = this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\n\n      if (maxHeight !== null) {\n        this.el.style.maxHeight = \"\".concat(maxHeight, \"px\");\n      }\n\n      return maxHeight;\n    }\n  }, {\n    key: \"noopInputHandler\",\n    value: function noopInputHandler() {// no-op handler that ensures we're running change detection on input events.\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this6 = this;\n\n      if (this.autosize && this.platform.isBrowser) {\n        this.resizeToFitContent();\n        this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(function () {\n          return _this6.resizeToFitContent(true);\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.autosize && this.platform.isBrowser) {\n        this.resizeToFitContent();\n      }\n    }\n  }, {\n    key: \"nzAutosize\",\n    set: function set(value) {\n      var isAutoSizeType = function isAutoSizeType(data) {\n        return typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\n      };\n\n      if (typeof value === 'string') {\n        this.autosize = true;\n      } else if (isAutoSizeType(value)) {\n        this.autosize = value;\n        this.minRows = value.minRows;\n        this.maxRows = value.maxRows;\n        this.maxHeight = this.setMaxHeight();\n        this.minHeight = this.setMinHeight();\n      }\n    }\n  }]);\n\n  return NzAutosizeDirective;\n}();\n\nNzAutosizeDirective.ɵfac = function NzAutosizeDirective_Factory(t) {\n  return new (t || NzAutosizeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.NzResizeService));\n};\n\nNzAutosizeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzAutosizeDirective,\n  selectors: [[\"textarea\", \"nzAutosize\", \"\"]],\n  hostAttrs: [\"rows\", \"1\"],\n  hostBindings: function NzAutosizeDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function NzAutosizeDirective_input_HostBindingHandler() {\n        return ctx.noopInputHandler();\n      });\n    }\n  },\n  inputs: {\n    nzAutosize: \"nzAutosize\"\n  },\n  exportAs: [\"nzAutosize\"]\n});\n\nNzAutosizeDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: NzResizeService\n  }];\n};\n\nNzAutosizeDirective.propDecorators = {\n  nzAutosize: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAutosizeDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'textarea[nzAutosize]',\n      exportAs: 'nzAutosize',\n      host: {\n        // Textarea elements that have the directive applied should have a single row by default.\n        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n        rows: '1',\n        '(input)': 'noopInputHandler()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc4.Platform\n    }, {\n      type: ɵngcc5.NzResizeService\n    }];\n  }, {\n    nzAutosize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzInputGroupSlotComponent = function NzInputGroupSlotComponent() {\n  _classCallCheck(this, NzInputGroupSlotComponent);\n\n  this.icon = null;\n  this.type = null;\n  this.template = null;\n};\n\nNzInputGroupSlotComponent.ɵfac = function NzInputGroupSlotComponent_Factory(t) {\n  return new (t || NzInputGroupSlotComponent)();\n};\n\nNzInputGroupSlotComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzInputGroupSlotComponent,\n  selectors: [[\"\", \"nz-input-group-slot\", \"\"]],\n  hostVars: 6,\n  hostBindings: function NzInputGroupSlotComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-input-group-addon\", ctx.type === \"addon\")(\"ant-input-prefix\", ctx.type === \"prefix\")(\"ant-input-suffix\", ctx.type === \"suffix\");\n    }\n  },\n  inputs: {\n    icon: \"icon\",\n    type: \"type\",\n    template: \"template\"\n  },\n  attrs: _c1,\n  decls: 2,\n  vars: 2,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzInputGroupSlotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzInputGroupSlotComponent_i_0_Template, 1, 1, \"i\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzInputGroupSlotComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.icon);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.template);\n    }\n  },\n  directives: [ɵngcc3.NgIf, ɵngcc6.NzStringTemplateOutletDirective, ɵngcc7.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzInputGroupSlotComponent.propDecorators = {\n  icon: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  template: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzInputGroupSlotComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-input-group-slot]',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <i nz-icon [nzType]=\\\"icon\\\" *ngIf=\\\"icon\\\"></i>\\n    <ng-container *nzStringTemplateOutlet=\\\"template\\\">{{ template }}</ng-container>\\n  \",\n      host: {\n        '[class.ant-input-group-addon]': \"type === 'addon'\",\n        '[class.ant-input-prefix]': \"type === 'prefix'\",\n        '[class.ant-input-suffix]': \"type === 'suffix'\"\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    icon: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzInputModule = function NzInputModule() {\n  _classCallCheck(this, NzInputModule);\n};\n\nNzInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzInputModule\n});\nNzInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzInputModule_Factory(t) {\n    return new (t || NzInputModule)();\n  },\n  imports: [[CommonModule, NzIconModule, PlatformModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzInputModule, {\n    declarations: function declarations() {\n      return [NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, NzIconModule, PlatformModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupWhitSuffixOrPrefixDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective],\n      exports: [NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupWhitSuffixOrPrefixDirective],\n      imports: [CommonModule, NzIconModule, PlatformModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzAutosizeDirective, NzInputDirective, NzInputGroupComponent, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective, NzInputModule };","map":{"version":3,"sources":["../../components/input/input.directive.ts","../../components/input/input-group.component.ts","../../components/input/autosize.directive.ts","../../components/input/input-group-slot.component.ts","../../components/input/input.module.ts","../../components/input/public-api.ts","../../components/input/ng-zorro-antd-input.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, OnChanges, OnDestroy, OnInit, Optional, Renderer2, Self, SimpleChanges } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BooleanInput, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: 'input[nz-input],textarea[nz-input]',\n  exportAs: 'nzInput',\n  host: {\n    '[class.ant-input-disabled]': 'disabled',\n    '[class.ant-input-borderless]': 'nzBorderless',\n    '[class.ant-input-lg]': `nzSize === 'large'`,\n    '[class.ant-input-sm]': `nzSize === 'small'`,\n    '[attr.disabled]': 'disabled || null'\n  }\n})\nexport class NzInputDirective implements OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_nzBorderless: BooleanInput;\n  @Input() @InputBoolean() nzBorderless = false;\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input()\n  get disabled(): boolean {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = value != null && `${value}` !== 'false';\n  }\n  _disabled = false;\n  disabled$ = new Subject<boolean>();\n  private destroy$ = new Subject<void>();\n\n  constructor(@Optional() @Self() public ngControl: NgControl, renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-input');\n  }\n\n  ngOnInit(): void {\n    if (this.ngControl) {\n      this.ngControl.statusChanges\n        ?.pipe(\n          filter(() => this.ngControl.disabled !== null),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => {\n          this.disabled$.next(this.ngControl.disabled!);\n        });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { disabled } = changes;\n    if (disabled) {\n      this.disabled$.next(this.disabled);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { merge, Subject } from 'rxjs';\nimport { flatMap, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzInputDirective } from './input.directive';\n\n@Directive({\n  selector: `nz-input-group[nzSuffix], nz-input-group[nzPrefix]`\n})\nexport class NzInputGroupWhitSuffixOrPrefixDirective {\n  constructor(public elementRef: ElementRef) {}\n}\n\n@Component({\n  selector: 'nz-input-group',\n  exportAs: 'nzInputGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      >\n      </span>\n      <span\n        *ngIf=\"isAffix; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span *ngIf=\"nzPrefix || nzPrefixIcon\" nz-input-group-slot type=\"prefix\" [icon]=\"nzPrefixIcon\" [template]=\"nzPrefix\"></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span *ngIf=\"nzSuffix || nzSuffixIcon\" nz-input-group-slot type=\"suffix\" [icon]=\"nzSuffixIcon\" [template]=\"nzSuffix\"></span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-input-group-compact]': `nzCompact`,\n    '[class.ant-input-search-enter-button]': `nzSearch`,\n    '[class.ant-input-search]': `nzSearch`,\n    '[class.ant-input-search-sm]': `nzSearch && isSmall`,\n    '[class.ant-input-search-large]': `nzSearch && isLarge`,\n    '[class.ant-input-group-wrapper]': `isAddOn`,\n    '[class.ant-input-group-wrapper-lg]': `isAddOn && isLarge`,\n    '[class.ant-input-group-wrapper-sm]': `isAddOn && isSmall`,\n    '[class.ant-input-affix-wrapper]': `isAffix && !isAddOn`,\n    '[class.ant-input-affix-wrapper-focused]': `isAffix && focused`,\n    '[class.ant-input-affix-wrapper-disabled]': `isAffix && disabled`,\n    '[class.ant-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,\n    '[class.ant-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,\n    '[class.ant-input-group]': `!isAffix && !isAddOn`,\n    '[class.ant-input-group-lg]': `!isAffix && !isAddOn && isLarge`,\n    '[class.ant-input-group-sm]': `!isAffix && !isAddOn && isSmall`\n  }\n})\nexport class NzInputGroupComponent implements AfterContentInit, OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_nzSearch: BooleanInput;\n  static ngAcceptInputType_nzCompact: BooleanInput;\n\n  @ContentChildren(NzInputDirective) listOfNzInputDirective!: QueryList<NzInputDirective>;\n  @Input() nzAddOnBeforeIcon?: string | null = null;\n  @Input() nzAddOnAfterIcon?: string | null = null;\n  @Input() nzPrefixIcon?: string | null = null;\n  @Input() nzSuffixIcon?: string | null = null;\n  @Input() nzAddOnBefore?: string | TemplateRef<void>;\n  @Input() nzAddOnAfter?: string | TemplateRef<void>;\n  @Input() nzPrefix?: string | TemplateRef<void>;\n  @Input() nzSuffix?: string | TemplateRef<void>;\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() @InputBoolean() nzSearch = false;\n  @Input() @InputBoolean() nzCompact = false;\n  isLarge = false;\n  isSmall = false;\n  isAffix = false;\n  isAddOn = false;\n  focused = false;\n  disabled = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(private focusMonitor: FocusMonitor, private elementRef: ElementRef, private cdr: ChangeDetectorRef) {}\n\n  updateChildrenInputSize(): void {\n    if (this.listOfNzInputDirective) {\n      this.listOfNzInputDirective.forEach(item => (item.nzSize = this.nzSize));\n    }\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        this.focused = !!focusOrigin;\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildrenInputSize();\n    const listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n    listOfInputChange$\n      .pipe(\n        switchMap(list => {\n          return merge(...[listOfInputChange$, ...list.map((input: NzInputDirective) => input.disabled$)]);\n        }),\n        flatMap(() => listOfInputChange$),\n        map(list => list.some((input: NzInputDirective) => input.disabled)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(disabled => {\n        this.disabled = disabled;\n        this.cdr.markForCheck();\n      });\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    const {\n      nzSize,\n      nzSuffix,\n      nzPrefix,\n      nzPrefixIcon,\n      nzSuffixIcon,\n      nzAddOnAfter,\n      nzAddOnBefore,\n      nzAddOnAfterIcon,\n      nzAddOnBeforeIcon\n    } = changes;\n    if (nzSize) {\n      this.updateChildrenInputSize();\n      this.isLarge = this.nzSize === 'large';\n      this.isSmall = this.nzSize === 'small';\n    }\n    if (nzSuffix || nzPrefix || nzPrefixIcon || nzSuffixIcon) {\n      this.isAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n    }\n    if (nzAddOnAfter || nzAddOnBefore || nzAddOnAfterIcon || nzAddOnBeforeIcon) {\n      this.isAddOn = !!(this.nzAddOnAfter || this.nzAddOnBefore || this.nzAddOnAfterIcon || this.nzAddOnBeforeIcon);\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterViewInit, Directive, DoCheck, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport interface AutoSizeType {\n  minRows?: number;\n  maxRows?: number;\n}\n\n@Directive({\n  selector: 'textarea[nzAutosize]',\n  exportAs: 'nzAutosize',\n  host: {\n    // Textarea elements that have the directive applied should have a single row by default.\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n    rows: '1',\n    '(input)': 'noopInputHandler()'\n  }\n})\nexport class NzAutosizeDirective implements AfterViewInit, OnDestroy, DoCheck {\n  private autosize: boolean | AutoSizeType = false;\n  private el: HTMLTextAreaElement | HTMLInputElement = this.elementRef.nativeElement;\n  private cachedLineHeight!: number;\n  private previousValue!: string;\n  private previousMinRows: number | undefined;\n  private minRows: number | undefined;\n  private maxRows: number | undefined;\n  private maxHeight: number | null = null;\n  private minHeight: number | null = null;\n  private destroy$ = new Subject();\n  private inputGap = 10;\n\n  @Input()\n  set nzAutosize(value: string | boolean | AutoSizeType) {\n    const isAutoSizeType = (data: string | boolean | AutoSizeType): data is AutoSizeType => {\n      return typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\n    };\n    if (typeof value === 'string') {\n      this.autosize = true;\n    } else if (isAutoSizeType(value)) {\n      this.autosize = value;\n      this.minRows = value.minRows;\n      this.maxRows = value.maxRows;\n      this.maxHeight = this.setMaxHeight();\n      this.minHeight = this.setMinHeight();\n    }\n  }\n\n  resizeToFitContent(force: boolean = false): void {\n    this.cacheTextareaLineHeight();\n\n    // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n    // in checking the height of the textarea.\n    if (!this.cachedLineHeight) {\n      return;\n    }\n\n    const textarea = this.el as HTMLTextAreaElement;\n    const value = textarea.value;\n\n    // Only resize if the value or minRows have changed since these calculations can be expensive.\n    if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n      return;\n    }\n    const placeholderText = textarea.placeholder;\n\n    // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n    // need to be removed temporarily.\n    textarea.classList.add('nz-textarea-autosize-measuring');\n    textarea.placeholder = '';\n    let height = Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight + this.inputGap;\n    if (this.maxHeight !== null && height > this.maxHeight) {\n      height = this.maxHeight!;\n    }\n    if (this.minHeight !== null && height < this.minHeight) {\n      height = this.minHeight!;\n    }\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n    textarea.style.height = `${height}px`;\n    textarea.classList.remove('nz-textarea-autosize-measuring');\n    textarea.placeholder = placeholderText;\n\n    // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n    // We need to re-set the selection in order for it to scroll to the proper position.\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this.ngZone.runOutsideAngular(() =>\n        requestAnimationFrame(() => {\n          const { selectionStart, selectionEnd } = textarea;\n\n          // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n          // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n          // between the time we requested the animation frame and when it was executed.\n          // Also note that we have to assert that the textarea is focused before we set the\n          // selection range. Setting the selection range on a non-focused textarea will cause\n          // it to receive focus on IE and Edge.\n          if (!this.destroy$.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n          }\n        })\n      );\n    }\n\n    this.previousValue = value;\n    this.previousMinRows = this.minRows;\n  }\n\n  private cacheTextareaLineHeight(): void {\n    if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n      return;\n    }\n\n    // Use a clone element because we have to override some styles.\n    const textareaClone = this.el.cloneNode(false) as HTMLTextAreaElement;\n    textareaClone.rows = 1;\n\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n    textareaClone.style.position = 'absolute';\n    textareaClone.style.visibility = 'hidden';\n    textareaClone.style.border = 'none';\n    textareaClone.style.padding = '0';\n    textareaClone.style.height = '';\n    textareaClone.style.minHeight = '';\n    textareaClone.style.maxHeight = '';\n\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    textareaClone.style.overflow = 'hidden';\n\n    this.el.parentNode!.appendChild(textareaClone);\n    this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\n    this.el.parentNode!.removeChild(textareaClone);\n\n    // Min and max heights have to be re-calculated if the cached line height changes\n    this.maxHeight = this.setMaxHeight();\n    this.minHeight = this.setMinHeight();\n  }\n\n  setMinHeight(): number | null {\n    const minHeight = this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\n\n    if (minHeight !== null) {\n      this.el.style.minHeight = `${minHeight}px`;\n    }\n    return minHeight;\n  }\n\n  setMaxHeight(): number | null {\n    const maxHeight = this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\n    if (maxHeight !== null) {\n      this.el.style.maxHeight = `${maxHeight}px`;\n    }\n    return maxHeight;\n  }\n\n  noopInputHandler(): void {\n    // no-op handler that ensures we're running change detection on input events.\n  }\n\n  constructor(private elementRef: ElementRef, private ngZone: NgZone, private platform: Platform, private resizeService: NzResizeService) {}\n\n  ngAfterViewInit(): void {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n      this.resizeService\n        .subscribe()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => this.resizeToFitContent(true));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngDoCheck(): void {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: '[nz-input-group-slot]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n  `,\n  host: {\n    '[class.ant-input-group-addon]': `type === 'addon'`,\n    '[class.ant-input-prefix]': `type === 'prefix'`,\n    '[class.ant-input-suffix]': `type === 'suffix'`\n  }\n})\nexport class NzInputGroupSlotComponent {\n  @Input() icon?: string | null = null;\n  @Input() type: 'addon' | 'prefix' | 'suffix' | null = null;\n  @Input() template?: string | TemplateRef<void> | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzAutosizeDirective } from './autosize.directive';\nimport { NzInputGroupSlotComponent } from './input-group-slot.component';\nimport { NzInputGroupComponent, NzInputGroupWhitSuffixOrPrefixDirective } from './input-group.component';\nimport { NzInputDirective } from './input.directive';\n\n@NgModule({\n  declarations: [\n    NzInputDirective,\n    NzInputGroupComponent,\n    NzAutosizeDirective,\n    NzInputGroupSlotComponent,\n    NzInputGroupWhitSuffixOrPrefixDirective\n  ],\n  exports: [NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupWhitSuffixOrPrefixDirective],\n  imports: [CommonModule, NzIconModule, PlatformModule, NzOutletModule]\n})\nexport class NzInputModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './input-group.component';\nexport * from './input.module';\nexport * from './input-group.component';\nexport * from './input-group-slot.component';\nexport * from './input.directive';\nexport * from './autosize.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}