{"ast":null,"code":"import _defineProperty from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { MediaMatcher, LayoutModule } from '@angular/cdk/layout';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Directive, ElementRef, Renderer2, NgZone, Input, Optional, Host, NgModule } from '@angular/core';\nimport { gridResponsiveMap, NzBreakpointService } from 'ng-zorro-antd/core/services';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { isNotNil } from 'ng-zorro-antd/core/util';\nimport { CommonModule } from '@angular/common';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/layout';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/services';\n\nvar NzRowDirective = /*#__PURE__*/function () {\n  function NzRowDirective(elementRef, renderer, mediaMatcher, ngZone, platform, breakpointService) {\n    _classCallCheck(this, NzRowDirective);\n\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.mediaMatcher = mediaMatcher;\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.breakpointService = breakpointService;\n    this.nzAlign = null;\n    this.nzJustify = null;\n    this.nzGutter = null;\n    this.actualGutter$ = new ReplaySubject(1);\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzRowDirective, [{\n    key: \"getGutter\",\n    value: function getGutter() {\n      var _this = this;\n\n      var results = [null, null];\n      var gutter = this.nzGutter || 0;\n      var normalizedGutter = Array.isArray(gutter) ? gutter : [gutter, null];\n      normalizedGutter.forEach(function (g, index) {\n        if (typeof g === 'object' && g !== null) {\n          results[index] = null;\n          Object.keys(gridResponsiveMap).map(function (screen) {\n            var bp = screen;\n\n            if (_this.mediaMatcher.matchMedia(gridResponsiveMap[bp]).matches && g[bp]) {\n              results[index] = g[bp];\n            }\n          });\n        } else {\n          results[index] = g || null;\n        }\n      });\n      return results;\n    }\n  }, {\n    key: \"setGutterStyle\",\n    value: function setGutterStyle() {\n      var _this2 = this;\n\n      var _this$getGutter = this.getGutter(),\n          _this$getGutter2 = _slicedToArray(_this$getGutter, 2),\n          horizontalGutter = _this$getGutter2[0],\n          verticalGutter = _this$getGutter2[1];\n\n      this.actualGutter$.next([horizontalGutter, verticalGutter]);\n\n      var renderGutter = function renderGutter(name, gutter) {\n        var nativeElement = _this2.elementRef.nativeElement;\n\n        if (gutter !== null) {\n          _this2.renderer.setStyle(nativeElement, name, \"-\".concat(gutter / 2, \"px\"));\n        }\n      };\n\n      renderGutter('margin-left', horizontalGutter);\n      renderGutter('margin-right', horizontalGutter);\n      renderGutter('margin-top', verticalGutter);\n      renderGutter('margin-bottom', verticalGutter);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.setGutterStyle();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.nzGutter) {\n        this.setGutterStyle();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this3 = this;\n\n      if (this.platform.isBrowser) {\n        this.breakpointService.subscribe(gridResponsiveMap).pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this3.setGutterStyle();\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzRowDirective;\n}();\n\nNzRowDirective.ɵfac = function NzRowDirective_Factory(t) {\n  return new (t || NzRowDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NzBreakpointService));\n};\n\nNzRowDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzRowDirective,\n  selectors: [[\"\", \"nz-row\", \"\"], [\"nz-row\"], [\"nz-form-item\"]],\n  hostVars: 18,\n  hostBindings: function NzRowDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-row\", true)(\"ant-row-top\", ctx.nzAlign === \"top\")(\"ant-row-middle\", ctx.nzAlign === \"middle\")(\"ant-row-bottom\", ctx.nzAlign === \"bottom\")(\"ant-row-start\", ctx.nzJustify === \"start\")(\"ant-row-end\", ctx.nzJustify === \"end\")(\"ant-row-center\", ctx.nzJustify === \"center\")(\"ant-row-space-around\", ctx.nzJustify === \"space-around\")(\"ant-row-space-between\", ctx.nzJustify === \"space-between\");\n    }\n  },\n  inputs: {\n    nzAlign: \"nzAlign\",\n    nzJustify: \"nzJustify\",\n    nzGutter: \"nzGutter\"\n  },\n  exportAs: [\"nzRow\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNzRowDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: MediaMatcher\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: NzBreakpointService\n  }];\n};\n\nNzRowDirective.propDecorators = {\n  nzAlign: [{\n    type: Input\n  }],\n  nzJustify: [{\n    type: Input\n  }],\n  nzGutter: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzRowDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-row],nz-row,nz-form-item',\n      exportAs: 'nzRow',\n      host: {\n        '[class.ant-row]': \"true\",\n        '[class.ant-row-top]': \"nzAlign === 'top'\",\n        '[class.ant-row-middle]': \"nzAlign === 'middle'\",\n        '[class.ant-row-bottom]': \"nzAlign === 'bottom'\",\n        '[class.ant-row-start]': \"nzJustify === 'start'\",\n        '[class.ant-row-end]': \"nzJustify === 'end'\",\n        '[class.ant-row-center]': \"nzJustify === 'center'\",\n        '[class.ant-row-space-around]': \"nzJustify === 'space-around'\",\n        '[class.ant-row-space-between]': \"nzJustify === 'space-between'\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.MediaMatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: ɵngcc3.NzBreakpointService\n    }];\n  }, {\n    nzAlign: [{\n      type: Input\n    }],\n    nzJustify: [{\n      type: Input\n    }],\n    nzGutter: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzColDirective = /*#__PURE__*/function () {\n  function NzColDirective(elementRef, nzRowDirective, renderer) {\n    _classCallCheck(this, NzColDirective);\n\n    this.elementRef = elementRef;\n    this.nzRowDirective = nzRowDirective;\n    this.renderer = renderer;\n    this.classMap = {};\n    this.destroy$ = new Subject();\n    this.hostFlexStyle = null;\n    this.nzFlex = null;\n    this.nzSpan = null;\n    this.nzOrder = null;\n    this.nzOffset = null;\n    this.nzPush = null;\n    this.nzPull = null;\n    this.nzXs = null;\n    this.nzSm = null;\n    this.nzMd = null;\n    this.nzLg = null;\n    this.nzXl = null;\n    this.nzXXl = null;\n  }\n\n  _createClass(NzColDirective, [{\n    key: \"setHostClassMap\",\n    value: function setHostClassMap() {\n      var _Object$assign;\n\n      var hostClassMap = Object.assign((_Object$assign = {}, _defineProperty(_Object$assign, 'ant-col', true), _defineProperty(_Object$assign, \"ant-col-\".concat(this.nzSpan), isNotNil(this.nzSpan)), _defineProperty(_Object$assign, \"ant-col-order-\".concat(this.nzOrder), isNotNil(this.nzOrder)), _defineProperty(_Object$assign, \"ant-col-offset-\".concat(this.nzOffset), isNotNil(this.nzOffset)), _defineProperty(_Object$assign, \"ant-col-pull-\".concat(this.nzPull), isNotNil(this.nzPull)), _defineProperty(_Object$assign, \"ant-col-push-\".concat(this.nzPush), isNotNil(this.nzPush)), _Object$assign), this.generateClass());\n\n      for (var i in this.classMap) {\n        if (this.classMap.hasOwnProperty(i)) {\n          this.renderer.removeClass(this.elementRef.nativeElement, i);\n        }\n      }\n\n      this.classMap = Object.assign({}, hostClassMap);\n\n      for (var _i in this.classMap) {\n        if (this.classMap.hasOwnProperty(_i) && this.classMap[_i]) {\n          this.renderer.addClass(this.elementRef.nativeElement, _i);\n        }\n      }\n    }\n  }, {\n    key: \"setHostFlexStyle\",\n    value: function setHostFlexStyle() {\n      this.hostFlexStyle = this.parseFlex(this.nzFlex);\n    }\n  }, {\n    key: \"parseFlex\",\n    value: function parseFlex(flex) {\n      if (typeof flex === 'number') {\n        return \"\".concat(flex, \" \").concat(flex, \" auto\");\n      } else if (typeof flex === 'string') {\n        if (/^\\d+(\\.\\d+)?(px|em|rem|%)$/.test(flex)) {\n          return \"0 0 \".concat(flex);\n        }\n      }\n\n      return flex;\n    }\n  }, {\n    key: \"generateClass\",\n    value: function generateClass() {\n      var _this4 = this;\n\n      var listOfSizeInputName = ['nzXs', 'nzSm', 'nzMd', 'nzLg', 'nzXl', 'nzXXl'];\n      var listClassMap = {};\n      listOfSizeInputName.forEach(function (name) {\n        var sizeName = name.replace('nz', '').toLowerCase();\n\n        if (isNotNil(_this4[name])) {\n          if (typeof _this4[name] === 'number' || typeof _this4[name] === 'string') {\n            listClassMap[\"ant-col-\".concat(sizeName, \"-\").concat(_this4[name])] = true;\n          } else {\n            var embedded = _this4[name];\n            var prefixArray = ['span', 'pull', 'push', 'offset', 'order'];\n            prefixArray.forEach(function (prefix) {\n              var prefixClass = prefix === 'span' ? '-' : \"-\".concat(prefix, \"-\");\n              listClassMap[\"ant-col-\".concat(sizeName).concat(prefixClass).concat(embedded[prefix])] = embedded && isNotNil(embedded[prefix]);\n            });\n          }\n        }\n      });\n      return listClassMap;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.setHostClassMap();\n      this.setHostFlexStyle();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.setHostClassMap();\n      var nzFlex = changes.nzFlex;\n\n      if (nzFlex) {\n        this.setHostFlexStyle();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this5 = this;\n\n      if (this.nzRowDirective) {\n        this.nzRowDirective.actualGutter$.pipe(takeUntil(this.destroy$)).subscribe(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              horizontalGutter = _ref2[0],\n              verticalGutter = _ref2[1];\n\n          var renderGutter = function renderGutter(name, gutter) {\n            var nativeElement = _this5.elementRef.nativeElement;\n\n            if (gutter !== null) {\n              _this5.renderer.setStyle(nativeElement, name, \"\".concat(gutter / 2, \"px\"));\n            }\n          };\n\n          renderGutter('padding-left', horizontalGutter);\n          renderGutter('padding-right', horizontalGutter);\n          renderGutter('padding-top', verticalGutter);\n          renderGutter('padding-bottom', verticalGutter);\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzColDirective;\n}();\n\nNzColDirective.ɵfac = function NzColDirective_Factory(t) {\n  return new (t || NzColDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzRowDirective, 9), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNzColDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzColDirective,\n  selectors: [[\"\", \"nz-col\", \"\"], [\"nz-col\"], [\"nz-form-control\"], [\"nz-form-label\"]],\n  hostVars: 2,\n  hostBindings: function NzColDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"flex\", ctx.hostFlexStyle);\n    }\n  },\n  inputs: {\n    nzFlex: \"nzFlex\",\n    nzSpan: \"nzSpan\",\n    nzOrder: \"nzOrder\",\n    nzOffset: \"nzOffset\",\n    nzPush: \"nzPush\",\n    nzPull: \"nzPull\",\n    nzXs: \"nzXs\",\n    nzSm: \"nzSm\",\n    nzMd: \"nzMd\",\n    nzLg: \"nzLg\",\n    nzXl: \"nzXl\",\n    nzXXl: \"nzXXl\"\n  },\n  exportAs: [\"nzCol\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNzColDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NzRowDirective,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }, {\n    type: Renderer2\n  }];\n};\n\nNzColDirective.propDecorators = {\n  nzFlex: [{\n    type: Input\n  }],\n  nzSpan: [{\n    type: Input\n  }],\n  nzOrder: [{\n    type: Input\n  }],\n  nzOffset: [{\n    type: Input\n  }],\n  nzPush: [{\n    type: Input\n  }],\n  nzPull: [{\n    type: Input\n  }],\n  nzXs: [{\n    type: Input\n  }],\n  nzSm: [{\n    type: Input\n  }],\n  nzMd: [{\n    type: Input\n  }],\n  nzLg: [{\n    type: Input\n  }],\n  nzXl: [{\n    type: Input\n  }],\n  nzXXl: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzColDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-col],nz-col,nz-form-control,nz-form-label',\n      exportAs: 'nzCol',\n      host: {\n        '[style.flex]': 'hostFlexStyle'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NzRowDirective,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    nzFlex: [{\n      type: Input\n    }],\n    nzSpan: [{\n      type: Input\n    }],\n    nzOrder: [{\n      type: Input\n    }],\n    nzOffset: [{\n      type: Input\n    }],\n    nzPush: [{\n      type: Input\n    }],\n    nzPull: [{\n      type: Input\n    }],\n    nzXs: [{\n      type: Input\n    }],\n    nzSm: [{\n      type: Input\n    }],\n    nzMd: [{\n      type: Input\n    }],\n    nzLg: [{\n      type: Input\n    }],\n    nzXl: [{\n      type: Input\n    }],\n    nzXXl: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzGridModule = function NzGridModule() {\n  _classCallCheck(this, NzGridModule);\n};\n\nNzGridModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzGridModule\n});\nNzGridModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzGridModule_Factory(t) {\n    return new (t || NzGridModule)();\n  },\n  imports: [[CommonModule, LayoutModule, PlatformModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzGridModule, {\n    declarations: function declarations() {\n      return [NzColDirective, NzRowDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, LayoutModule, PlatformModule];\n    },\n    exports: function exports() {\n      return [NzColDirective, NzRowDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzGridModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzColDirective, NzRowDirective],\n      exports: [NzColDirective, NzRowDirective],\n      imports: [CommonModule, LayoutModule, PlatformModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzColDirective, NzGridModule, NzRowDirective };","map":{"version":3,"sources":["../../components/grid/row.directive.ts","../../components/grid/col.directive.ts","../../components/grid/grid.module.ts","../../components/grid/public-api.ts","../../components/grid/ng-zorro-antd-grid.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterViewInit, Directive, ElementRef, Input, NgZone, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';\nimport { gridResponsiveMap, NzBreakpointKey, NzBreakpointService } from 'ng-zorro-antd/core/services';\nimport { IndexableObject } from 'ng-zorro-antd/core/types';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport type NzJustify = 'start' | 'end' | 'center' | 'space-around' | 'space-between';\nexport type NzAlign = 'top' | 'middle' | 'bottom';\n\n@Directive({\n  selector: '[nz-row],nz-row,nz-form-item',\n  exportAs: 'nzRow',\n  host: {\n    '[class.ant-row]': `true`,\n    '[class.ant-row-top]': `nzAlign === 'top'`,\n    '[class.ant-row-middle]': `nzAlign === 'middle'`,\n    '[class.ant-row-bottom]': `nzAlign === 'bottom'`,\n    '[class.ant-row-start]': `nzJustify === 'start'`,\n    '[class.ant-row-end]': `nzJustify === 'end'`,\n    '[class.ant-row-center]': `nzJustify === 'center'`,\n    '[class.ant-row-space-around]': `nzJustify === 'space-around'`,\n    '[class.ant-row-space-between]': `nzJustify === 'space-between'`\n  }\n})\nexport class NzRowDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input() nzAlign: NzAlign | null = null;\n  @Input() nzJustify: NzJustify | null = null;\n  @Input() nzGutter: number | IndexableObject | [number, number] | [IndexableObject, IndexableObject] | null = null;\n\n  readonly actualGutter$ = new ReplaySubject<[number | null, number | null]>(1);\n\n  private readonly destroy$ = new Subject();\n\n  getGutter(): [number | null, number | null] {\n    const results: [number | null, number | null] = [null, null];\n    const gutter = this.nzGutter || 0;\n    const normalizedGutter = Array.isArray(gutter) ? gutter : [gutter, null];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object' && g !== null) {\n        results[index] = null;\n        Object.keys(gridResponsiveMap).map((screen: string) => {\n          const bp = screen as NzBreakpointKey;\n          if (this.mediaMatcher.matchMedia(gridResponsiveMap[bp]).matches && g[bp]) {\n            results[index] = g![bp] as number;\n          }\n        });\n      } else {\n        results[index] = g || null;\n      }\n    });\n    return results;\n  }\n\n  setGutterStyle(): void {\n    const [horizontalGutter, verticalGutter] = this.getGutter();\n    this.actualGutter$.next([horizontalGutter, verticalGutter]);\n    const renderGutter = (name: string, gutter: number | null) => {\n      const nativeElement = this.elementRef.nativeElement;\n      if (gutter !== null) {\n        this.renderer.setStyle(nativeElement, name, `-${gutter / 2}px`);\n      }\n    };\n    renderGutter('margin-left', horizontalGutter);\n    renderGutter('margin-right', horizontalGutter);\n    renderGutter('margin-top', verticalGutter);\n    renderGutter('margin-bottom', verticalGutter);\n  }\n\n  constructor(\n    public elementRef: ElementRef,\n    public renderer: Renderer2,\n    public mediaMatcher: MediaMatcher,\n    public ngZone: NgZone,\n    public platform: Platform,\n    private breakpointService: NzBreakpointService\n  ) {}\n\n  ngOnInit(): void {\n    this.setGutterStyle();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzGutter) {\n      this.setGutterStyle();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.platform.isBrowser) {\n      this.breakpointService\n        .subscribe(gridResponsiveMap)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.setGutterStyle();\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { NgClassInterface } from 'ng-zorro-antd/core/types';\nimport { isNotNil } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzRowDirective } from './row.directive';\n\nexport interface EmbeddedProperty {\n  span?: number;\n  pull?: number;\n  push?: number;\n  offset?: number;\n  order?: number;\n}\n\n@Directive({\n  selector: '[nz-col],nz-col,nz-form-control,nz-form-label',\n  exportAs: 'nzCol',\n  host: {\n    '[style.flex]': 'hostFlexStyle'\n  }\n})\nexport class NzColDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  private classMap: { [key: string]: boolean } = {};\n  private destroy$ = new Subject();\n  hostFlexStyle: string | null = null;\n  @Input() nzFlex: string | number | null = null;\n  @Input() nzSpan: string | number | null = null;\n  @Input() nzOrder: string | number | null = null;\n  @Input() nzOffset: string | number | null = null;\n  @Input() nzPush: string | number | null = null;\n  @Input() nzPull: string | number | null = null;\n  @Input() nzXs: string | number | EmbeddedProperty | null = null;\n  @Input() nzSm: string | number | EmbeddedProperty | null = null;\n  @Input() nzMd: string | number | EmbeddedProperty | null = null;\n  @Input() nzLg: string | number | EmbeddedProperty | null = null;\n  @Input() nzXl: string | number | EmbeddedProperty | null = null;\n  @Input() nzXXl: string | number | EmbeddedProperty | null = null;\n\n  setHostClassMap(): void {\n    const hostClassMap = {\n      ['ant-col']: true,\n      [`ant-col-${this.nzSpan}`]: isNotNil(this.nzSpan),\n      [`ant-col-order-${this.nzOrder}`]: isNotNil(this.nzOrder),\n      [`ant-col-offset-${this.nzOffset}`]: isNotNil(this.nzOffset),\n      [`ant-col-pull-${this.nzPull}`]: isNotNil(this.nzPull),\n      [`ant-col-push-${this.nzPush}`]: isNotNil(this.nzPush),\n      ...this.generateClass()\n    };\n    for (const i in this.classMap) {\n      if (this.classMap.hasOwnProperty(i)) {\n        this.renderer.removeClass(this.elementRef.nativeElement, i);\n      }\n    }\n    this.classMap = { ...hostClassMap };\n    for (const i in this.classMap) {\n      if (this.classMap.hasOwnProperty(i) && this.classMap[i]) {\n        this.renderer.addClass(this.elementRef.nativeElement, i);\n      }\n    }\n  }\n\n  setHostFlexStyle(): void {\n    this.hostFlexStyle = this.parseFlex(this.nzFlex);\n  }\n\n  parseFlex(flex: number | string | null): string | null {\n    if (typeof flex === 'number') {\n      return `${flex} ${flex} auto`;\n    } else if (typeof flex === 'string') {\n      if (/^\\d+(\\.\\d+)?(px|em|rem|%)$/.test(flex)) {\n        return `0 0 ${flex}`;\n      }\n    }\n    return flex;\n  }\n\n  generateClass(): object {\n    const listOfSizeInputName: Array<keyof NzColDirective> = ['nzXs', 'nzSm', 'nzMd', 'nzLg', 'nzXl', 'nzXXl'];\n    const listClassMap: NgClassInterface = {};\n    listOfSizeInputName.forEach(name => {\n      const sizeName = name.replace('nz', '').toLowerCase();\n      if (isNotNil(this[name])) {\n        if (typeof this[name] === 'number' || typeof this[name] === 'string') {\n          listClassMap[`ant-col-${sizeName}-${this[name]}`] = true;\n        } else {\n          const embedded = this[name] as EmbeddedProperty;\n          const prefixArray: Array<keyof EmbeddedProperty> = ['span', 'pull', 'push', 'offset', 'order'];\n          prefixArray.forEach(prefix => {\n            const prefixClass = prefix === 'span' ? '-' : `-${prefix}-`;\n            listClassMap[`ant-col-${sizeName}${prefixClass}${embedded[prefix]}`] = embedded && isNotNil(embedded[prefix]);\n          });\n        }\n      }\n    });\n    return listClassMap;\n  }\n\n  constructor(private elementRef: ElementRef, @Optional() @Host() public nzRowDirective: NzRowDirective, public renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.setHostClassMap();\n    this.setHostFlexStyle();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.setHostClassMap();\n    const { nzFlex } = changes;\n    if (nzFlex) {\n      this.setHostFlexStyle();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzRowDirective) {\n      this.nzRowDirective.actualGutter$.pipe(takeUntil(this.destroy$)).subscribe(([horizontalGutter, verticalGutter]) => {\n        const renderGutter = (name: string, gutter: number | null) => {\n          const nativeElement = this.elementRef.nativeElement;\n          if (gutter !== null) {\n            this.renderer.setStyle(nativeElement, name, `${gutter / 2}px`);\n          }\n        };\n        renderGutter('padding-left', horizontalGutter);\n        renderGutter('padding-right', horizontalGutter);\n        renderGutter('padding-top', verticalGutter);\n        renderGutter('padding-bottom', verticalGutter);\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzColDirective } from './col.directive';\nimport { NzRowDirective } from './row.directive';\n\n@NgModule({\n  declarations: [NzColDirective, NzRowDirective],\n  exports: [NzColDirective, NzRowDirective],\n  imports: [CommonModule, LayoutModule, PlatformModule]\n})\nexport class NzGridModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './row.directive';\nexport * from './col.directive';\nexport * from './grid.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}