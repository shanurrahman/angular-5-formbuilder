{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/outlet';\n\nfunction NzBadgeComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\n\nfunction NzBadgeComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"span\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(3, NzBadgeComponent_ng_container_0_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"ant-badge-status-dot ant-badge-status-\", ctx_r0.nzStatus || ctx_r0.presetColor, \"\");\n    ɵngcc0.ɵɵstyleProp(\"background\", !ctx_r0.presetColor && ctx_r0.nzColor);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.nzStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n  }\n}\n\nfunction NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-badge-sup\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"nzOffset\", ctx_r3.nzOffset)(\"nzTitle\", ctx_r3.nzTitle)(\"nzStyle\", ctx_r3.nzStyle)(\"nzDot\", ctx_r3.nzDot)(\"nzOverflowCount\", ctx_r3.nzOverflowCount)(\"disableAnimation\", !!(ctx_r3.nzStandalone || ctx_r3.nzStatus || ctx_r3.nzColor))(\"nzCount\", ctx_r3.nzCount);\n  }\n}\n\nfunction NzBadgeComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template, 1, 7, \"nz-badge-sup\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showSup);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var p_r8 = ctx.$implicit;\n    var i_r5 = ɵngcc0.ɵɵnextContext(2).index;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"current\", p_r8 === ctx_r7.countArray[i_r5]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", p_r8, \" \");\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template, 2, 3, \"p\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r6.countSingleArray);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var i_r5 = ctx.index;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"transform\", \"translateY(\" + -ctx_r3.countArray[i_r5] * 100 + \"%)\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.nzDot && ctx_r3.countArray[i_r5] !== undefined);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_Template, 2, 3, \"span\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.maxNumberArray);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r2.nzOverflowCount, \"+\");\n  }\n}\n\nfunction NzRibbonComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.nzText);\n  }\n}\n\nvar badgePresetColors = ['pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NZ_CONFIG_MODULE_NAME = 'badge';\n\nvar NzBadgeComponent = /*#__PURE__*/function () {\n  function NzBadgeComponent(nzConfigService) {\n    _classCallCheck(this, NzBadgeComponent);\n\n    this.nzConfigService = nzConfigService;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.showSup = false;\n    this.presetColor = null;\n    this.nzShowZero = false;\n    this.nzShowDot = true;\n    this.nzStandalone = false;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.nzColor = undefined;\n    this.nzStyle = null;\n    this.nzText = null;\n  }\n\n  _createClass(NzBadgeComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzColor = changes.nzColor,\n          nzShowDot = changes.nzShowDot,\n          nzDot = changes.nzDot,\n          nzCount = changes.nzCount,\n          nzShowZero = changes.nzShowZero;\n\n      if (nzColor) {\n        this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n      }\n\n      if (nzShowDot || nzDot || nzCount || nzShowZero) {\n        this.showSup = this.nzShowDot && this.nzDot || this.nzCount > 0 || this.nzCount <= 0 && this.nzShowZero;\n      }\n    }\n  }]);\n\n  return NzBadgeComponent;\n}();\n\nNzBadgeComponent.ɵfac = function NzBadgeComponent_Factory(t) {\n  return new (t || NzBadgeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService));\n};\n\nNzBadgeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzBadgeComponent,\n  selectors: [[\"nz-badge\"]],\n  hostVars: 6,\n  hostBindings: function NzBadgeComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-badge\", true)(\"ant-badge-status\", ctx.nzStatus)(\"ant-badge-not-a-wrapper\", !!(ctx.nzStandalone || ctx.nzStatus || ctx.nzColor));\n    }\n  },\n  inputs: {\n    nzShowZero: \"nzShowZero\",\n    nzShowDot: \"nzShowDot\",\n    nzStandalone: \"nzStandalone\",\n    nzDot: \"nzDot\",\n    nzOverflowCount: \"nzOverflowCount\",\n    nzColor: \"nzColor\",\n    nzStyle: \"nzStyle\",\n    nzText: \"nzText\",\n    nzTitle: \"nzTitle\",\n    nzStatus: \"nzStatus\",\n    nzCount: \"nzCount\",\n    nzOffset: \"nzOffset\"\n  },\n  exportAs: [\"nzBadge\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [3, \"ngStyle\"], [1, \"ant-badge-status-text\"], [3, \"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", 4, \"ngIf\"], [3, \"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\"]],\n  template: function NzBadgeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzBadgeComponent_ng_container_0_Template, 4, 7, \"ng-container\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵtemplate(2, NzBadgeComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzStatus || ctx.nzColor);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzCount);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc2.NgIf, ɵngcc3.NzStringTemplateOutletDirective, ɵngcc2.NgStyle, NzBadgeSupComponent];\n  },\n  encapsulation: 2,\n  data: {\n    animation: [zoomBadgeMotion]\n  },\n  changeDetection: 0\n});\n\nNzBadgeComponent.ctorParameters = function () {\n  return [{\n    type: NzConfigService\n  }];\n};\n\nNzBadgeComponent.propDecorators = {\n  nzShowZero: [{\n    type: Input\n  }],\n  nzShowDot: [{\n    type: Input\n  }],\n  nzStandalone: [{\n    type: Input\n  }],\n  nzDot: [{\n    type: Input\n  }],\n  nzOverflowCount: [{\n    type: Input\n  }],\n  nzColor: [{\n    type: Input\n  }],\n  nzStyle: [{\n    type: Input\n  }],\n  nzText: [{\n    type: Input\n  }],\n  nzTitle: [{\n    type: Input\n  }],\n  nzStatus: [{\n    type: Input\n  }],\n  nzCount: [{\n    type: Input\n  }],\n  nzOffset: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzBadgeComponent.prototype, \"nzDot\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", Number)], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", String)], NzBadgeComponent.prototype, \"nzColor\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzBadgeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge',\n      exportAs: 'nzBadge',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      template: \"\\n    <ng-container *ngIf=\\\"nzStatus || nzColor\\\">\\n      <span\\n        class=\\\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\\\"\\n        [style.background]=\\\"!presetColor && nzColor\\\"\\n        [ngStyle]=\\\"nzStyle\\\"\\n      ></span>\\n      <span class=\\\"ant-badge-status-text\\\">\\n        <ng-container *nzStringTemplateOutlet=\\\"nzText\\\">{{ nzText }}</ng-container>\\n      </span>\\n    </ng-container>\\n    <ng-content></ng-content>\\n    <ng-container *nzStringTemplateOutlet=\\\"nzCount\\\">\\n      <nz-badge-sup\\n        *ngIf=\\\"showSup\\\"\\n        [nzOffset]=\\\"nzOffset\\\"\\n        [nzTitle]=\\\"nzTitle\\\"\\n        [nzStyle]=\\\"nzStyle\\\"\\n        [nzDot]=\\\"nzDot\\\"\\n        [nzOverflowCount]=\\\"nzOverflowCount\\\"\\n        [disableAnimation]=\\\"!!(nzStandalone || nzStatus || nzColor)\\\"\\n        [nzCount]=\\\"nzCount\\\"\\n      ></nz-badge-sup>\\n    </ng-container>\\n  \",\n      host: {\n        '[class.ant-badge]': 'true',\n        '[class.ant-badge-status]': 'nzStatus',\n        '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.NzConfigService\n    }];\n  }, {\n    nzShowZero: [{\n      type: Input\n    }],\n    nzShowDot: [{\n      type: Input\n    }],\n    nzStandalone: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    nzColor: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }],\n    nzOffset: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzBadgeSupComponent = /*#__PURE__*/function () {\n  function NzBadgeSupComponent() {\n    _classCallCheck(this, NzBadgeSupComponent);\n\n    this.nzStyle = null;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.disableAnimation = false;\n    this.maxNumberArray = [];\n    this.countArray = [];\n    this.count = 0;\n    this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  }\n\n  _createClass(NzBadgeSupComponent, [{\n    key: \"generateMaxNumberArray\",\n    value: function generateMaxNumberArray() {\n      this.maxNumberArray = this.nzOverflowCount.toString().split('');\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.generateMaxNumberArray();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzOverflowCount = changes.nzOverflowCount,\n          nzCount = changes.nzCount;\n\n      if (nzCount && typeof nzCount.currentValue === 'number') {\n        this.count = Math.max(0, nzCount.currentValue);\n        this.countArray = this.count.toString().split('').map(function (item) {\n          return +item;\n        });\n      }\n\n      if (nzOverflowCount) {\n        this.generateMaxNumberArray();\n      }\n    }\n  }]);\n\n  return NzBadgeSupComponent;\n}();\n\nNzBadgeSupComponent.ɵfac = function NzBadgeSupComponent_Factory(t) {\n  return new (t || NzBadgeSupComponent)();\n};\n\nNzBadgeSupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzBadgeSupComponent,\n  selectors: [[\"nz-badge-sup\"]],\n  hostVars: 17,\n  hostBindings: function NzBadgeSupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"title\", ctx.nzTitle === null ? \"\" : ctx.nzTitle || ctx.nzCount);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.disableAnimation)(\"@zoomBadgeMotion\", undefined);\n      ɵngcc0.ɵɵstyleMap(ctx.nzStyle);\n      ɵngcc0.ɵɵstyleProp(\"right\", ctx.nzOffset && ctx.nzOffset[0] ? -ctx.nzOffset[0] : null, \"px\")(\"margin-top\", ctx.nzOffset && ctx.nzOffset[1] ? ctx.nzOffset[1] : null, \"px\");\n      ɵngcc0.ɵɵclassProp(\"ant-scroll-number\", true)(\"ant-badge-count\", !ctx.nzDot)(\"ant-badge-dot\", ctx.nzDot)(\"ant-badge-multiple-words\", ctx.countArray.length >= 2);\n    }\n  },\n  inputs: {\n    nzStyle: \"nzStyle\",\n    nzDot: \"nzDot\",\n    nzOverflowCount: \"nzOverflowCount\",\n    disableAnimation: \"disableAnimation\",\n    nzOffset: \"nzOffset\",\n    nzTitle: \"nzTitle\",\n    nzCount: \"nzCount\"\n  },\n  exportAs: [\"nzBadgeSup\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"overflowTemplate\", \"\"], [\"class\", \"ant-scroll-number-only\", 3, \"transform\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only\"], [4, \"ngIf\"], [\"class\", \"ant-scroll-number-only-unit\", 3, \"current\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only-unit\"]],\n  template: function NzBadgeSupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzBadgeSupComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzBadgeSupComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r1 = ɵngcc0.ɵɵreference(2);\n\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.count <= ctx.nzOverflowCount)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc2.NgForOf],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBadgeMotion]\n  },\n  changeDetection: 0\n});\nNzBadgeSupComponent.propDecorators = {\n  nzOffset: [{\n    type: Input\n  }],\n  nzTitle: [{\n    type: Input\n  }],\n  nzStyle: [{\n    type: Input\n  }],\n  nzDot: [{\n    type: Input\n  }],\n  nzOverflowCount: [{\n    type: Input\n  }],\n  disableAnimation: [{\n    type: Input\n  }],\n  nzCount: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzBadgeSupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge-sup',\n      exportAs: 'nzBadgeSup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      template: \"\\n    <ng-container *ngIf=\\\"count <= nzOverflowCount; else overflowTemplate\\\">\\n      <span\\n        *ngFor=\\\"let n of maxNumberArray; let i = index\\\"\\n        class=\\\"ant-scroll-number-only\\\"\\n        [style.transform]=\\\"'translateY(' + -countArray[i] * 100 + '%)'\\\"\\n      >\\n        <ng-container *ngIf=\\\"!nzDot && countArray[i] !== undefined\\\">\\n          <p *ngFor=\\\"let p of countSingleArray\\\" class=\\\"ant-scroll-number-only-unit\\\" [class.current]=\\\"p === countArray[i]\\\">\\n            {{ p }}\\n          </p>\\n        </ng-container>\\n      </span>\\n    </ng-container>\\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\\n  \",\n      host: {\n        '[@.disabled]': \"disableAnimation\",\n        '[@zoomBadgeMotion]': '',\n        '[attr.title]': \"nzTitle === null ? '' : nzTitle || nzCount\",\n        '[style]': \"nzStyle\",\n        '[style.right.px]': \"nzOffset && nzOffset[0] ? -nzOffset[0] : null\",\n        '[style.margin-top.px]': \"nzOffset && nzOffset[1] ? nzOffset[1] : null\",\n        '[class.ant-scroll-number]': 'true',\n        '[class.ant-badge-count]': \"!nzDot\",\n        '[class.ant-badge-dot]': \"nzDot\",\n        '[class.ant-badge-multiple-words]': \"countArray.length >= 2\"\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzStyle: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    disableAnimation: [{\n      type: Input\n    }],\n    nzOffset: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzRibbonComponent = /*#__PURE__*/function () {\n  function NzRibbonComponent() {\n    _classCallCheck(this, NzRibbonComponent);\n\n    this.nzPlacement = 'end';\n    this.nzText = null;\n    this.presetColor = null;\n  }\n\n  _createClass(NzRibbonComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzColor = changes.nzColor;\n\n      if (nzColor) {\n        this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n      }\n    }\n  }]);\n\n  return NzRibbonComponent;\n}();\n\nNzRibbonComponent.ɵfac = function NzRibbonComponent_Factory(t) {\n  return new (t || NzRibbonComponent)();\n};\n\nNzRibbonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzRibbonComponent,\n  selectors: [[\"nz-ribbon\"]],\n  hostVars: 2,\n  hostBindings: function NzRibbonComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-ribbon-wrapper\", true);\n    }\n  },\n  inputs: {\n    nzPlacement: \"nzPlacement\",\n    nzText: \"nzText\",\n    nzColor: \"nzColor\"\n  },\n  exportAs: [\"nzRibbon\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 11,\n  consts: [[1, \"ant-ribbon\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-ribbon-corner\"]],\n  template: function NzRibbonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(2, NzRibbonComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMap(ctx.presetColor && \"ant-ribbon-color-\" + ctx.presetColor);\n      ɵngcc0.ɵɵstyleProp(\"background-color\", !ctx.presetColor && ctx.nzColor);\n      ɵngcc0.ɵɵclassProp(\"ant-ribbon-placement-end\", ctx.nzPlacement === \"end\")(\"ant-ribbon-placement-start\", ctx.nzPlacement === \"start\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzText);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"color\", !ctx.presetColor && ctx.nzColor);\n    }\n  },\n  directives: [ɵngcc3.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzRibbonComponent.propDecorators = {\n  nzColor: [{\n    type: Input\n  }],\n  nzPlacement: [{\n    type: Input\n  }],\n  nzText: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzRibbonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-ribbon',\n      exportAs: 'nzRibbon',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <ng-content></ng-content>\\n    <div\\n      class=\\\"ant-ribbon\\\"\\n      [class]=\\\"presetColor && 'ant-ribbon-color-' + presetColor\\\"\\n      [class.ant-ribbon-placement-end]=\\\"nzPlacement === 'end'\\\"\\n      [class.ant-ribbon-placement-start]=\\\"nzPlacement === 'start'\\\"\\n      [style.background-color]=\\\"!presetColor && nzColor\\\"\\n    >\\n      <ng-container *nzStringTemplateOutlet=\\\"nzText\\\">{{ nzText }}</ng-container>\\n      <div class=\\\"ant-ribbon-corner\\\" [style.color]=\\\"!presetColor && nzColor\\\"></div>\\n    </div>\\n  \",\n      host: {\n        '[class.ant-ribbon-wrapper]': 'true'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzPlacement: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }],\n    nzColor: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzBadgeModule = function NzBadgeModule() {\n  _classCallCheck(this, NzBadgeModule);\n};\n\nNzBadgeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzBadgeModule\n});\nNzBadgeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzBadgeModule_Factory(t) {\n    return new (t || NzBadgeModule)();\n  },\n  imports: [[CommonModule, ObserversModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzBadgeModule, {\n    declarations: function declarations() {\n      return [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, ObserversModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzBadgeComponent, NzRibbonComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzBadgeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n      exports: [NzBadgeComponent, NzRibbonComponent],\n      imports: [CommonModule, ObserversModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzBadgeComponent, NzBadgeModule, NzBadgeSupComponent as ɵa, NzRibbonComponent as ɵb };","map":{"version":3,"sources":["../../components/badge/preset-colors.ts","../../components/badge/badge.component.ts","../../components/badge/badge-sup.component.ts","../../components/badge/ribbon.component.ts","../../components/badge/badge.module.ts","../../components/badge/public-api.ts","../../components/badge/ng-zorro-antd-badge.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport const badgePresetColors: ReadonlyArray<string> = [\n  'pink',\n  'red',\n  'yellow',\n  'orange',\n  'cyan',\n  'green',\n  'blue',\n  'purple',\n  'geekblue',\n  'magenta',\n  'volcano',\n  'gold',\n  'lime'\n];\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { badgePresetColors } from './preset-colors';\nimport { NzBadgeStatusType } from './types';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'badge';\n\n@Component({\n  selector: 'nz-badge',\n  exportAs: 'nzBadge',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [zoomBadgeMotion],\n  template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor)\"\n        [nzCount]=\"nzCount\"\n      ></nz-badge-sup>\n    </ng-container>\n  `,\n  host: {\n    '[class.ant-badge]': 'true',\n    '[class.ant-badge-status]': 'nzStatus',\n    '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n  }\n})\nexport class NzBadgeComponent implements OnChanges {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzShowZero: BooleanInput;\n  static ngAcceptInputType_nzShowDot: BooleanInput;\n  static ngAcceptInputType_nzDot: BooleanInput;\n  static ngAcceptInputType_nzStandalone: BooleanInput;\n  showSup = false;\n  presetColor: string | null = null;\n  @Input() @InputBoolean() nzShowZero: boolean = false;\n  @Input() @InputBoolean() nzShowDot = true;\n  @Input() @InputBoolean() nzStandalone = false;\n  @Input() @InputBoolean() nzDot = false;\n  @Input() @WithConfig() nzOverflowCount: number = 99;\n  @Input() @WithConfig() nzColor?: string = undefined;\n  @Input() nzStyle: { [key: string]: string } | null = null;\n  @Input() nzText?: string | TemplateRef<void> | null = null;\n  @Input() nzTitle?: string | null | undefined;\n  @Input() nzStatus?: NzBadgeStatusType | string;\n  @Input() nzCount?: number | TemplateRef<NzSafeAny>;\n  @Input() nzOffset?: [number, number];\n\n  constructor(public nzConfigService: NzConfigService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzColor, nzShowDot, nzDot, nzCount, nzShowZero } = changes;\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n    if (nzShowDot || nzDot || nzCount || nzShowZero) {\n      this.showSup = (this.nzShowDot && this.nzDot) || this.nzCount! > 0 || (this.nzCount! <= 0 && this.nzShowZero);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-badge-sup',\n  exportAs: 'nzBadgeSup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [zoomBadgeMotion],\n  template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p *ngFor=\"let p of countSingleArray\" class=\"ant-scroll-number-only-unit\" [class.current]=\"p === countArray[i]\">\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `,\n  host: {\n    '[@.disabled]': `disableAnimation`,\n    '[@zoomBadgeMotion]': '',\n    '[attr.title]': `nzTitle === null ? '' : nzTitle || nzCount`,\n    '[style]': `nzStyle`,\n    '[style.right.px]': `nzOffset && nzOffset[0] ? -nzOffset[0] : null`,\n    '[style.margin-top.px]': `nzOffset && nzOffset[1] ? nzOffset[1] : null`,\n    '[class.ant-scroll-number]': 'true',\n    '[class.ant-badge-count]': `!nzDot`,\n    '[class.ant-badge-dot]': `nzDot`,\n    '[class.ant-badge-multiple-words]': `countArray.length >= 2`\n  }\n})\nexport class NzBadgeSupComponent implements OnInit, OnChanges {\n  @Input() nzOffset?: [number, number];\n  @Input() nzTitle?: string | null | undefined;\n  @Input() nzStyle: { [key: string]: string } | null = null;\n  @Input() nzDot = false;\n  @Input() nzOverflowCount: number = 99;\n  @Input() disableAnimation = false;\n  @Input() nzCount?: number | TemplateRef<NzSafeAny>;\n  maxNumberArray: string[] = [];\n  countArray: number[] = [];\n  count: number = 0;\n  countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  generateMaxNumberArray(): void {\n    this.maxNumberArray = this.nzOverflowCount.toString().split('');\n  }\n\n  ngOnInit(): void {\n    this.generateMaxNumberArray();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzOverflowCount, nzCount } = changes;\n    if (nzCount && typeof nzCount.currentValue === 'number') {\n      this.count = Math.max(0, nzCount.currentValue);\n      this.countArray = this.count\n        .toString()\n        .split('')\n        .map(item => +item);\n    }\n    if (nzOverflowCount) {\n      this.generateMaxNumberArray();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { badgePresetColors } from './preset-colors';\n\n@Component({\n  selector: 'nz-ribbon',\n  exportAs: 'nzRibbon',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `,\n  host: {\n    '[class.ant-ribbon-wrapper]': 'true'\n  }\n})\nexport class NzRibbonComponent implements OnChanges {\n  @Input() nzColor: string | undefined;\n  @Input() nzPlacement: 'start' | 'end' = 'end';\n  @Input() nzText: string | TemplateRef<void> | null = null;\n  presetColor: string | null = null;\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzColor } = changes;\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzBadgeSupComponent } from './badge-sup.component';\nimport { NzBadgeComponent } from './badge.component';\nimport { NzRibbonComponent } from './ribbon.component';\n\n@NgModule({\n  declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n  exports: [NzBadgeComponent, NzRibbonComponent],\n  imports: [CommonModule, ObserversModule, NzOutletModule]\n})\nexport class NzBadgeModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './badge.component';\nexport * from './badge.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NzBadgeSupComponent as ɵa} from './badge-sup.component';\nexport {NzRibbonComponent as ɵb} from './ribbon.component';"]},"metadata":{},"sourceType":"module"}