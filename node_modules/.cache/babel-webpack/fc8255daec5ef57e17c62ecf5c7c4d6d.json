{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Injectable, NgZone, Inject, EventEmitter, Directive, ElementRef, Renderer2, Input, Output, Component, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { __decorate, __metadata } from 'tslib';\nimport { Platform } from '@angular/cdk/platform';\nimport { isTouchEvent, ensureInBounds, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\nvar _c0 = [\"*\"];\n\nfunction NzResizeHandlesComponent_nz_resize_handle_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-resize-handle\", 1);\n  }\n\n  if (rf & 2) {\n    var dir_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"nzDirection\", dir_r1);\n  }\n}\n\nfunction getEventWithPoint(event) {\n  return isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzResizableService = /*#__PURE__*/function () {\n  function NzResizableService(ngZone, document) {\n    _classCallCheck(this, NzResizableService);\n\n    this.ngZone = ngZone;\n    this.listeners = new Map();\n    this.handleMouseDown$ = new Subject();\n    this.documentMouseUp$ = new Subject();\n    this.documentMouseMove$ = new Subject();\n    this.mouseEntered$ = new Subject();\n    this.document = document;\n  }\n\n  _createClass(NzResizableService, [{\n    key: \"startResizing\",\n    value: function startResizing(event) {\n      var _this = this;\n\n      var _isTouchEvent = isTouchEvent(event);\n\n      this.clearListeners();\n      var moveEvent = _isTouchEvent ? 'touchmove' : 'mousemove';\n      var upEvent = _isTouchEvent ? 'touchend' : 'mouseup';\n\n      var moveEventHandler = function moveEventHandler(e) {\n        _this.documentMouseMove$.next(e);\n      };\n\n      var upEventHandler = function upEventHandler(e) {\n        _this.documentMouseUp$.next(e);\n\n        _this.clearListeners();\n      };\n\n      this.listeners.set(moveEvent, moveEventHandler);\n      this.listeners.set(upEvent, upEventHandler);\n      this.ngZone.runOutsideAngular(function () {\n        _this.listeners.forEach(function (handler, name) {\n          _this.document.addEventListener(name, handler);\n        });\n      });\n    }\n  }, {\n    key: \"clearListeners\",\n    value: function clearListeners() {\n      var _this2 = this;\n\n      this.listeners.forEach(function (handler, name) {\n        _this2.document.removeEventListener(name, handler);\n      });\n      this.listeners.clear();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.handleMouseDown$.complete();\n      this.documentMouseUp$.complete();\n      this.documentMouseMove$.complete();\n      this.mouseEntered$.complete();\n      this.clearListeners();\n    }\n  }]);\n\n  return NzResizableService;\n}();\n\nNzResizableService.ɵfac = function NzResizableService_Factory(t) {\n  return new (t || NzResizableService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nNzResizableService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NzResizableService,\n  factory: NzResizableService.ɵfac\n});\n\nNzResizableService.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzResizableDirective = /*#__PURE__*/function () {\n  function NzResizableDirective(elementRef, renderer, nzResizableService, platform, ngZone) {\n    var _this3 = this;\n\n    _classCallCheck(this, NzResizableDirective);\n\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.nzResizableService = nzResizableService;\n    this.platform = platform;\n    this.ngZone = ngZone;\n    this.nzBounds = 'parent';\n    this.nzMinHeight = 40;\n    this.nzMinWidth = 40;\n    this.nzGridColumnCount = -1;\n    this.nzMaxColumn = -1;\n    this.nzMinColumn = -1;\n    this.nzLockAspectRatio = false;\n    this.nzPreview = false;\n    this.nzDisabled = false;\n    this.nzResize = new EventEmitter();\n    this.nzResizeEnd = new EventEmitter();\n    this.nzResizeStart = new EventEmitter();\n    this.resizing = false;\n    this.currentHandleEvent = null;\n    this.ghostElement = null;\n    this.sizeCache = null;\n    this.destroy$ = new Subject();\n    this.nzResizableService.handleMouseDown$.pipe(takeUntil(this.destroy$)).subscribe(function (event) {\n      if (_this3.nzDisabled) {\n        return;\n      }\n\n      _this3.resizing = true;\n\n      _this3.nzResizableService.startResizing(event.mouseEvent);\n\n      _this3.currentHandleEvent = event;\n\n      _this3.setCursor();\n\n      _this3.nzResizeStart.emit({\n        mouseEvent: event.mouseEvent\n      });\n\n      _this3.elRect = _this3.el.getBoundingClientRect();\n    });\n    this.nzResizableService.documentMouseUp$.pipe(takeUntil(this.destroy$)).subscribe(function (event) {\n      if (_this3.resizing) {\n        _this3.resizing = false;\n\n        _this3.nzResizableService.documentMouseUp$.next();\n\n        _this3.endResize(event);\n      }\n    });\n    this.nzResizableService.documentMouseMove$.pipe(takeUntil(this.destroy$)).subscribe(function (event) {\n      if (_this3.resizing) {\n        _this3.resize(event);\n      }\n    });\n  }\n\n  _createClass(NzResizableDirective, [{\n    key: \"onMouseenter\",\n    value: function onMouseenter() {\n      this.nzResizableService.mouseEntered$.next(true);\n    }\n  }, {\n    key: \"onMouseleave\",\n    value: function onMouseleave() {\n      this.nzResizableService.mouseEntered$.next(false);\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition() {\n      var position = getComputedStyle(this.el).position;\n\n      if (position === 'static' || !position) {\n        this.renderer.setStyle(this.el, 'position', 'relative');\n      }\n    }\n  }, {\n    key: \"calcSize\",\n    value: function calcSize(width, height, ratio) {\n      var newWidth;\n      var newHeight;\n      var maxWidth;\n      var maxHeight;\n      var col = 0;\n      var spanWidth = 0;\n      var minWidth = this.nzMinWidth;\n      var boundWidth = Infinity;\n      var boundHeight = Infinity;\n\n      if (this.nzBounds === 'parent') {\n        var parent = this.renderer.parentNode(this.el);\n\n        if (parent instanceof HTMLElement) {\n          var parentRect = parent.getBoundingClientRect();\n          boundWidth = parentRect.width;\n          boundHeight = parentRect.height;\n        }\n      } else if (this.nzBounds === 'window') {\n        if (typeof window !== 'undefined') {\n          boundWidth = window.innerWidth;\n          boundHeight = window.innerHeight;\n        }\n      } else if (this.nzBounds && this.nzBounds.nativeElement && this.nzBounds.nativeElement instanceof HTMLElement) {\n        var boundsRect = this.nzBounds.nativeElement.getBoundingClientRect();\n        boundWidth = boundsRect.width;\n        boundHeight = boundsRect.height;\n      }\n\n      maxWidth = ensureInBounds(this.nzMaxWidth, boundWidth);\n      maxHeight = ensureInBounds(this.nzMaxHeight, boundHeight);\n\n      if (this.nzGridColumnCount !== -1) {\n        spanWidth = maxWidth / this.nzGridColumnCount;\n        minWidth = this.nzMinColumn !== -1 ? spanWidth * this.nzMinColumn : minWidth;\n        maxWidth = this.nzMaxColumn !== -1 ? spanWidth * this.nzMaxColumn : maxWidth;\n      }\n\n      if (ratio !== -1) {\n        if (/(left|right)/i.test(this.currentHandleEvent.direction)) {\n          newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n          newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n\n          if (newHeight >= maxHeight || newHeight <= this.nzMinHeight) {\n            newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n          }\n        } else {\n          newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n          newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n\n          if (newWidth >= maxWidth || newWidth <= minWidth) {\n            newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n          }\n        }\n      } else {\n        newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n        newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n      }\n\n      if (this.nzGridColumnCount !== -1) {\n        col = Math.round(newWidth / spanWidth);\n        newWidth = col * spanWidth;\n      }\n\n      return {\n        col: col,\n        width: newWidth,\n        height: newHeight\n      };\n    }\n  }, {\n    key: \"setCursor\",\n    value: function setCursor() {\n      switch (this.currentHandleEvent.direction) {\n        case 'left':\n        case 'right':\n          this.renderer.setStyle(document.body, 'cursor', 'ew-resize');\n          break;\n\n        case 'top':\n        case 'bottom':\n          this.renderer.setStyle(document.body, 'cursor', 'ns-resize');\n          break;\n\n        case 'topLeft':\n        case 'bottomRight':\n          this.renderer.setStyle(document.body, 'cursor', 'nwse-resize');\n          break;\n\n        case 'topRight':\n        case 'bottomLeft':\n          this.renderer.setStyle(document.body, 'cursor', 'nesw-resize');\n          break;\n      }\n\n      this.renderer.setStyle(document.body, 'user-select', 'none');\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(event) {\n      var _this4 = this;\n\n      var elRect = this.elRect;\n      var resizeEvent = getEventWithPoint(event);\n      var handleEvent = getEventWithPoint(this.currentHandleEvent.mouseEvent);\n      var width = elRect.width;\n      var height = elRect.height;\n      var ratio = this.nzLockAspectRatio ? width / height : -1;\n\n      switch (this.currentHandleEvent.direction) {\n        case 'bottomRight':\n          width = resizeEvent.clientX - elRect.left;\n          height = resizeEvent.clientY - elRect.top;\n          break;\n\n        case 'bottomLeft':\n          width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n          height = resizeEvent.clientY - elRect.top;\n          break;\n\n        case 'topRight':\n          width = resizeEvent.clientX - elRect.left;\n          height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n          break;\n\n        case 'topLeft':\n          width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n          height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n          break;\n\n        case 'top':\n          height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n          break;\n\n        case 'right':\n          width = resizeEvent.clientX - elRect.left;\n          break;\n\n        case 'bottom':\n          height = resizeEvent.clientY - elRect.top;\n          break;\n\n        case 'left':\n          width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n      }\n\n      var size = this.calcSize(width, height, ratio);\n      this.sizeCache = Object.assign({}, size);\n      this.ngZone.run(function () {\n        _this4.nzResize.emit(Object.assign(Object.assign({}, size), {\n          mouseEvent: event\n        }));\n      });\n\n      if (this.nzPreview) {\n        this.previewResize(size);\n      }\n    }\n  }, {\n    key: \"endResize\",\n    value: function endResize(event) {\n      var _this5 = this;\n\n      this.renderer.setStyle(document.body, 'cursor', '');\n      this.renderer.setStyle(document.body, 'user-select', '');\n      this.removeGhostElement();\n      var size = this.sizeCache ? Object.assign({}, this.sizeCache) : {\n        width: this.elRect.width,\n        height: this.elRect.height\n      };\n      this.ngZone.run(function () {\n        _this5.nzResizeEnd.emit(Object.assign(Object.assign({}, size), {\n          mouseEvent: event\n        }));\n      });\n      this.sizeCache = null;\n      this.currentHandleEvent = null;\n    }\n  }, {\n    key: \"previewResize\",\n    value: function previewResize(_ref) {\n      var width = _ref.width,\n          height = _ref.height;\n      this.createGhostElement();\n      this.renderer.setStyle(this.ghostElement, 'width', \"\".concat(width, \"px\"));\n      this.renderer.setStyle(this.ghostElement, 'height', \"\".concat(height, \"px\"));\n    }\n  }, {\n    key: \"createGhostElement\",\n    value: function createGhostElement() {\n      if (!this.ghostElement) {\n        this.ghostElement = this.renderer.createElement('div');\n        this.renderer.setAttribute(this.ghostElement, 'class', 'nz-resizable-preview');\n      }\n\n      this.renderer.appendChild(this.el, this.ghostElement);\n    }\n  }, {\n    key: \"removeGhostElement\",\n    value: function removeGhostElement() {\n      if (this.ghostElement) {\n        this.renderer.removeChild(this.el, this.ghostElement);\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.platform.isBrowser) {\n        this.el = this.elementRef.nativeElement;\n        this.setPosition();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.ghostElement = null;\n      this.sizeCache = null;\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzResizableDirective;\n}();\n\nNzResizableDirective.ɵfac = function NzResizableDirective_Factory(t) {\n  return new (t || NzResizableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NzResizableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNzResizableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzResizableDirective,\n  selectors: [[\"\", \"nz-resizable\", \"\"]],\n  hostVars: 6,\n  hostBindings: function NzResizableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mouseenter\", function NzResizableDirective_mouseenter_HostBindingHandler() {\n        return ctx.onMouseenter();\n      })(\"mouseleave\", function NzResizableDirective_mouseleave_HostBindingHandler() {\n        return ctx.onMouseleave();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"nz-resizable\", true)(\"nz-resizable-resizing\", ctx.resizing)(\"nz-resizable-disabled\", ctx.nzDisabled);\n    }\n  },\n  inputs: {\n    nzBounds: \"nzBounds\",\n    nzMinHeight: \"nzMinHeight\",\n    nzMinWidth: \"nzMinWidth\",\n    nzGridColumnCount: \"nzGridColumnCount\",\n    nzMaxColumn: \"nzMaxColumn\",\n    nzMinColumn: \"nzMinColumn\",\n    nzLockAspectRatio: \"nzLockAspectRatio\",\n    nzPreview: \"nzPreview\",\n    nzDisabled: \"nzDisabled\",\n    nzMaxHeight: \"nzMaxHeight\",\n    nzMaxWidth: \"nzMaxWidth\"\n  },\n  outputs: {\n    nzResize: \"nzResize\",\n    nzResizeEnd: \"nzResizeEnd\",\n    nzResizeStart: \"nzResizeStart\"\n  },\n  exportAs: [\"nzResizable\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NzResizableService])]\n});\n\nNzResizableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NzResizableService\n  }, {\n    type: Platform\n  }, {\n    type: NgZone\n  }];\n};\n\nNzResizableDirective.propDecorators = {\n  nzBounds: [{\n    type: Input\n  }],\n  nzMaxHeight: [{\n    type: Input\n  }],\n  nzMaxWidth: [{\n    type: Input\n  }],\n  nzMinHeight: [{\n    type: Input\n  }],\n  nzMinWidth: [{\n    type: Input\n  }],\n  nzGridColumnCount: [{\n    type: Input\n  }],\n  nzMaxColumn: [{\n    type: Input\n  }],\n  nzMinColumn: [{\n    type: Input\n  }],\n  nzLockAspectRatio: [{\n    type: Input\n  }],\n  nzPreview: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzResize: [{\n    type: Output\n  }],\n  nzResizeEnd: [{\n    type: Output\n  }],\n  nzResizeStart: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzResizableDirective.prototype, \"nzLockAspectRatio\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzResizableDirective.prototype, \"nzPreview\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzResizableDirective.prototype, \"nzDisabled\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzResizableService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-resizable]',\n      exportAs: 'nzResizable',\n      providers: [NzResizableService],\n      host: {\n        '[class.nz-resizable]': 'true',\n        '[class.nz-resizable-resizing]': 'resizing',\n        '[class.nz-resizable-disabled]': 'nzDisabled',\n        '(mouseenter)': 'onMouseenter()',\n        '(mouseleave)': 'onMouseleave()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: NzResizableService\n    }, {\n      type: ɵngcc1.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    nzBounds: [{\n      type: Input\n    }],\n    nzMinHeight: [{\n      type: Input\n    }],\n    nzMinWidth: [{\n      type: Input\n    }],\n    nzGridColumnCount: [{\n      type: Input\n    }],\n    nzMaxColumn: [{\n      type: Input\n    }],\n    nzMinColumn: [{\n      type: Input\n    }],\n    nzLockAspectRatio: [{\n      type: Input\n    }],\n    nzPreview: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzResize: [{\n      type: Output\n    }],\n    nzResizeEnd: [{\n      type: Output\n    }],\n    nzResizeStart: [{\n      type: Output\n    }],\n    nzMaxHeight: [{\n      type: Input\n    }],\n    nzMaxWidth: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzResizeHandleMouseDownEvent = function NzResizeHandleMouseDownEvent(direction, mouseEvent) {\n  _classCallCheck(this, NzResizeHandleMouseDownEvent);\n\n  this.direction = direction;\n  this.mouseEvent = mouseEvent;\n};\n\nvar NzResizeHandleComponent = /*#__PURE__*/function () {\n  function NzResizeHandleComponent(nzResizableService, cdr) {\n    _classCallCheck(this, NzResizeHandleComponent);\n\n    this.nzResizableService = nzResizableService;\n    this.cdr = cdr;\n    this.nzDirection = 'bottomRight';\n    this.nzMouseDown = new EventEmitter();\n    this.entered = false;\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzResizeHandleComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this6 = this;\n\n      this.nzResizableService.mouseEntered$.pipe(takeUntil(this.destroy$)).subscribe(function (entered) {\n        _this6.entered = entered;\n\n        _this6.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"onMousedown\",\n    value: function onMousedown(event) {\n      this.nzResizableService.handleMouseDown$.next(new NzResizeHandleMouseDownEvent(this.nzDirection, event));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzResizeHandleComponent;\n}();\n\nNzResizeHandleComponent.ɵfac = function NzResizeHandleComponent_Factory(t) {\n  return new (t || NzResizeHandleComponent)(ɵngcc0.ɵɵdirectiveInject(NzResizableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzResizeHandleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzResizeHandleComponent,\n  selectors: [[\"nz-resize-handle\"], [\"\", \"nz-resize-handle\", \"\"]],\n  hostVars: 20,\n  hostBindings: function NzResizeHandleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function NzResizeHandleComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onMousedown($event);\n      })(\"touchstart\", function NzResizeHandleComponent_touchstart_HostBindingHandler($event) {\n        return ctx.onMousedown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"nz-resizable-handle\", true)(\"nz-resizable-handle-top\", ctx.nzDirection === \"top\")(\"nz-resizable-handle-right\", ctx.nzDirection === \"right\")(\"nz-resizable-handle-bottom\", ctx.nzDirection === \"bottom\")(\"nz-resizable-handle-left\", ctx.nzDirection === \"left\")(\"nz-resizable-handle-topRight\", ctx.nzDirection === \"topRight\")(\"nz-resizable-handle-bottomRight\", ctx.nzDirection === \"bottomRight\")(\"nz-resizable-handle-bottomLeft\", ctx.nzDirection === \"bottomLeft\")(\"nz-resizable-handle-topLeft\", ctx.nzDirection === \"topLeft\")(\"nz-resizable-handle-box-hover\", ctx.entered);\n    }\n  },\n  inputs: {\n    nzDirection: \"nzDirection\"\n  },\n  outputs: {\n    nzMouseDown: \"nzMouseDown\"\n  },\n  exportAs: [\"nzResizeHandle\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzResizeHandleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzResizeHandleComponent.ctorParameters = function () {\n  return [{\n    type: NzResizableService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNzResizeHandleComponent.propDecorators = {\n  nzDirection: [{\n    type: Input\n  }],\n  nzMouseDown: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzResizeHandleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-resize-handle, [nz-resize-handle]',\n      exportAs: 'nzResizeHandle',\n      template: \" <ng-content></ng-content> \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.nz-resizable-handle]': 'true',\n        '[class.nz-resizable-handle-top]': \"nzDirection === 'top'\",\n        '[class.nz-resizable-handle-right]': \"nzDirection === 'right'\",\n        '[class.nz-resizable-handle-bottom]': \"nzDirection === 'bottom'\",\n        '[class.nz-resizable-handle-left]': \"nzDirection === 'left'\",\n        '[class.nz-resizable-handle-topRight]': \"nzDirection === 'topRight'\",\n        '[class.nz-resizable-handle-bottomRight]': \"nzDirection === 'bottomRight'\",\n        '[class.nz-resizable-handle-bottomLeft]': \"nzDirection === 'bottomLeft'\",\n        '[class.nz-resizable-handle-topLeft]': \"nzDirection === 'topLeft'\",\n        '[class.nz-resizable-handle-box-hover]': 'entered',\n        '(mousedown)': 'onMousedown($event)',\n        '(touchstart)': 'onMousedown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzResizableService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    nzDirection: [{\n      type: Input\n    }],\n    nzMouseDown: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar DEFAULT_RESIZE_DIRECTION = ['bottomRight', 'topRight', 'bottomLeft', 'topLeft', 'bottom', 'right', 'top', 'left'];\n\nvar NzResizeHandlesComponent = /*#__PURE__*/function () {\n  function NzResizeHandlesComponent() {\n    _classCallCheck(this, NzResizeHandlesComponent);\n\n    this.nzDirections = DEFAULT_RESIZE_DIRECTION;\n    this.directions = new Set(this.nzDirections);\n  }\n\n  _createClass(NzResizeHandlesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.nzDirections) {\n        this.directions = new Set(changes.nzDirections.currentValue);\n      }\n    }\n  }]);\n\n  return NzResizeHandlesComponent;\n}();\n\nNzResizeHandlesComponent.ɵfac = function NzResizeHandlesComponent_Factory(t) {\n  return new (t || NzResizeHandlesComponent)();\n};\n\nNzResizeHandlesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzResizeHandlesComponent,\n  selectors: [[\"nz-resize-handles\"]],\n  inputs: {\n    nzDirections: \"nzDirections\"\n  },\n  exportAs: [\"nzResizeHandles\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"nzDirection\", 4, \"ngFor\", \"ngForOf\"], [3, \"nzDirection\"]],\n  template: function NzResizeHandlesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzResizeHandlesComponent_nz_resize_handle_0_Template, 1, 1, \"nz-resize-handle\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.directions);\n    }\n  },\n  directives: [ɵngcc2.NgForOf, NzResizeHandleComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzResizeHandlesComponent.ctorParameters = function () {\n  return [];\n};\n\nNzResizeHandlesComponent.propDecorators = {\n  nzDirections: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzResizeHandlesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-resize-handles',\n      exportAs: 'nzResizeHandles',\n      template: \" <nz-resize-handle *ngFor=\\\"let dir of directions\\\" [nzDirection]=\\\"dir\\\"></nz-resize-handle> \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzDirections: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzResizableModule = function NzResizableModule() {\n  _classCallCheck(this, NzResizableModule);\n};\n\nNzResizableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzResizableModule\n});\nNzResizableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzResizableModule_Factory(t) {\n    return new (t || NzResizableModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzResizableModule, {\n    declarations: function declarations() {\n      return [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzResizableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent],\n      exports: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DEFAULT_RESIZE_DIRECTION, NzResizableDirective, NzResizableModule, NzResizableService, NzResizeHandleComponent, NzResizeHandleMouseDownEvent, NzResizeHandlesComponent, getEventWithPoint };","map":{"version":3,"sources":["../../components/resizable/resizable-utils.ts","../../components/resizable/resizable.service.ts","../../components/resizable/resizable.directive.ts","../../components/resizable/resize-handle.component.ts","../../components/resizable/resize-handles.component.ts","../../components/resizable/resizable.module.ts","../../components/resizable/public-api.ts","../../components/resizable/ng-zorro-antd-resizable.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { isTouchEvent } from 'ng-zorro-antd/core/util';\n\nexport function getEventWithPoint(event: MouseEvent | TouchEvent): MouseEvent | Touch {\n  return isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : (event as MouseEvent);\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { isTouchEvent } from 'ng-zorro-antd/core/util';\n\nimport { Subject } from 'rxjs';\n\nimport { NzResizeHandleMouseDownEvent } from './resize-handle.component';\n\n@Injectable()\nexport class NzResizableService implements OnDestroy {\n  private document: Document;\n  private listeners = new Map<string, (event: MouseEvent | TouchEvent) => void>();\n\n  handleMouseDown$ = new Subject<NzResizeHandleMouseDownEvent>();\n  documentMouseUp$ = new Subject<MouseEvent | TouchEvent>();\n  documentMouseMove$ = new Subject<MouseEvent | TouchEvent>();\n  mouseEntered$ = new Subject<boolean>();\n\n  constructor(private ngZone: NgZone, @Inject(DOCUMENT) document: NzSafeAny) {\n    this.document = document;\n  }\n\n  startResizing(event: MouseEvent | TouchEvent): void {\n    const _isTouchEvent = isTouchEvent(event);\n    this.clearListeners();\n    const moveEvent = _isTouchEvent ? 'touchmove' : 'mousemove';\n    const upEvent = _isTouchEvent ? 'touchend' : 'mouseup';\n    const moveEventHandler = (e: MouseEvent | TouchEvent) => {\n      this.documentMouseMove$.next(e);\n    };\n    const upEventHandler = (e: MouseEvent | TouchEvent) => {\n      this.documentMouseUp$.next(e);\n      this.clearListeners();\n    };\n\n    this.listeners.set(moveEvent, moveEventHandler);\n    this.listeners.set(upEvent, upEventHandler);\n\n    this.ngZone.runOutsideAngular(() => {\n      this.listeners.forEach((handler, name) => {\n        this.document.addEventListener(name, handler as EventListener);\n      });\n    });\n  }\n\n  private clearListeners(): void {\n    this.listeners.forEach((handler, name) => {\n      this.document.removeEventListener(name, handler as EventListener);\n    });\n    this.listeners.clear();\n  }\n\n  ngOnDestroy(): void {\n    this.handleMouseDown$.complete();\n    this.documentMouseUp$.complete();\n    this.documentMouseMove$.complete();\n    this.mouseEntered$.complete();\n    this.clearListeners();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterViewInit, Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\n\nimport { ensureInBounds, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { getEventWithPoint } from './resizable-utils';\nimport { NzResizableService } from './resizable.service';\nimport { NzResizeHandleMouseDownEvent } from './resize-handle.component';\n\nexport interface NzResizeEvent {\n  width?: number;\n  height?: number;\n  col?: number;\n  mouseEvent?: MouseEvent | TouchEvent;\n}\n\n@Directive({\n  selector: '[nz-resizable]',\n  exportAs: 'nzResizable',\n  providers: [NzResizableService],\n  host: {\n    '[class.nz-resizable]': 'true',\n    '[class.nz-resizable-resizing]': 'resizing',\n    '[class.nz-resizable-disabled]': 'nzDisabled',\n    '(mouseenter)': 'onMouseenter()',\n    '(mouseleave)': 'onMouseleave()'\n  }\n})\nexport class NzResizableDirective implements AfterViewInit, OnDestroy {\n  static ngAcceptInputType_nzLockAspectRatio: BooleanInput;\n  static ngAcceptInputType_nzPreview: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  @Input() nzBounds: 'window' | 'parent' | ElementRef<HTMLElement> = 'parent';\n  @Input() nzMaxHeight?: number;\n  @Input() nzMaxWidth?: number;\n  @Input() nzMinHeight: number = 40;\n  @Input() nzMinWidth: number = 40;\n  @Input() nzGridColumnCount: number = -1;\n  @Input() nzMaxColumn: number = -1;\n  @Input() nzMinColumn: number = -1;\n  @Input() @InputBoolean() nzLockAspectRatio: boolean = false;\n  @Input() @InputBoolean() nzPreview: boolean = false;\n  @Input() @InputBoolean() nzDisabled: boolean = false;\n  @Output() readonly nzResize = new EventEmitter<NzResizeEvent>();\n  @Output() readonly nzResizeEnd = new EventEmitter<NzResizeEvent>();\n  @Output() readonly nzResizeStart = new EventEmitter<NzResizeEvent>();\n\n  resizing = false;\n  private elRect!: ClientRect | DOMRect;\n  private currentHandleEvent: NzResizeHandleMouseDownEvent | null = null;\n  private ghostElement: HTMLDivElement | null = null;\n  private el!: HTMLElement;\n  private sizeCache: NzResizeEvent | null = null;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    private nzResizableService: NzResizableService,\n    private platform: Platform,\n    private ngZone: NgZone\n  ) {\n    this.nzResizableService.handleMouseDown$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n      if (this.nzDisabled) {\n        return;\n      }\n      this.resizing = true;\n      this.nzResizableService.startResizing(event.mouseEvent);\n      this.currentHandleEvent = event;\n      this.setCursor();\n      this.nzResizeStart.emit({\n        mouseEvent: event.mouseEvent\n      });\n      this.elRect = this.el.getBoundingClientRect();\n    });\n\n    this.nzResizableService.documentMouseUp$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n      if (this.resizing) {\n        this.resizing = false;\n        this.nzResizableService.documentMouseUp$.next();\n        this.endResize(event);\n      }\n    });\n\n    this.nzResizableService.documentMouseMove$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n      if (this.resizing) {\n        this.resize(event);\n      }\n    });\n  }\n\n  onMouseenter(): void {\n    this.nzResizableService.mouseEntered$.next(true);\n  }\n\n  onMouseleave(): void {\n    this.nzResizableService.mouseEntered$.next(false);\n  }\n\n  setPosition(): void {\n    const position = getComputedStyle(this.el).position;\n    if (position === 'static' || !position) {\n      this.renderer.setStyle(this.el, 'position', 'relative');\n    }\n  }\n\n  calcSize(width: number, height: number, ratio: number): NzResizeEvent {\n    let newWidth: number;\n    let newHeight: number;\n    let maxWidth: number;\n    let maxHeight: number;\n    let col = 0;\n    let spanWidth = 0;\n    let minWidth = this.nzMinWidth;\n    let boundWidth = Infinity;\n    let boundHeight = Infinity;\n    if (this.nzBounds === 'parent') {\n      const parent = this.renderer.parentNode(this.el);\n      if (parent instanceof HTMLElement) {\n        const parentRect = parent.getBoundingClientRect();\n        boundWidth = parentRect.width;\n        boundHeight = parentRect.height;\n      }\n    } else if (this.nzBounds === 'window') {\n      if (typeof window !== 'undefined') {\n        boundWidth = window.innerWidth;\n        boundHeight = window.innerHeight;\n      }\n    } else if (this.nzBounds && this.nzBounds.nativeElement && this.nzBounds.nativeElement instanceof HTMLElement) {\n      const boundsRect = this.nzBounds.nativeElement.getBoundingClientRect();\n      boundWidth = boundsRect.width;\n      boundHeight = boundsRect.height;\n    }\n\n    maxWidth = ensureInBounds(this.nzMaxWidth!, boundWidth);\n    maxHeight = ensureInBounds(this.nzMaxHeight!, boundHeight);\n\n    if (this.nzGridColumnCount !== -1) {\n      spanWidth = maxWidth / this.nzGridColumnCount;\n      minWidth = this.nzMinColumn !== -1 ? spanWidth * this.nzMinColumn : minWidth;\n      maxWidth = this.nzMaxColumn !== -1 ? spanWidth * this.nzMaxColumn : maxWidth;\n    }\n\n    if (ratio !== -1) {\n      if (/(left|right)/i.test(this.currentHandleEvent!.direction)) {\n        newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n        newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n        if (newHeight >= maxHeight || newHeight <= this.nzMinHeight) {\n          newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n        }\n      } else {\n        newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n        newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n        if (newWidth >= maxWidth || newWidth <= minWidth) {\n          newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n        }\n      }\n    } else {\n      newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n      newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n    }\n\n    if (this.nzGridColumnCount !== -1) {\n      col = Math.round(newWidth / spanWidth);\n      newWidth = col * spanWidth;\n    }\n\n    return {\n      col,\n      width: newWidth,\n      height: newHeight\n    };\n  }\n\n  setCursor(): void {\n    switch (this.currentHandleEvent!.direction) {\n      case 'left':\n      case 'right':\n        this.renderer.setStyle(document.body, 'cursor', 'ew-resize');\n        break;\n      case 'top':\n      case 'bottom':\n        this.renderer.setStyle(document.body, 'cursor', 'ns-resize');\n        break;\n      case 'topLeft':\n      case 'bottomRight':\n        this.renderer.setStyle(document.body, 'cursor', 'nwse-resize');\n        break;\n      case 'topRight':\n      case 'bottomLeft':\n        this.renderer.setStyle(document.body, 'cursor', 'nesw-resize');\n        break;\n    }\n    this.renderer.setStyle(document.body, 'user-select', 'none');\n  }\n\n  resize(event: MouseEvent | TouchEvent): void {\n    const elRect = this.elRect;\n    const resizeEvent = getEventWithPoint(event);\n    const handleEvent = getEventWithPoint(this.currentHandleEvent!.mouseEvent);\n    let width = elRect.width;\n    let height = elRect.height;\n    const ratio = this.nzLockAspectRatio ? width / height : -1;\n    switch (this.currentHandleEvent!.direction) {\n      case 'bottomRight':\n        width = resizeEvent.clientX - elRect.left;\n        height = resizeEvent.clientY - elRect.top;\n        break;\n      case 'bottomLeft':\n        width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n        height = resizeEvent.clientY - elRect.top;\n        break;\n      case 'topRight':\n        width = resizeEvent.clientX - elRect.left;\n        height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n        break;\n      case 'topLeft':\n        width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n        height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n        break;\n      case 'top':\n        height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n        break;\n      case 'right':\n        width = resizeEvent.clientX - elRect.left;\n        break;\n      case 'bottom':\n        height = resizeEvent.clientY - elRect.top;\n        break;\n      case 'left':\n        width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n    }\n    const size = this.calcSize(width, height, ratio);\n    this.sizeCache = { ...size };\n    this.ngZone.run(() => {\n      this.nzResize.emit({\n        ...size,\n        mouseEvent: event\n      });\n    });\n    if (this.nzPreview) {\n      this.previewResize(size);\n    }\n  }\n\n  endResize(event: MouseEvent | TouchEvent): void {\n    this.renderer.setStyle(document.body, 'cursor', '');\n    this.renderer.setStyle(document.body, 'user-select', '');\n    this.removeGhostElement();\n    const size = this.sizeCache\n      ? { ...this.sizeCache }\n      : {\n          width: this.elRect.width,\n          height: this.elRect.height\n        };\n    this.ngZone.run(() => {\n      this.nzResizeEnd.emit({\n        ...size,\n        mouseEvent: event\n      });\n    });\n    this.sizeCache = null;\n    this.currentHandleEvent = null;\n  }\n\n  previewResize({ width, height }: NzResizeEvent): void {\n    this.createGhostElement();\n    this.renderer.setStyle(this.ghostElement, 'width', `${width}px`);\n    this.renderer.setStyle(this.ghostElement, 'height', `${height}px`);\n  }\n\n  createGhostElement(): void {\n    if (!this.ghostElement) {\n      this.ghostElement = this.renderer.createElement('div');\n      this.renderer.setAttribute(this.ghostElement, 'class', 'nz-resizable-preview');\n    }\n    this.renderer.appendChild(this.el, this.ghostElement);\n  }\n\n  removeGhostElement(): void {\n    if (this.ghostElement) {\n      this.renderer.removeChild(this.el, this.ghostElement);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.platform.isBrowser) {\n      this.el = this.elementRef.nativeElement;\n      this.setPosition();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.ghostElement = null;\n    this.sizeCache = null;\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzResizableService } from './resizable.service';\n\nexport type NzResizeDirection = 'top' | 'right' | 'bottom' | 'left' | 'topRight' | 'bottomRight' | 'bottomLeft' | 'topLeft';\n\nexport class NzResizeHandleMouseDownEvent {\n  constructor(public direction: NzResizeDirection, public mouseEvent: MouseEvent | TouchEvent) {}\n}\n\n@Component({\n  selector: 'nz-resize-handle, [nz-resize-handle]',\n  exportAs: 'nzResizeHandle',\n  template: ` <ng-content></ng-content> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nz-resizable-handle]': 'true',\n    '[class.nz-resizable-handle-top]': `nzDirection === 'top'`,\n    '[class.nz-resizable-handle-right]': `nzDirection === 'right'`,\n    '[class.nz-resizable-handle-bottom]': `nzDirection === 'bottom'`,\n    '[class.nz-resizable-handle-left]': `nzDirection === 'left'`,\n    '[class.nz-resizable-handle-topRight]': `nzDirection === 'topRight'`,\n    '[class.nz-resizable-handle-bottomRight]': `nzDirection === 'bottomRight'`,\n    '[class.nz-resizable-handle-bottomLeft]': `nzDirection === 'bottomLeft'`,\n    '[class.nz-resizable-handle-topLeft]': `nzDirection === 'topLeft'`,\n    '[class.nz-resizable-handle-box-hover]': 'entered',\n    '(mousedown)': 'onMousedown($event)',\n    '(touchstart)': 'onMousedown($event)'\n  }\n})\nexport class NzResizeHandleComponent implements OnInit, OnDestroy {\n  @Input() nzDirection: NzResizeDirection = 'bottomRight';\n  @Output() readonly nzMouseDown = new EventEmitter<NzResizeHandleMouseDownEvent>();\n\n  entered = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(private nzResizableService: NzResizableService, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.nzResizableService.mouseEntered$.pipe(takeUntil(this.destroy$)).subscribe(entered => {\n      this.entered = entered;\n      this.cdr.markForCheck();\n    });\n  }\n\n  onMousedown(event: MouseEvent | TouchEvent): void {\n    this.nzResizableService.handleMouseDown$.next(new NzResizeHandleMouseDownEvent(this.nzDirection, event));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { NzResizeDirection } from './resize-handle.component';\n\nexport const DEFAULT_RESIZE_DIRECTION: NzResizeDirection[] = [\n  'bottomRight',\n  'topRight',\n  'bottomLeft',\n  'topLeft',\n  'bottom',\n  'right',\n  'top',\n  'left'\n];\n\n@Component({\n  selector: 'nz-resize-handles',\n  exportAs: 'nzResizeHandles',\n  template: ` <nz-resize-handle *ngFor=\"let dir of directions\" [nzDirection]=\"dir\"></nz-resize-handle> `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzResizeHandlesComponent implements OnChanges {\n  @Input() nzDirections: NzResizeDirection[] = DEFAULT_RESIZE_DIRECTION;\n  directions: Set<NzResizeDirection>;\n\n  constructor() {\n    this.directions = new Set(this.nzDirections);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzDirections) {\n      this.directions = new Set(changes.nzDirections.currentValue);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzResizableDirective } from './resizable.directive';\nimport { NzResizeHandleComponent } from './resize-handle.component';\nimport { NzResizeHandlesComponent } from './resize-handles.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent],\n  exports: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent]\n})\nexport class NzResizableModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './resizable.module';\nexport * from './resizable.directive';\nexport * from './resizable.service';\nexport * from './resize-handles.component';\nexport * from './resize-handle.component';\nexport * from './resizable-utils';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}