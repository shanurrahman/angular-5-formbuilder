{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, ENTER } from '@angular/cdk/keycodes';\nimport { EventEmitter, Component, forwardRef, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Output, ViewChild, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { CommonModule } from '@angular/common';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from 'ng-zorro-antd/icon';\nimport * as ɵngcc3 from '@angular/forms';\nvar _c0 = [\"inputElement\"];\n\nvar NzInputNumberComponent = /*#__PURE__*/function () {\n  function NzInputNumberComponent(elementRef, cdr, focusMonitor) {\n    _classCallCheck(this, NzInputNumberComponent);\n\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.focusMonitor = focusMonitor;\n    this.isFocused = false;\n    this.disabledUp = false;\n    this.disabledDown = false;\n\n    this.onChange = function () {};\n\n    this.onTouched = function () {};\n\n    this.nzBlur = new EventEmitter();\n    this.nzFocus = new EventEmitter();\n    this.nzSize = 'default';\n    this.nzMin = -Infinity;\n    this.nzMax = Infinity;\n\n    this.nzParser = function (value) {\n      return value.trim().replace(/。/g, '.').replace(/[^\\w\\.-]+/g, '');\n    };\n\n    this.nzPrecisionMode = 'toFixed';\n    this.nzPlaceHolder = '';\n    this.nzStep = 1;\n    this.nzInputMode = 'decimal';\n    this.nzId = null;\n    this.nzDisabled = false;\n    this.nzAutoFocus = false;\n\n    this.nzFormatter = function (value) {\n      return value;\n    };\n  }\n\n  _createClass(NzInputNumberComponent, [{\n    key: \"onModelChange\",\n    value: function onModelChange(value) {\n      this.parsedValue = this.nzParser(value);\n      this.inputElement.nativeElement.value = \"\".concat(this.parsedValue);\n      var validValue = this.getCurrentValidValue(this.parsedValue);\n      this.setValue(validValue);\n    }\n  }, {\n    key: \"getCurrentValidValue\",\n    value: function getCurrentValidValue(value) {\n      var val = value;\n\n      if (val === '') {\n        val = '';\n      } else if (!this.isNotCompleteNumber(val)) {\n        val = \"\".concat(this.getValidValue(val));\n      } else {\n        val = this.value;\n      }\n\n      return this.toNumber(val);\n    } // '1.' '1x' 'xx' '' => are not complete numbers\n\n  }, {\n    key: \"isNotCompleteNumber\",\n    value: function isNotCompleteNumber(num) {\n      return isNaN(num) || num === '' || num === null || !!(num && num.toString().indexOf('.') === num.toString().length - 1);\n    }\n  }, {\n    key: \"getValidValue\",\n    value: function getValidValue(value) {\n      var val = parseFloat(value); // https://github.com/ant-design/ant-design/issues/7358\n\n      if (isNaN(val)) {\n        return value;\n      }\n\n      if (val < this.nzMin) {\n        val = this.nzMin;\n      }\n\n      if (val > this.nzMax) {\n        val = this.nzMax;\n      }\n\n      return val;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber(num) {\n      if (this.isNotCompleteNumber(num)) {\n        return num;\n      }\n\n      var numStr = String(num);\n\n      if (numStr.indexOf('.') >= 0 && isNotNil(this.nzPrecision)) {\n        if (typeof this.nzPrecisionMode === 'function') {\n          return this.nzPrecisionMode(num, this.nzPrecision);\n        } else if (this.nzPrecisionMode === 'cut') {\n          var numSplit = numStr.split('.');\n          numSplit[1] = numSplit[1].slice(0, this.nzPrecision);\n          return Number(numSplit.join('.'));\n        }\n\n        return Number(Number(num).toFixed(this.nzPrecision));\n      }\n\n      return Number(num);\n    }\n  }, {\n    key: \"getRatio\",\n    value: function getRatio(e) {\n      var ratio = 1;\n\n      if (e.metaKey || e.ctrlKey) {\n        ratio = 0.1;\n      } else if (e.shiftKey) {\n        ratio = 10;\n      }\n\n      return ratio;\n    }\n  }, {\n    key: \"down\",\n    value: function down(e, ratio) {\n      if (!this.isFocused) {\n        this.focus();\n      }\n\n      this.step('down', e, ratio);\n    }\n  }, {\n    key: \"up\",\n    value: function up(e, ratio) {\n      if (!this.isFocused) {\n        this.focus();\n      }\n\n      this.step('up', e, ratio);\n    }\n  }, {\n    key: \"getPrecision\",\n    value: function getPrecision(value) {\n      var valueString = value.toString();\n\n      if (valueString.indexOf('e-') >= 0) {\n        return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);\n      }\n\n      var precision = 0;\n\n      if (valueString.indexOf('.') >= 0) {\n        precision = valueString.length - valueString.indexOf('.') - 1;\n      }\n\n      return precision;\n    } // step={1.0} value={1.51}\n    // press +\n    // then value should be 2.51, rather than 2.5\n    // if this.props.precision is undefined\n    // https://github.com/react-component/input-number/issues/39\n\n  }, {\n    key: \"getMaxPrecision\",\n    value: function getMaxPrecision(currentValue, ratio) {\n      if (isNotNil(this.nzPrecision)) {\n        return this.nzPrecision;\n      }\n\n      var ratioPrecision = this.getPrecision(ratio);\n      var stepPrecision = this.getPrecision(this.nzStep);\n      var currentValuePrecision = this.getPrecision(currentValue);\n\n      if (!currentValue) {\n        return ratioPrecision + stepPrecision;\n      }\n\n      return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n    }\n  }, {\n    key: \"getPrecisionFactor\",\n    value: function getPrecisionFactor(currentValue, ratio) {\n      var precision = this.getMaxPrecision(currentValue, ratio);\n      return Math.pow(10, precision);\n    }\n  }, {\n    key: \"upStep\",\n    value: function upStep(val, rat) {\n      var precisionFactor = this.getPrecisionFactor(val, rat);\n      var precision = Math.abs(this.getMaxPrecision(val, rat));\n      var result;\n\n      if (typeof val === 'number') {\n        result = ((precisionFactor * val + precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n      } else {\n        result = this.nzMin === -Infinity ? this.nzStep : this.nzMin;\n      }\n\n      return this.toNumber(result);\n    }\n  }, {\n    key: \"downStep\",\n    value: function downStep(val, rat) {\n      var precisionFactor = this.getPrecisionFactor(val, rat);\n      var precision = Math.abs(this.getMaxPrecision(val, rat));\n      var result;\n\n      if (typeof val === 'number') {\n        result = ((precisionFactor * val - precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n      } else {\n        result = this.nzMin === -Infinity ? -this.nzStep : this.nzMin;\n      }\n\n      return this.toNumber(result);\n    }\n  }, {\n    key: \"step\",\n    value: function step(type, e) {\n      var _this = this;\n\n      var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      this.stop();\n      e.preventDefault();\n\n      if (this.nzDisabled) {\n        return;\n      }\n\n      var value = this.getCurrentValidValue(this.parsedValue) || 0;\n      var val = 0;\n\n      if (type === 'up') {\n        val = this.upStep(value, ratio);\n      } else if (type === 'down') {\n        val = this.downStep(value, ratio);\n      }\n\n      var outOfRange = val > this.nzMax || val < this.nzMin;\n\n      if (val > this.nzMax) {\n        val = this.nzMax;\n      } else if (val < this.nzMin) {\n        val = this.nzMin;\n      }\n\n      this.setValue(val);\n      this.updateDisplayValue(val);\n      this.isFocused = true;\n\n      if (outOfRange) {\n        return;\n      }\n\n      this.autoStepTimer = setTimeout(function () {\n        _this[type](e, ratio);\n      }, 300);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.autoStepTimer) {\n        clearTimeout(this.autoStepTimer);\n      }\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      if (\"\".concat(this.value) !== \"\".concat(value)) {\n        this.onChange(value);\n      }\n\n      this.value = value;\n      this.parsedValue = value;\n      this.disabledUp = this.disabledDown = false;\n\n      if (value || value === 0) {\n        var val = Number(value);\n\n        if (val >= this.nzMax) {\n          this.disabledUp = true;\n        }\n\n        if (val <= this.nzMin) {\n          this.disabledDown = true;\n        }\n      }\n    }\n  }, {\n    key: \"updateDisplayValue\",\n    value: function updateDisplayValue(value) {\n      var displayValue = isNotNil(this.nzFormatter(value)) ? this.nzFormatter(value) : '';\n      this.displayValue = displayValue;\n      this.inputElement.nativeElement.value = \"\".concat(displayValue);\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {\n      if (e.keyCode === UP_ARROW) {\n        var ratio = this.getRatio(e);\n        this.up(e, ratio);\n        this.stop();\n      } else if (e.keyCode === DOWN_ARROW) {\n        var _ratio = this.getRatio(e);\n\n        this.down(e, _ratio);\n        this.stop();\n      } else if (e.keyCode === ENTER) {\n        this.updateDisplayValue(this.value);\n      }\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n      this.setValue(value);\n      this.updateDisplayValue(value);\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(disabled) {\n      this.nzDisabled = disabled;\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.inputElement.nativeElement.blur();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      this.focusMonitor.monitor(this.elementRef, true).subscribe(function (focusOrigin) {\n        if (!focusOrigin) {\n          _this2.isFocused = false;\n\n          _this2.updateDisplayValue(_this2.value);\n\n          _this2.nzBlur.emit();\n\n          Promise.resolve().then(function () {\n            return _this2.onTouched();\n          });\n        } else {\n          _this2.isFocused = true;\n\n          _this2.nzFocus.emit();\n        }\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.nzFormatter && !changes.nzFormatter.isFirstChange()) {\n        var validValue = this.getCurrentValidValue(this.parsedValue);\n        this.setValue(validValue);\n        this.updateDisplayValue(validValue);\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.nzAutoFocus) {\n        this.focus();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.focusMonitor.stopMonitoring(this.elementRef);\n    }\n  }]);\n\n  return NzInputNumberComponent;\n}();\n\nNzInputNumberComponent.ɵfac = function NzInputNumberComponent_Factory(t) {\n  return new (t || NzInputNumberComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor));\n};\n\nNzInputNumberComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzInputNumberComponent,\n  selectors: [[\"nz-input-number\"]],\n  viewQuery: function NzInputNumberComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n    }\n  },\n  hostVars: 10,\n  hostBindings: function NzInputNumberComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-input-number\", true)(\"ant-input-number-focused\", ctx.isFocused)(\"ant-input-number-lg\", ctx.nzSize === \"large\")(\"ant-input-number-sm\", ctx.nzSize === \"small\")(\"ant-input-number-disabled\", ctx.nzDisabled);\n    }\n  },\n  inputs: {\n    nzSize: \"nzSize\",\n    nzMin: \"nzMin\",\n    nzMax: \"nzMax\",\n    nzParser: \"nzParser\",\n    nzPrecisionMode: \"nzPrecisionMode\",\n    nzPlaceHolder: \"nzPlaceHolder\",\n    nzStep: \"nzStep\",\n    nzInputMode: \"nzInputMode\",\n    nzId: \"nzId\",\n    nzDisabled: \"nzDisabled\",\n    nzAutoFocus: \"nzAutoFocus\",\n    nzFormatter: \"nzFormatter\",\n    nzPrecision: \"nzPrecision\"\n  },\n  outputs: {\n    nzBlur: \"nzBlur\",\n    nzFocus: \"nzFocus\"\n  },\n  exportAs: [\"nzInputNumber\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NzInputNumberComponent;\n    }),\n    multi: true\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 13,\n  consts: [[1, \"ant-input-number-handler-wrap\"], [\"unselectable\", \"unselectable\", 1, \"ant-input-number-handler\", \"ant-input-number-handler-up\", 3, \"mousedown\", \"mouseup\", \"mouseleave\"], [\"nz-icon\", \"\", \"nzType\", \"up\", 1, \"ant-input-number-handler-up-inner\"], [\"unselectable\", \"unselectable\", 1, \"ant-input-number-handler\", \"ant-input-number-handler-down\", 3, \"mousedown\", \"mouseup\", \"mouseleave\"], [\"nz-icon\", \"\", \"nzType\", \"down\", 1, \"ant-input-number-handler-down-inner\"], [1, \"ant-input-number-input-wrap\"], [\"autocomplete\", \"off\", 1, \"ant-input-number-input\", 3, \"disabled\", \"placeholder\", \"ngModel\", \"keydown\", \"keyup\", \"ngModelChange\"], [\"inputElement\", \"\"]],\n  template: function NzInputNumberComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵlistener(\"mousedown\", function NzInputNumberComponent_Template_span_mousedown_1_listener($event) {\n        return ctx.up($event);\n      })(\"mouseup\", function NzInputNumberComponent_Template_span_mouseup_1_listener() {\n        return ctx.stop();\n      })(\"mouseleave\", function NzInputNumberComponent_Template_span_mouseleave_1_listener() {\n        return ctx.stop();\n      });\n      ɵngcc0.ɵɵelement(2, \"i\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n      ɵngcc0.ɵɵlistener(\"mousedown\", function NzInputNumberComponent_Template_span_mousedown_3_listener($event) {\n        return ctx.down($event);\n      })(\"mouseup\", function NzInputNumberComponent_Template_span_mouseup_3_listener() {\n        return ctx.stop();\n      })(\"mouseleave\", function NzInputNumberComponent_Template_span_mouseleave_3_listener() {\n        return ctx.stop();\n      });\n      ɵngcc0.ɵɵelement(4, \"i\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵelementStart(6, \"input\", 6, 7);\n      ɵngcc0.ɵɵlistener(\"keydown\", function NzInputNumberComponent_Template_input_keydown_6_listener($event) {\n        return ctx.onKeyDown($event);\n      })(\"keyup\", function NzInputNumberComponent_Template_input_keyup_6_listener() {\n        return ctx.stop();\n      })(\"ngModelChange\", function NzInputNumberComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.onModelChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"ant-input-number-handler-up-disabled\", ctx.disabledUp);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"ant-input-number-handler-down-disabled\", ctx.disabledDown);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.nzDisabled)(\"placeholder\", ctx.nzPlaceHolder)(\"ngModel\", ctx.displayValue);\n      ɵngcc0.ɵɵattribute(\"id\", ctx.nzId)(\"autofocus\", ctx.nzAutoFocus ? \"autofocus\" : null)(\"min\", ctx.nzMin)(\"max\", ctx.nzMax)(\"step\", ctx.nzStep)(\"inputmode\", ctx.nzInputMode);\n    }\n  },\n  directives: [ɵngcc2.NzIconDirective, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzInputNumberComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: FocusMonitor\n  }];\n};\n\nNzInputNumberComponent.propDecorators = {\n  nzBlur: [{\n    type: Output\n  }],\n  nzFocus: [{\n    type: Output\n  }],\n  inputElement: [{\n    type: ViewChild,\n    args: ['inputElement', {\n      static: true\n    }]\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  nzMin: [{\n    type: Input\n  }],\n  nzMax: [{\n    type: Input\n  }],\n  nzParser: [{\n    type: Input\n  }],\n  nzPrecision: [{\n    type: Input\n  }],\n  nzPrecisionMode: [{\n    type: Input\n  }],\n  nzPlaceHolder: [{\n    type: Input\n  }],\n  nzStep: [{\n    type: Input\n  }],\n  nzInputMode: [{\n    type: Input\n  }],\n  nzId: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzAutoFocus: [{\n    type: Input\n  }],\n  nzFormatter: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzInputNumberComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzInputNumberComponent.prototype, \"nzAutoFocus\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzInputNumberComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-input-number',\n      exportAs: 'nzInputNumber',\n      template: \"\\n    <div class=\\\"ant-input-number-handler-wrap\\\">\\n      <span\\n        unselectable=\\\"unselectable\\\"\\n        class=\\\"ant-input-number-handler ant-input-number-handler-up\\\"\\n        (mousedown)=\\\"up($event)\\\"\\n        (mouseup)=\\\"stop()\\\"\\n        (mouseleave)=\\\"stop()\\\"\\n        [class.ant-input-number-handler-up-disabled]=\\\"disabledUp\\\"\\n      >\\n        <i nz-icon nzType=\\\"up\\\" class=\\\"ant-input-number-handler-up-inner\\\"></i>\\n      </span>\\n      <span\\n        unselectable=\\\"unselectable\\\"\\n        class=\\\"ant-input-number-handler ant-input-number-handler-down\\\"\\n        (mousedown)=\\\"down($event)\\\"\\n        (mouseup)=\\\"stop()\\\"\\n        (mouseleave)=\\\"stop()\\\"\\n        [class.ant-input-number-handler-down-disabled]=\\\"disabledDown\\\"\\n      >\\n        <i nz-icon nzType=\\\"down\\\" class=\\\"ant-input-number-handler-down-inner\\\"></i>\\n      </span>\\n    </div>\\n    <div class=\\\"ant-input-number-input-wrap\\\">\\n      <input\\n        #inputElement\\n        autocomplete=\\\"off\\\"\\n        class=\\\"ant-input-number-input\\\"\\n        [attr.id]=\\\"nzId\\\"\\n        [attr.autofocus]=\\\"nzAutoFocus ? 'autofocus' : null\\\"\\n        [disabled]=\\\"nzDisabled\\\"\\n        [attr.min]=\\\"nzMin\\\"\\n        [attr.max]=\\\"nzMax\\\"\\n        [placeholder]=\\\"nzPlaceHolder\\\"\\n        [attr.step]=\\\"nzStep\\\"\\n        [attr.inputmode]=\\\"nzInputMode\\\"\\n        (keydown)=\\\"onKeyDown($event)\\\"\\n        (keyup)=\\\"stop()\\\"\\n        [ngModel]=\\\"displayValue\\\"\\n        (ngModelChange)=\\\"onModelChange($event)\\\"\\n      />\\n    </div>\\n  \",\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NzInputNumberComponent;\n        }),\n        multi: true\n      }],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.ant-input-number]': 'true',\n        '[class.ant-input-number-focused]': 'isFocused',\n        '[class.ant-input-number-lg]': \"nzSize === 'large'\",\n        '[class.ant-input-number-sm]': \"nzSize === 'small'\",\n        '[class.ant-input-number-disabled]': 'nzDisabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }];\n  }, {\n    nzBlur: [{\n      type: Output\n    }],\n    nzFocus: [{\n      type: Output\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzMin: [{\n      type: Input\n    }],\n    nzMax: [{\n      type: Input\n    }],\n    nzParser: [{\n      type: Input\n    }],\n    nzPrecisionMode: [{\n      type: Input\n    }],\n    nzPlaceHolder: [{\n      type: Input\n    }],\n    nzStep: [{\n      type: Input\n    }],\n    nzInputMode: [{\n      type: Input\n    }],\n    nzId: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzAutoFocus: [{\n      type: Input\n    }],\n    nzFormatter: [{\n      type: Input\n    }],\n    inputElement: [{\n      type: ViewChild,\n      args: ['inputElement', {\n        static: true\n      }]\n    }],\n    nzPrecision: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzInputNumberModule = function NzInputNumberModule() {\n  _classCallCheck(this, NzInputNumberModule);\n};\n\nNzInputNumberModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzInputNumberModule\n});\nNzInputNumberModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzInputNumberModule_Factory(t) {\n    return new (t || NzInputNumberModule)();\n  },\n  imports: [[CommonModule, FormsModule, NzIconModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzInputNumberModule, {\n    declarations: function declarations() {\n      return [NzInputNumberComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, NzIconModule];\n    },\n    exports: function exports() {\n      return [NzInputNumberComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzInputNumberModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, NzIconModule],\n      declarations: [NzInputNumberComponent],\n      exports: [NzInputNumberComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzInputNumberComponent, NzInputNumberModule };","map":{"version":3,"sources":["../../components/input-number/input-number.component.ts","../../components/input-number/input-number.module.ts","../../components/input-number/public-api.ts","../../components/input-number/ng-zorro-antd-input-number.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { DOWN_ARROW, ENTER, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { BooleanInput, NzSizeLDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'nz-input-number',\n  exportAs: 'nzInputNumber',\n  template: `\n    <div class=\"ant-input-number-handler-wrap\">\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-up\"\n        (mousedown)=\"up($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-up-disabled]=\"disabledUp\"\n      >\n        <i nz-icon nzType=\"up\" class=\"ant-input-number-handler-up-inner\"></i>\n      </span>\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-down\"\n        (mousedown)=\"down($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-down-disabled]=\"disabledDown\"\n      >\n        <i nz-icon nzType=\"down\" class=\"ant-input-number-handler-down-inner\"></i>\n      </span>\n    </div>\n    <div class=\"ant-input-number-input-wrap\">\n      <input\n        #inputElement\n        autocomplete=\"off\"\n        class=\"ant-input-number-input\"\n        [attr.id]=\"nzId\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [disabled]=\"nzDisabled\"\n        [attr.min]=\"nzMin\"\n        [attr.max]=\"nzMax\"\n        [placeholder]=\"nzPlaceHolder\"\n        [attr.step]=\"nzStep\"\n        [attr.inputmode]=\"nzInputMode\"\n        (keydown)=\"onKeyDown($event)\"\n        (keyup)=\"stop()\"\n        [ngModel]=\"displayValue\"\n        (ngModelChange)=\"onModelChange($event)\"\n      />\n    </div>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzInputNumberComponent),\n      multi: true\n    }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-input-number]': 'true',\n    '[class.ant-input-number-focused]': 'isFocused',\n    '[class.ant-input-number-lg]': `nzSize === 'large'`,\n    '[class.ant-input-number-sm]': `nzSize === 'small'`,\n    '[class.ant-input-number-disabled]': 'nzDisabled'\n  }\n})\nexport class NzInputNumberComponent implements ControlValueAccessor, AfterViewInit, OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n\n  private autoStepTimer?: number;\n  private parsedValue?: string | number;\n  private value?: number;\n  displayValue?: string | number;\n  isFocused = false;\n  disabledUp = false;\n  disabledDown = false;\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @Output() readonly nzBlur = new EventEmitter();\n  @Output() readonly nzFocus = new EventEmitter();\n  @ViewChild('inputElement', { static: true }) inputElement!: ElementRef<HTMLInputElement>;\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() nzMin: number = -Infinity;\n  @Input() nzMax: number = Infinity;\n  @Input() nzParser = (value: string) =>\n    value\n      .trim()\n      .replace(/。/g, '.')\n      .replace(/[^\\w\\.-]+/g, '');\n  @Input() nzPrecision?: number;\n  @Input() nzPrecisionMode: 'cut' | 'toFixed' | ((value: number | string, precision?: number) => number) = 'toFixed';\n  @Input() nzPlaceHolder = '';\n  @Input() nzStep = 1;\n  @Input() nzInputMode: string = 'decimal';\n  @Input() nzId: string | null = null;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzAutoFocus = false;\n  @Input() nzFormatter: (value: number) => string | number = value => value;\n\n  onModelChange(value: string): void {\n    this.parsedValue = this.nzParser(value);\n    this.inputElement.nativeElement.value = `${this.parsedValue}`;\n    const validValue = this.getCurrentValidValue(this.parsedValue);\n    this.setValue(validValue);\n  }\n\n  getCurrentValidValue(value: string | number): number {\n    let val = value;\n    if (val === '') {\n      val = '';\n    } else if (!this.isNotCompleteNumber(val)) {\n      val = `${this.getValidValue(val)}`;\n    } else {\n      val = this.value!;\n    }\n    return this.toNumber(val);\n  }\n\n  // '1.' '1x' 'xx' '' => are not complete numbers\n  isNotCompleteNumber(num: string | number): boolean {\n    return isNaN(num as number) || num === '' || num === null || !!(num && num.toString().indexOf('.') === num.toString().length - 1);\n  }\n\n  getValidValue(value?: string | number): string | number | undefined {\n    let val = parseFloat(value as string);\n    // https://github.com/ant-design/ant-design/issues/7358\n    if (isNaN(val)) {\n      return value;\n    }\n    if (val < this.nzMin) {\n      val = this.nzMin;\n    }\n    if (val > this.nzMax) {\n      val = this.nzMax;\n    }\n    return val;\n  }\n\n  toNumber(num: string | number): number {\n    if (this.isNotCompleteNumber(num)) {\n      return num as number;\n    }\n    const numStr = String(num);\n    if (numStr.indexOf('.') >= 0 && isNotNil(this.nzPrecision)) {\n      if (typeof this.nzPrecisionMode === 'function') {\n        return this.nzPrecisionMode(num, this.nzPrecision);\n      } else if (this.nzPrecisionMode === 'cut') {\n        const numSplit = numStr.split('.');\n        numSplit[1] = numSplit[1].slice(0, this.nzPrecision);\n        return Number(numSplit.join('.'));\n      }\n      return Number(Number(num).toFixed(this.nzPrecision));\n    }\n    return Number(num);\n  }\n\n  getRatio(e: KeyboardEvent): number {\n    let ratio = 1;\n    if (e.metaKey || e.ctrlKey) {\n      ratio = 0.1;\n    } else if (e.shiftKey) {\n      ratio = 10;\n    }\n    return ratio;\n  }\n\n  down(e: MouseEvent | KeyboardEvent, ratio?: number): void {\n    if (!this.isFocused) {\n      this.focus();\n    }\n    this.step('down', e, ratio);\n  }\n\n  up(e: MouseEvent | KeyboardEvent, ratio?: number): void {\n    if (!this.isFocused) {\n      this.focus();\n    }\n    this.step('up', e, ratio);\n  }\n\n  getPrecision(value: number): number {\n    const valueString = value.toString();\n    if (valueString.indexOf('e-') >= 0) {\n      return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);\n    }\n    let precision = 0;\n    if (valueString.indexOf('.') >= 0) {\n      precision = valueString.length - valueString.indexOf('.') - 1;\n    }\n    return precision;\n  }\n\n  // step={1.0} value={1.51}\n  // press +\n  // then value should be 2.51, rather than 2.5\n  // if this.props.precision is undefined\n  // https://github.com/react-component/input-number/issues/39\n  getMaxPrecision(currentValue: string | number, ratio: number): number {\n    if (isNotNil(this.nzPrecision)) {\n      return this.nzPrecision;\n    }\n    const ratioPrecision = this.getPrecision(ratio);\n    const stepPrecision = this.getPrecision(this.nzStep);\n    const currentValuePrecision = this.getPrecision(currentValue as number);\n    if (!currentValue) {\n      return ratioPrecision + stepPrecision;\n    }\n    return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n  }\n\n  getPrecisionFactor(currentValue: string | number, ratio: number): number {\n    const precision = this.getMaxPrecision(currentValue, ratio);\n    return Math.pow(10, precision);\n  }\n\n  upStep(val: string | number, rat: number): number {\n    const precisionFactor = this.getPrecisionFactor(val, rat);\n    const precision = Math.abs(this.getMaxPrecision(val, rat));\n    let result;\n    if (typeof val === 'number') {\n      result = ((precisionFactor * val + precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n    } else {\n      result = this.nzMin === -Infinity ? this.nzStep : this.nzMin;\n    }\n    return this.toNumber(result);\n  }\n\n  downStep(val: string | number, rat: number): number {\n    const precisionFactor = this.getPrecisionFactor(val, rat);\n    const precision = Math.abs(this.getMaxPrecision(val, rat));\n    let result;\n    if (typeof val === 'number') {\n      result = ((precisionFactor * val - precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n    } else {\n      result = this.nzMin === -Infinity ? -this.nzStep : this.nzMin;\n    }\n    return this.toNumber(result);\n  }\n\n  step<T extends keyof NzInputNumberComponent>(type: T, e: MouseEvent | KeyboardEvent, ratio: number = 1): void {\n    this.stop();\n    e.preventDefault();\n    if (this.nzDisabled) {\n      return;\n    }\n    const value = this.getCurrentValidValue(this.parsedValue!) || 0;\n    let val = 0;\n    if (type === 'up') {\n      val = this.upStep(value, ratio);\n    } else if (type === 'down') {\n      val = this.downStep(value, ratio);\n    }\n    const outOfRange = val > this.nzMax || val < this.nzMin;\n    if (val > this.nzMax) {\n      val = this.nzMax;\n    } else if (val < this.nzMin) {\n      val = this.nzMin;\n    }\n    this.setValue(val);\n    this.updateDisplayValue(val);\n    this.isFocused = true;\n    if (outOfRange) {\n      return;\n    }\n    this.autoStepTimer = setTimeout(() => {\n      (this[type] as (e: MouseEvent | KeyboardEvent, ratio: number) => void)(e, ratio);\n    }, 300);\n  }\n\n  stop(): void {\n    if (this.autoStepTimer) {\n      clearTimeout(this.autoStepTimer);\n    }\n  }\n\n  setValue(value: number): void {\n    if (`${this.value}` !== `${value}`) {\n      this.onChange(value);\n    }\n    this.value = value;\n    this.parsedValue = value;\n    this.disabledUp = this.disabledDown = false;\n    if (value || value === 0) {\n      const val = Number(value);\n      if (val >= this.nzMax) {\n        this.disabledUp = true;\n      }\n      if (val <= this.nzMin) {\n        this.disabledDown = true;\n      }\n    }\n  }\n\n  updateDisplayValue(value: number): void {\n    const displayValue = isNotNil(this.nzFormatter(value)) ? this.nzFormatter(value) : '';\n    this.displayValue = displayValue;\n    this.inputElement.nativeElement.value = `${displayValue}`;\n  }\n\n  onKeyDown(e: KeyboardEvent): void {\n    if (e.keyCode === UP_ARROW) {\n      const ratio = this.getRatio(e);\n      this.up(e, ratio);\n      this.stop();\n    } else if (e.keyCode === DOWN_ARROW) {\n      const ratio = this.getRatio(e);\n      this.down(e, ratio);\n      this.stop();\n    } else if (e.keyCode === ENTER) {\n      this.updateDisplayValue(this.value!);\n    }\n  }\n\n  writeValue(value: number): void {\n    this.value = value;\n    this.setValue(value);\n    this.updateDisplayValue(value);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement.nativeElement.blur();\n  }\n\n  constructor(private elementRef: ElementRef, private cdr: ChangeDetectorRef, private focusMonitor: FocusMonitor) {}\n\n  ngOnInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        this.isFocused = false;\n        this.updateDisplayValue(this.value!);\n        this.nzBlur.emit();\n        Promise.resolve().then(() => this.onTouched());\n      } else {\n        this.isFocused = true;\n        this.nzFocus.emit();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzFormatter && !changes.nzFormatter.isFirstChange()) {\n      const validValue = this.getCurrentValidValue(this.parsedValue!);\n      this.setValue(validValue);\n      this.updateDisplayValue(validValue);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzInputNumberComponent } from './input-number.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NzIconModule],\n  declarations: [NzInputNumberComponent],\n  exports: [NzInputNumberComponent]\n})\nexport class NzInputNumberModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './input-number.component';\nexport * from './input-number.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}