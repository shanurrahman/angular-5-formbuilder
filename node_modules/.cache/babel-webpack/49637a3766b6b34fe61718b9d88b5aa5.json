{"ast":null,"code":"import _slicedToArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, EventEmitter, ChangeDetectorRef, NgZone, Output, Inject, LOCALE_ID, NgModule } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { getLocaleNumberSymbol, NumberSymbol, CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzPipesModule } from 'ng-zorro-antd/core/pipe';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/pipe';\n\nfunction NzStatisticComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.nzTitle);\n  }\n}\n\nfunction NzStatisticComponent_span_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.nzPrefix);\n  }\n}\n\nfunction NzStatisticComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtemplate(1, NzStatisticComponent_span_4_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.nzPrefix);\n  }\n}\n\nfunction NzStatisticComponent_span_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.nzSuffix);\n  }\n}\n\nfunction NzStatisticComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtemplate(1, NzStatisticComponent_span_6_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzSuffix);\n  }\n}\n\nfunction NzCountdownComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵpipe(1, \"nzTimeRange\");\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(1, 1, ctx_r1.diff, ctx_r1.nzFormat));\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzStatisticNumberComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzValueTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r0.nzValue));\n  }\n}\n\nfunction NzStatisticNumberComponent_ng_container_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.displayInt);\n  }\n}\n\nfunction NzStatisticNumberComponent_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.displayDecimal);\n  }\n}\n\nfunction NzStatisticNumberComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzStatisticNumberComponent_ng_container_2_span_1_Template, 2, 1, \"span\", 4);\n    ɵngcc0.ɵɵtemplate(2, NzStatisticNumberComponent_ng_container_2_span_2_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.displayInt);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.displayDecimal);\n  }\n}\n\nvar NzStatisticComponent = function NzStatisticComponent() {\n  _classCallCheck(this, NzStatisticComponent);\n\n  this.nzValueStyle = {};\n};\n\nNzStatisticComponent.ɵfac = function NzStatisticComponent_Factory(t) {\n  return new (t || NzStatisticComponent)();\n};\n\nNzStatisticComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzStatisticComponent,\n  selectors: [[\"nz-statistic\"]],\n  inputs: {\n    nzValueStyle: \"nzValueStyle\",\n    nzPrefix: \"nzPrefix\",\n    nzSuffix: \"nzSuffix\",\n    nzTitle: \"nzTitle\",\n    nzValue: \"nzValue\",\n    nzValueTemplate: \"nzValueTemplate\"\n  },\n  exportAs: [\"nzStatistic\"],\n  decls: 7,\n  vars: 6,\n  consts: [[1, \"ant-statistic\"], [1, \"ant-statistic-title\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-statistic-content\", 3, \"ngStyle\"], [\"class\", \"ant-statistic-content-prefix\", 4, \"ngIf\"], [3, \"nzValue\", \"nzValueTemplate\"], [\"class\", \"ant-statistic-content-suffix\", 4, \"ngIf\"], [1, \"ant-statistic-content-prefix\"], [1, \"ant-statistic-content-suffix\"]],\n  template: function NzStatisticComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, NzStatisticComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n      ɵngcc0.ɵɵtemplate(4, NzStatisticComponent_span_4_Template, 2, 1, \"span\", 4);\n      ɵngcc0.ɵɵelement(5, \"nz-statistic-number\", 5);\n      ɵngcc0.ɵɵtemplate(6, NzStatisticComponent_span_6_Template, 2, 1, \"span\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzTitle);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.nzValueStyle);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzPrefix);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"nzValue\", ctx.nzValue)(\"nzValueTemplate\", ctx.nzValueTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzSuffix);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NzStringTemplateOutletDirective, ɵngcc2.NgStyle, ɵngcc2.NgIf, NzStatisticNumberComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzStatisticComponent.propDecorators = {\n  nzPrefix: [{\n    type: Input\n  }],\n  nzSuffix: [{\n    type: Input\n  }],\n  nzTitle: [{\n    type: Input\n  }],\n  nzValue: [{\n    type: Input\n  }],\n  nzValueStyle: [{\n    type: Input\n  }],\n  nzValueTemplate: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzStatisticComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-statistic',\n      exportAs: 'nzStatistic',\n      template: \"\\n    <div class=\\\"ant-statistic\\\">\\n      <div class=\\\"ant-statistic-title\\\">\\n        <ng-container *nzStringTemplateOutlet=\\\"nzTitle\\\">{{ nzTitle }}</ng-container>\\n      </div>\\n      <div class=\\\"ant-statistic-content\\\" [ngStyle]=\\\"nzValueStyle\\\">\\n        <span *ngIf=\\\"nzPrefix\\\" class=\\\"ant-statistic-content-prefix\\\">\\n          <ng-container *nzStringTemplateOutlet=\\\"nzPrefix\\\">{{ nzPrefix }}</ng-container>\\n        </span>\\n        <nz-statistic-number [nzValue]=\\\"nzValue\\\" [nzValueTemplate]=\\\"nzValueTemplate\\\"> </nz-statistic-number>\\n        <span *ngIf=\\\"nzSuffix\\\" class=\\\"ant-statistic-content-suffix\\\">\\n          <ng-container *nzStringTemplateOutlet=\\\"nzSuffix\\\">{{ nzSuffix }}</ng-container>\\n        </span>\\n      </div>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzValueStyle: [{\n      type: Input\n    }],\n    nzPrefix: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzValue: [{\n      type: Input\n    }],\n    nzValueTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar REFRESH_INTERVAL = 1000 / 30;\n\nvar NzCountdownComponent = /*#__PURE__*/function (_NzStatisticComponent) {\n  _inherits(NzCountdownComponent, _NzStatisticComponent);\n\n  var _super = _createSuper(NzCountdownComponent);\n\n  function NzCountdownComponent(cdr, ngZone, platform) {\n    var _this;\n\n    _classCallCheck(this, NzCountdownComponent);\n\n    _this = _super.call(this);\n    _this.cdr = cdr;\n    _this.ngZone = ngZone;\n    _this.platform = platform;\n    _this.nzFormat = 'HH:mm:ss';\n    _this.nzCountdownFinish = new EventEmitter();\n    _this.target = 0;\n    return _this;\n  }\n\n  _createClass(NzCountdownComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.nzValue) {\n        this.target = Number(changes.nzValue.currentValue);\n\n        if (!changes.nzValue.isFirstChange()) {\n          this.syncTimer();\n        }\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.syncTimer();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.stopTimer();\n    }\n  }, {\n    key: \"syncTimer\",\n    value: function syncTimer() {\n      if (this.target >= Date.now()) {\n        this.startTimer();\n      } else {\n        this.stopTimer();\n      }\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      var _this2 = this;\n\n      if (this.platform.isBrowser) {\n        this.ngZone.runOutsideAngular(function () {\n          _this2.stopTimer();\n\n          _this2.updater_ = interval(REFRESH_INTERVAL).subscribe(function () {\n            _this2.updateValue();\n\n            _this2.cdr.detectChanges();\n          });\n        });\n      }\n    }\n  }, {\n    key: \"stopTimer\",\n    value: function stopTimer() {\n      if (this.updater_) {\n        this.updater_.unsubscribe();\n        this.updater_ = null;\n      }\n    }\n    /**\n     * Update time that should be displayed on the screen.\n     */\n\n  }, {\n    key: \"updateValue\",\n    value: function updateValue() {\n      this.diff = Math.max(this.target - Date.now(), 0);\n\n      if (this.diff === 0) {\n        this.stopTimer();\n        this.nzCountdownFinish.emit();\n      }\n    }\n  }]);\n\n  return NzCountdownComponent;\n}(NzStatisticComponent);\n\nNzCountdownComponent.ɵfac = function NzCountdownComponent_Factory(t) {\n  return new (t || NzCountdownComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform));\n};\n\nNzCountdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzCountdownComponent,\n  selectors: [[\"nz-countdown\"]],\n  inputs: {\n    nzFormat: \"nzFormat\"\n  },\n  outputs: {\n    nzCountdownFinish: \"nzCountdownFinish\"\n  },\n  exportAs: [\"nzCountdown\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[3, \"nzValue\", \"nzValueStyle\", \"nzValueTemplate\", \"nzTitle\", \"nzPrefix\", \"nzSuffix\"], [\"countDownTpl\", \"\"]],\n  template: function NzCountdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"nz-statistic\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzCountdownComponent_ng_template_1_Template, 2, 4, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(2);\n\n      ɵngcc0.ɵɵproperty(\"nzValue\", ctx.diff)(\"nzValueStyle\", ctx.nzValueStyle)(\"nzValueTemplate\", ctx.nzValueTemplate || _r0)(\"nzTitle\", ctx.nzTitle)(\"nzPrefix\", ctx.nzPrefix)(\"nzSuffix\", ctx.nzSuffix);\n    }\n  },\n  directives: [NzStatisticComponent],\n  pipes: [ɵngcc4.NzTimeRangePipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzCountdownComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }];\n};\n\nNzCountdownComponent.propDecorators = {\n  nzFormat: [{\n    type: Input\n  }],\n  nzCountdownFinish: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCountdownComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-countdown',\n      exportAs: 'nzCountdown',\n      template: \"\\n    <nz-statistic\\n      [nzValue]=\\\"diff\\\"\\n      [nzValueStyle]=\\\"nzValueStyle\\\"\\n      [nzValueTemplate]=\\\"nzValueTemplate || countDownTpl\\\"\\n      [nzTitle]=\\\"nzTitle\\\"\\n      [nzPrefix]=\\\"nzPrefix\\\"\\n      [nzSuffix]=\\\"nzSuffix\\\"\\n    >\\n    </nz-statistic>\\n\\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc3.Platform\n    }];\n  }, {\n    nzFormat: [{\n      type: Input\n    }],\n    nzCountdownFinish: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzStatisticNumberComponent = /*#__PURE__*/function () {\n  function NzStatisticNumberComponent(locale_id) {\n    _classCallCheck(this, NzStatisticNumberComponent);\n\n    this.locale_id = locale_id;\n    this.displayInt = '';\n    this.displayDecimal = '';\n  }\n\n  _createClass(NzStatisticNumberComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.formatNumber();\n    }\n  }, {\n    key: \"formatNumber\",\n    value: function formatNumber() {\n      var decimalSeparator = typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n      var value = String(this.nzValue);\n\n      var _value$split = value.split(decimalSeparator),\n          _value$split2 = _slicedToArray(_value$split, 2),\n          int = _value$split2[0],\n          decimal = _value$split2[1];\n\n      this.displayInt = int;\n      this.displayDecimal = decimal ? \"\".concat(decimalSeparator).concat(decimal) : '';\n    }\n  }]);\n\n  return NzStatisticNumberComponent;\n}();\n\nNzStatisticNumberComponent.ɵfac = function NzStatisticNumberComponent_Factory(t) {\n  return new (t || NzStatisticNumberComponent)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID));\n};\n\nNzStatisticNumberComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzStatisticNumberComponent,\n  selectors: [[\"nz-statistic-number\"]],\n  inputs: {\n    nzValue: \"nzValue\",\n    nzValueTemplate: \"nzValueTemplate\"\n  },\n  exportAs: [\"nzStatisticNumber\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"ant-statistic-content-value\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"ant-statistic-content-value-int\", 4, \"ngIf\"], [\"class\", \"ant-statistic-content-value-decimal\", 4, \"ngIf\"], [1, \"ant-statistic-content-value-int\"], [1, \"ant-statistic-content-value-decimal\"]],\n  template: function NzStatisticNumberComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzStatisticNumberComponent_ng_container_1_Template, 1, 4, \"ng-container\", 1);\n      ɵngcc0.ɵɵtemplate(2, NzStatisticNumberComponent_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzValueTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.nzValueTemplate);\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzStatisticNumberComponent.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\nNzStatisticNumberComponent.propDecorators = {\n  nzValue: [{\n    type: Input\n  }],\n  nzValueTemplate: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzStatisticNumberComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      selector: 'nz-statistic-number',\n      exportAs: 'nzStatisticNumber',\n      template: \"\\n    <span class=\\\"ant-statistic-content-value\\\">\\n      <ng-container *ngIf=\\\"nzValueTemplate\\\" [ngTemplateOutlet]=\\\"nzValueTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: nzValue }\\\">\\n      </ng-container>\\n      <ng-container *ngIf=\\\"!nzValueTemplate\\\">\\n        <span *ngIf=\\\"displayInt\\\" class=\\\"ant-statistic-content-value-int\\\">{{ displayInt }}</span>\\n        <span *ngIf=\\\"displayDecimal\\\" class=\\\"ant-statistic-content-value-decimal\\\">{{ displayDecimal }}</span>\\n      </ng-container>\\n    </span>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, {\n    nzValue: [{\n      type: Input\n    }],\n    nzValueTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzStatisticModule = function NzStatisticModule() {\n  _classCallCheck(this, NzStatisticModule);\n};\n\nNzStatisticModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzStatisticModule\n});\nNzStatisticModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzStatisticModule_Factory(t) {\n    return new (t || NzStatisticModule)();\n  },\n  imports: [[CommonModule, PlatformModule, NzOutletModule, NzPipesModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzStatisticModule, {\n    declarations: function declarations() {\n      return [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, PlatformModule, NzOutletModule, NzPipesModule];\n    },\n    exports: function exports() {\n      return [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzStatisticModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, PlatformModule, NzOutletModule, NzPipesModule],\n      declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n      exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCountdownComponent, NzStatisticComponent, NzStatisticModule, NzStatisticNumberComponent };","map":{"version":3,"sources":["../../components/statistic/statistic.component.ts","../../components/statistic/countdown.component.ts","../../components/statistic/statistic-number.component.ts","../../components/statistic/statistic.module.ts","../../components/statistic/public-api.ts","../../components/statistic/ng-zorro-antd-statistic.ts"],"names":["NzPipesModuleFromCore"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NgStyleInterface } from 'ng-zorro-antd/core/types';\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-statistic',\n  exportAs: 'nzStatistic',\n  template: `\n    <div class=\"ant-statistic\">\n      <div class=\"ant-statistic-title\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </div>\n      <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n        <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n          <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n        </span>\n        <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"> </nz-statistic-number>\n        <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n          <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        </span>\n      </div>\n    </div>\n  `\n})\nexport class NzStatisticComponent {\n  @Input() nzPrefix?: string | TemplateRef<void>;\n  @Input() nzSuffix?: string | TemplateRef<void>;\n  @Input() nzTitle?: string | TemplateRef<void>;\n  @Input() nzValue?: NzStatisticValueType;\n  @Input() nzValueStyle: NgStyleInterface = {};\n  @Input() nzValueTemplate?: TemplateRef<{ $implicit: NzStatisticValueType }>;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\n\nimport { NzStatisticComponent } from './statistic.component';\n\nconst REFRESH_INTERVAL = 1000 / 30;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-countdown',\n  exportAs: 'nzCountdown',\n  template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    >\n    </nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `\n})\nexport class NzCountdownComponent extends NzStatisticComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() nzFormat: string = 'HH:mm:ss';\n  @Output() readonly nzCountdownFinish = new EventEmitter<void>();\n\n  diff!: number;\n\n  private target: number = 0;\n  private updater_?: Subscription | null;\n\n  constructor(private cdr: ChangeDetectorRef, private ngZone: NgZone, private platform: Platform) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzValue) {\n      this.target = Number(changes.nzValue.currentValue);\n      if (!changes.nzValue.isFirstChange()) {\n        this.syncTimer();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.syncTimer();\n  }\n\n  ngOnDestroy(): void {\n    this.stopTimer();\n  }\n\n  syncTimer(): void {\n    if (this.target >= Date.now()) {\n      this.startTimer();\n    } else {\n      this.stopTimer();\n    }\n  }\n\n  startTimer(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.stopTimer();\n        this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n          this.updateValue();\n          this.cdr.detectChanges();\n        });\n      });\n    }\n  }\n\n  stopTimer(): void {\n    if (this.updater_) {\n      this.updater_.unsubscribe();\n      this.updater_ = null;\n    }\n  }\n\n  /**\n   * Update time that should be displayed on the screen.\n   */\n  protected updateValue(): void {\n    this.diff = Math.max(this.target - Date.now(), 0);\n\n    if (this.diff === 0) {\n      this.stopTimer();\n      this.nzCountdownFinish.emit();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Inject, Input, LOCALE_ID, OnChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-statistic-number',\n  exportAs: 'nzStatisticNumber',\n  template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container *ngIf=\"nzValueTemplate\" [ngTemplateOutlet]=\"nzValueTemplate\" [ngTemplateOutletContext]=\"{ $implicit: nzValue }\">\n      </ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `\n})\nexport class NzStatisticNumberComponent implements OnChanges {\n  @Input() nzValue?: NzStatisticValueType;\n  @Input() nzValueTemplate?: TemplateRef<{ $implicit: NzStatisticValueType }>;\n\n  displayInt = '';\n  displayDecimal = '';\n\n  constructor(@Inject(LOCALE_ID) private locale_id: string) {}\n\n  ngOnChanges(): void {\n    this.formatNumber();\n  }\n\n  private formatNumber(): void {\n    const decimalSeparator: string = typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n    const value = String(this.nzValue);\n    const [int, decimal] = value.split(decimalSeparator);\n\n    this.displayInt = int;\n    this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzPipesModule as NzPipesModuleFromCore } from 'ng-zorro-antd/core/pipe';\n\nimport { NzCountdownComponent } from './countdown.component';\nimport { NzStatisticNumberComponent } from './statistic-number.component';\nimport { NzStatisticComponent } from './statistic.component';\n\n@NgModule({\n  imports: [CommonModule, PlatformModule, NzOutletModule, NzPipesModuleFromCore],\n  declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n  exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n})\nexport class NzStatisticModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './countdown.component';\nexport * from './statistic.component';\nexport * from './statistic.module';\nexport * from './statistic-number.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}