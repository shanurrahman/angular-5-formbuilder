{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Input, Output, Directive, Renderer2, ElementRef, Injectable, Optional, ViewChild, NgZone, TemplateRef, ContentChild, ContentChildren, ViewChildren, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzResizeObserver, NzResizeObserversModule } from 'ng-zorro-antd/core/resize-observers';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzI18nService, NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { Subject, ReplaySubject, BehaviorSubject, combineLatest, merge, fromEvent, EMPTY, of } from 'rxjs';\nimport { takeUntil, map, startWith, delay, switchMap, filter, distinctUntilChanged, debounceTime, skip, flatMap, mergeMap } from 'rxjs/operators';\nimport { __decorate, __metadata } from 'tslib';\nimport { InputBoolean, isNil, measureScrollbar } from 'ng-zorro-antd/core/util';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/dropdown';\nimport * as ɵngcc2 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/transition-patch';\nimport * as ɵngcc5 from 'ng-zorro-antd/icon';\nimport * as ɵngcc6 from 'ng-zorro-antd/menu';\nimport * as ɵngcc7 from 'ng-zorro-antd/button';\nimport * as ɵngcc8 from 'ng-zorro-antd/core/wave';\nimport * as ɵngcc9 from 'ng-zorro-antd/radio';\nimport * as ɵngcc10 from '@angular/forms';\nimport * as ɵngcc11 from 'ng-zorro-antd/checkbox';\nimport * as ɵngcc12 from '@angular/cdk/platform';\nimport * as ɵngcc13 from 'ng-zorro-antd/core/services';\nimport * as ɵngcc14 from '@angular/cdk/scrolling';\nimport * as ɵngcc15 from 'ng-zorro-antd/core/resize-observers';\nimport * as ɵngcc16 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc17 from 'ng-zorro-antd/spin';\nimport * as ɵngcc18 from 'ng-zorro-antd/pagination';\nimport * as ɵngcc19 from 'ng-zorro-antd/empty';\nimport * as ɵngcc20 from 'ng-zorro-antd/core/outlet';\nvar _c0 = [\"*\"];\n\nfunction NzTableFilterComponent_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableFilterComponent_ng_container_2_li_7_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 15);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzTableFilterComponent_ng_container_2_li_7_label_1_Template_label_ngModelChange_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var f_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.check(f_r4);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var f_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngModel\", f_r4.checked);\n  }\n}\n\nfunction NzTableFilterComponent_ng_container_2_li_7_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzTableFilterComponent_ng_container_2_li_7_label_2_Template_label_ngModelChange_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var f_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.check(f_r4);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var f_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngModel\", f_r4.checked);\n  }\n}\n\nfunction NzTableFilterComponent_ng_container_2_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTableFilterComponent_ng_container_2_li_7_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var f_r4 = ctx.$implicit;\n      var ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r15.check(f_r4);\n    });\n    ɵngcc0.ɵɵtemplate(1, NzTableFilterComponent_ng_container_2_li_7_label_1_Template, 1, 1, \"label\", 13);\n    ɵngcc0.ɵɵtemplate(2, NzTableFilterComponent_ng_container_2_li_7_label_2_Template, 1, 1, \"label\", 14);\n    ɵngcc0.ɵɵelementStart(3, \"span\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var f_r4 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"nzSelected\", f_r4.checked);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.filterMultiple);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.filterMultiple);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(f_r4.text);\n  }\n}\n\nfunction NzTableFilterComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"nz-filter-trigger\", 3);\n    ɵngcc0.ɵɵlistener(\"nzVisibleChange\", function NzTableFilterComponent_ng_container_2_Template_nz_filter_trigger_nzVisibleChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ctx_r17.onVisibleChange($event);\n    });\n    ɵngcc0.ɵɵelement(2, \"i\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"nz-dropdown-menu\", null, 5);\n    ɵngcc0.ɵɵelementStart(5, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(6, \"ul\", 7);\n    ɵngcc0.ɵɵtemplate(7, NzTableFilterComponent_ng_container_2_li_7_Template, 5, 4, \"li\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(9, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTableFilterComponent_ng_container_2_Template_button_click_9_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r19 = ɵngcc0.ɵɵnextContext();\n      return ctx_r19.reset();\n    });\n    ɵngcc0.ɵɵtext(10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTableFilterComponent_ng_container_2_Template_button_click_11_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.confirm();\n    });\n    ɵngcc0.ɵɵtext(12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var _r2 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzVisible\", ctx_r1.isVisible)(\"nzActive\", ctx_r1.isChecked)(\"nzDropdownMenu\", _r2);\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.listOfParsedFilter)(\"ngForTrackBy\", ctx_r1.trackByValue);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r1.isChecked);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.locale.filterReset);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.locale.filterConfirm);\n  }\n}\n\nfunction NzTableSelectionComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 2);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzTableSelectionComponent_label_0_Template_label_ngModelChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onCheckedChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-table-selection-select-all-custom\", ctx_r0.showRowSelection);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r0.checked)(\"nzDisabled\", ctx_r0.disabled)(\"nzIndeterminate\", ctx_r0.indeterminate);\n  }\n}\n\nfunction NzTableSelectionComponent_div_1_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTableSelectionComponent_div_1_li_6_Template_li_click_0_listener() {\n      var selection_r6 = ctx.$implicit;\n      return selection_r6.onSelect();\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var selection_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", selection_r6.text, \" \");\n  }\n}\n\nfunction NzTableSelectionComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 4);\n    ɵngcc0.ɵɵelement(2, \"i\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"nz-dropdown-menu\", null, 6);\n    ɵngcc0.ɵɵelementStart(5, \"ul\", 7);\n    ɵngcc0.ɵɵtemplate(6, NzTableSelectionComponent_div_1_li_6_Template, 2, 1, \"li\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r4 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzDropdownMenu\", _r4);\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.listOfSelections);\n  }\n}\n\nfunction NzTableSortersComponent_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableSortersComponent_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", ctx_r1.sortOrder == \"ascend\");\n  }\n}\n\nfunction NzTableSortersComponent_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", ctx_r2.sortOrder == \"descend\");\n  }\n}\n\nvar _c1 = [\"nzChecked\", \"\"];\n\nfunction NzTdAddOnComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"nz-row-indent\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"expandChange\", function NzTdAddOnComponent_ng_container_0_Template_button_expandChange_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onExpandChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"indentSize\", ctx_r0.nzIndentSize);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"expand\", ctx_r0.nzExpand)(\"spaceMode\", !ctx_r0.nzShowExpand);\n  }\n}\n\nfunction NzTdAddOnComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 4);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzTdAddOnComponent_label_1_Template_label_ngModelChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onCheckedChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzDisabled\", ctx_r1.nzDisabled)(\"ngModel\", ctx_r1.nzChecked)(\"nzIndeterminate\", ctx_r1.nzIndeterminate);\n  }\n}\n\nvar _c2 = [\"nzColumnKey\", \"\"];\n\nfunction NzThAddOnComponent_nz_table_filter_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-table-filter\", 5);\n    ɵngcc0.ɵɵlistener(\"filterChange\", function NzThAddOnComponent_nz_table_filter_0_Template_nz_table_filter_filterChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onFilterValueChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n\n    var _r1 = ɵngcc0.ɵɵreference(2);\n\n    var _r3 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵproperty(\"contentTemplate\", _r1)(\"extraTemplate\", _r3)(\"customFilter\", ctx_r0.nzCustomFilter)(\"filterMultiple\", ctx_r0.nzFilterMultiple)(\"listOfFilter\", ctx_r0.nzFilters);\n  }\n}\n\nfunction NzThAddOnComponent_ng_template_1_ng_template_0_Template(rf, ctx) {}\n\nfunction NzThAddOnComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzThAddOnComponent_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r5 = ɵngcc0.ɵɵreference(6);\n\n    var _r7 = ɵngcc0.ɵɵreference(8);\n\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.nzShowSort ? _r5 : _r7);\n  }\n}\n\nfunction NzThAddOnComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n    ɵngcc0.ɵɵprojection(1, 1);\n  }\n}\n\nfunction NzThAddOnComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-table-sorters\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n\n    var _r7 = ɵngcc0.ɵɵreference(8);\n\n    ɵngcc0.ɵɵproperty(\"sortOrder\", ctx_r6.sortOrder)(\"sortDirections\", ctx_r6.sortDirections)(\"contentTemplate\", _r7);\n  }\n}\n\nfunction NzThAddOnComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 2);\n  }\n}\n\nvar _c3 = [[[\"\", \"nz-th-extra\", \"\"]], [[\"nz-filter-trigger\"]], \"*\"];\nvar _c4 = [\"[nz-th-extra]\", \"nz-filter-trigger\", \"*\"];\nvar _c5 = [\"nzSelections\", \"\"];\nvar _c6 = [\"nz-table-content\", \"\"];\n\nfunction NzTableContentComponent_col_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    var width_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵstyleProp(\"width\", width_r3)(\"min-width\", width_r3);\n  }\n}\n\nfunction NzTableContentComponent_thead_1_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableContentComponent_thead_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"thead\", 3);\n    ɵngcc0.ɵɵtemplate(1, NzTableContentComponent_thead_1_ng_template_1_Template, 0, 0, \"ng-template\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.theadTemplate);\n  }\n}\n\nfunction NzTableContentComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c7 = [\"tdElement\"];\nvar _c8 = [\"nz-table-fixed-row\", \"\"];\n\nfunction NzTableFixedRowComponent_div_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NzTableFixedRowComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵpipe(1, \"async\");\n    ɵngcc0.ɵɵtemplate(2, NzTableFixedRowComponent_div_2_ng_template_2_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n\n    var _r2 = ɵngcc0.ɵɵreference(5);\n\n    ɵngcc0.ɵɵstyleProp(\"width\", ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r1.hostWidth$), \"px\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r2);\n  }\n}\n\nfunction NzTableFixedRowComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nvar _c9 = [\"tableHeaderElement\"];\nvar _c10 = [\"tableBodyElement\"];\n\nfunction NzTableInnerScrollComponent_ng_container_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7, 8);\n    ɵngcc0.ɵɵelement(2, \"table\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r3.bodyStyleMap);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"scrollX\", ctx_r3.scrollX)(\"listOfColWidth\", ctx_r3.listOfColWidth)(\"contentTemplate\", ctx_r3.contentTemplate);\n  }\n}\n\nfunction NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_ng_template_1_Template(rf, ctx) {}\n\nvar _c11 = function _c11(a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_ng_template_1_Template, 0, 0, \"ng-template\", 13);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var item_r8 = ctx.$implicit;\n    var i_r9 = ctx.index;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.virtualTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c11, item_r8, i_r9));\n  }\n}\n\nfunction NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 10, 8);\n    ɵngcc0.ɵɵelementStart(2, \"table\", 11);\n    ɵngcc0.ɵɵelementStart(3, \"tbody\");\n    ɵngcc0.ɵɵtemplate(4, NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_Template, 2, 5, \"ng-container\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r4.data.length ? ctx_r4.scrollY : ctx_r4.noDateVirtualHeight);\n    ɵngcc0.ɵɵproperty(\"itemSize\", ctx_r4.virtualItemSize)(\"maxBufferPx\", ctx_r4.virtualMaxBufferPx)(\"minBufferPx\", ctx_r4.virtualMinBufferPx);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"scrollX\", ctx_r4.scrollX)(\"listOfColWidth\", ctx_r4.listOfColWidth);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r4.data)(\"cdkVirtualForTrackBy\", ctx_r4.virtualForTrackBy);\n  }\n}\n\nfunction NzTableInnerScrollComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2, 3);\n    ɵngcc0.ɵɵelement(3, \"table\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NzTableInnerScrollComponent_ng_container_0_div_4_Template, 3, 4, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(5, NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_Template, 5, 9, \"cdk-virtual-scroll-viewport\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.headerStyleMap);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"scrollX\", ctx_r0.scrollX)(\"listOfColWidth\", ctx_r0.listOfColWidth)(\"theadTemplate\", ctx_r0.theadTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.virtualTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.virtualTemplate);\n  }\n}\n\nfunction NzTableInnerScrollComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7, 8);\n    ɵngcc0.ɵɵelement(3, \"table\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r1.bodyStyleMap);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"scrollX\", ctx_r1.scrollX)(\"listOfColWidth\", ctx_r1.listOfColWidth)(\"theadTemplate\", ctx_r1.theadTemplate)(\"contentTemplate\", ctx_r1.contentTemplate);\n  }\n}\n\nfunction NzTableComponent_ng_container_1_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTableComponent_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    var _r8 = ɵngcc0.ɵɵreference(11);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\n\nfunction NzTableComponent_nz_table_title_footer_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-table-title-footer\", 11);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r2.nzTitle);\n  }\n}\n\nfunction NzTableComponent_nz_table_inner_scroll_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-table-inner-scroll\", 12);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n\n    var _r10 = ɵngcc0.ɵɵreference(13);\n\n    var _r1 = ɵngcc0.ɵɵreference(3);\n\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r3.data)(\"scrollX\", ctx_r3.scrollX)(\"scrollY\", ctx_r3.scrollY)(\"contentTemplate\", _r10)(\"listOfColWidth\", ctx_r3.listOfAutoColWidth)(\"theadTemplate\", ctx_r3.theadTemplate)(\"verticalScrollBarWidth\", ctx_r3.verticalScrollBarWidth)(\"virtualTemplate\", ctx_r3.nzVirtualScrollDirective ? ctx_r3.nzVirtualScrollDirective.templateRef : null)(\"virtualItemSize\", ctx_r3.nzVirtualItemSize)(\"virtualMaxBufferPx\", ctx_r3.nzVirtualMaxBufferPx)(\"virtualMinBufferPx\", ctx_r3.nzVirtualMinBufferPx)(\"tableMainElement\", _r1)(\"virtualForTrackBy\", ctx_r3.nzVirtualForTrackBy);\n  }\n}\n\nfunction NzTableComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-table-inner-default\", 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n\n    var _r10 = ɵngcc0.ɵɵreference(13);\n\n    ɵngcc0.ɵɵproperty(\"tableLayout\", ctx_r5.nzTableLayout)(\"listOfColWidth\", ctx_r5.listOfManualColWidth)(\"theadTemplate\", ctx_r5.theadTemplate)(\"contentTemplate\", _r10);\n  }\n}\n\nfunction NzTableComponent_nz_table_title_footer_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-table-title-footer\", 14);\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"footer\", ctx_r6.nzFooter);\n  }\n}\n\nfunction NzTableComponent_ng_container_9_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTableComponent_ng_container_9_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    var _r8 = ɵngcc0.ɵɵreference(11);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\n\nfunction NzTableComponent_ng_template_10_nz_pagination_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-pagination\", 16);\n    ɵngcc0.ɵɵlistener(\"nzPageSizeChange\", function NzTableComponent_ng_template_10_nz_pagination_0_Template_nz_pagination_nzPageSizeChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r15.onPageSizeChange($event);\n    })(\"nzPageIndexChange\", function NzTableComponent_ng_template_10_nz_pagination_0_Template_nz_pagination_nzPageIndexChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r17.onPageIndexChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"nzShowSizeChanger\", ctx_r14.nzShowSizeChanger)(\"nzPageSizeOptions\", ctx_r14.nzPageSizeOptions)(\"nzItemRender\", ctx_r14.nzItemRender)(\"nzShowQuickJumper\", ctx_r14.nzShowQuickJumper)(\"nzHideOnSinglePage\", ctx_r14.nzHideOnSinglePage)(\"nzShowTotal\", ctx_r14.nzShowTotal)(\"nzSize\", ctx_r14.nzSize === \"default\" ? \"default\" : \"small\")(\"nzPageSize\", ctx_r14.nzPageSize)(\"nzTotal\", ctx_r14.nzTotal)(\"nzSimple\", ctx_r14.nzSimple)(\"nzPageIndex\", ctx_r14.nzPageIndex);\n  }\n}\n\nfunction NzTableComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzTableComponent_ng_template_10_nz_pagination_0_Template, 1, 11, \"nz-pagination\", 15);\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.nzShowPagination && ctx_r9.data.length);\n  }\n}\n\nfunction NzTableComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nfunction NzTbodyComponent_ng_container_0_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 3);\n    ɵngcc0.ɵɵlistener(\"listOfAutoWidth\", function NzTbodyComponent_ng_container_0_tr_1_Template_tr_listOfAutoWidth_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r4.onListOfAutoWidthChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var listOfMeasureColumn_r2 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵproperty(\"listOfMeasureColumn\", listOfMeasureColumn_r2);\n  }\n}\n\nfunction NzTbodyComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTbodyComponent_ng_container_0_tr_1_Template, 1, 1, \"tr\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var listOfMeasureColumn_r2 = ctx.ngIf;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isInsideTable && listOfMeasureColumn_r2.length);\n  }\n}\n\nfunction NzTbodyComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵelement(1, \"nz-embed-empty\", 5);\n    ɵngcc0.ɵɵpipe(2, \"async\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"specificContent\", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r1.noResult$));\n  }\n}\n\nvar _c12 = [\"contentTemplate\"];\n\nfunction NzTheadComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nfunction NzTheadComponent_ng_container_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTheadComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTheadComponent_ng_container_2_ng_template_1_Template, 0, 0, \"ng-template\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\n\nfunction NzTableTitleFooterComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\n\nfunction NzTableTitleFooterComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.footer);\n  }\n}\n\nvar _c13 = [\"nz-table-measure-row\", \"\"];\n\nfunction NzTrMeasureComponent_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 1, 2);\n  }\n}\n\nvar NzFilterTriggerComponent = /*#__PURE__*/function () {\n  function NzFilterTriggerComponent(cdr) {\n    _classCallCheck(this, NzFilterTriggerComponent);\n\n    this.cdr = cdr;\n    this.nzActive = false;\n    this.nzVisible = false;\n    this.nzVisibleChange = new EventEmitter();\n  }\n\n  _createClass(NzFilterTriggerComponent, [{\n    key: \"onVisibleChange\",\n    value: function onVisibleChange(visible) {\n      this.nzVisible = visible;\n      this.nzVisibleChange.next(visible);\n    }\n  }, {\n    key: \"onFilterClick\",\n    value: function onFilterClick($event) {\n      $event.stopPropagation();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.nzVisible = false;\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.nzVisible = true;\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzFilterTriggerComponent;\n}();\n\nNzFilterTriggerComponent.ɵfac = function NzFilterTriggerComponent_Factory(t) {\n  return new (t || NzFilterTriggerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzFilterTriggerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzFilterTriggerComponent,\n  selectors: [[\"nz-filter-trigger\"]],\n  hostVars: 4,\n  hostBindings: function NzFilterTriggerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-filter-trigger-container\", true)(\"ant-table-filter-trigger-container-open\", ctx.nzVisible);\n    }\n  },\n  inputs: {\n    nzActive: \"nzActive\",\n    nzVisible: \"nzVisible\",\n    nzDropdownMenu: \"nzDropdownMenu\"\n  },\n  outputs: {\n    nzVisibleChange: \"nzVisibleChange\"\n  },\n  exportAs: [\"nzFilterTrigger\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 7,\n  consts: [[\"nz-dropdown\", \"\", \"nzTrigger\", \"click\", \"nzPlacement\", \"bottomRight\", 1, \"ant-table-filter-trigger\", 3, \"nzClickHide\", \"nzDropdownMenu\", \"nzVisible\", \"nzVisibleChange\", \"click\"]],\n  template: function NzFilterTriggerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵlistener(\"nzVisibleChange\", function NzFilterTriggerComponent_Template_span_nzVisibleChange_0_listener($event) {\n        return ctx.onVisibleChange($event);\n      })(\"click\", function NzFilterTriggerComponent_Template_span_click_0_listener($event) {\n        return ctx.onFilterClick($event);\n      });\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"active\", ctx.nzActive)(\"ant-table-filter-open\", ctx.nzVisible);\n      ɵngcc0.ɵɵproperty(\"nzClickHide\", false)(\"nzDropdownMenu\", ctx.nzDropdownMenu)(\"nzVisible\", ctx.nzVisible);\n    }\n  },\n  directives: [ɵngcc1.NzDropDownDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzFilterTriggerComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\nNzFilterTriggerComponent.propDecorators = {\n  nzActive: [{\n    type: Input\n  }],\n  nzDropdownMenu: [{\n    type: Input\n  }],\n  nzVisible: [{\n    type: Input\n  }],\n  nzVisibleChange: [{\n    type: Output\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzTableFilterComponent = /*#__PURE__*/function () {\n  function NzTableFilterComponent(cdr, i18n) {\n    _classCallCheck(this, NzTableFilterComponent);\n\n    this.cdr = cdr;\n    this.i18n = i18n;\n    this.contentTemplate = null;\n    this.customFilter = false;\n    this.extraTemplate = null;\n    this.filterMultiple = true;\n    this.listOfFilter = [];\n    this.filterChange = new EventEmitter();\n    this.destroy$ = new Subject();\n    this.isChanged = false;\n    this.isChecked = false;\n    this.isVisible = false;\n    this.listOfParsedFilter = [];\n  }\n\n  _createClass(NzTableFilterComponent, [{\n    key: \"trackByValue\",\n    value: function trackByValue(_, item) {\n      return item.value;\n    }\n  }, {\n    key: \"check\",\n    value: function check(filter) {\n      this.isChanged = true;\n\n      if (this.filterMultiple) {\n        this.listOfParsedFilter = this.listOfParsedFilter.map(function (item) {\n          if (item === filter) {\n            return Object.assign(Object.assign({}, item), {\n              checked: !filter.checked\n            });\n          } else {\n            return item;\n          }\n        });\n        filter.checked = !filter.checked;\n      } else {\n        this.listOfParsedFilter = this.listOfParsedFilter.map(function (item) {\n          return Object.assign(Object.assign({}, item), {\n            checked: item === filter\n          });\n        });\n      }\n\n      this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    }\n  }, {\n    key: \"confirm\",\n    value: function confirm() {\n      this.isVisible = false;\n      this.emitFilterData();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.isChanged = true;\n      this.isVisible = false;\n      this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter, true);\n      this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n      this.emitFilterData();\n    }\n  }, {\n    key: \"onVisibleChange\",\n    value: function onVisibleChange(value) {\n      this.isVisible = value;\n\n      if (!value) {\n        this.emitFilterData();\n      }\n    }\n  }, {\n    key: \"emitFilterData\",\n    value: function emitFilterData() {\n      if (this.isChanged) {\n        var listOfChecked = this.listOfParsedFilter.filter(function (item) {\n          return item.checked;\n        }).map(function (item) {\n          return item.value;\n        });\n\n        if (this.filterMultiple) {\n          this.filterChange.emit(listOfChecked);\n        } else {\n          this.filterChange.emit(listOfChecked.length > 0 ? listOfChecked[0] : null);\n        }\n\n        this.isChanged = false;\n      }\n    }\n  }, {\n    key: \"parseListOfFilter\",\n    value: function parseListOfFilter(listOfFilter, reset) {\n      return listOfFilter.map(function (item) {\n        var checked = reset ? false : !!item.byDefault;\n        return {\n          text: item.text,\n          value: item.value,\n          checked: checked\n        };\n      });\n    }\n  }, {\n    key: \"getCheckedStatus\",\n    value: function getCheckedStatus(listOfParsedFilter) {\n      return listOfParsedFilter.some(function (item) {\n        return item.checked;\n      });\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(function () {\n        _this.locale = _this.i18n.getLocaleData('Table');\n\n        _this.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var listOfFilter = changes.listOfFilter;\n\n      if (listOfFilter && this.listOfFilter && this.listOfFilter.length) {\n        this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter);\n        this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzTableFilterComponent;\n}();\n\nNzTableFilterComponent.ɵfac = function NzTableFilterComponent_Factory(t) {\n  return new (t || NzTableFilterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService));\n};\n\nNzTableFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTableFilterComponent,\n  selectors: [[\"nz-table-filter\"]],\n  hostVars: 2,\n  hostBindings: function NzTableFilterComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-filter-column\", true);\n    }\n  },\n  inputs: {\n    contentTemplate: \"contentTemplate\",\n    customFilter: \"customFilter\",\n    extraTemplate: \"extraTemplate\",\n    filterMultiple: \"filterMultiple\",\n    listOfFilter: \"listOfFilter\"\n  },\n  outputs: {\n    filterChange: \"filterChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"ant-table-filter-column-title\"], [3, \"ngTemplateOutlet\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"nzVisible\", \"nzActive\", \"nzDropdownMenu\", \"nzVisibleChange\"], [\"nz-icon\", \"\", \"nzType\", \"filter\", \"nzTheme\", \"fill\"], [\"filterMenu\", \"nzDropdownMenu\"], [1, \"ant-table-filter-dropdown\"], [\"nz-menu\", \"\"], [\"nz-menu-item\", \"\", 3, \"nzSelected\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ant-table-filter-dropdown-btns\"], [\"nz-button\", \"\", \"nzType\", \"link\", \"nzSize\", \"small\", 3, \"disabled\", \"click\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"nzSize\", \"small\", 3, \"click\"], [\"nz-menu-item\", \"\", 3, \"nzSelected\", \"click\"], [\"nz-radio\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"nz-checkbox\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"nz-radio\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"nz-checkbox\", \"\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function NzTableFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzTableFilterComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(2, NzTableFilterComponent_ng_container_2_Template, 13, 8, \"ng-container\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.customFilter)(\"ngIfElse\", ctx.extraTemplate);\n    }\n  },\n  directives: [ɵngcc3.NgTemplateOutlet, ɵngcc3.NgIf, NzFilterTriggerComponent, ɵngcc4.ɵNzTransitionPatchDirective, ɵngcc5.NzIconDirective, ɵngcc1.NzDropdownMenuComponent, ɵngcc6.NzMenuDirective, ɵngcc3.NgForOf, ɵngcc7.NzButtonComponent, ɵngcc8.NzWaveDirective, ɵngcc6.NzMenuItemDirective, ɵngcc9.NzRadioComponent, ɵngcc10.NgControlStatus, ɵngcc10.NgModel, ɵngcc11.NzCheckboxComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTableFilterComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NzI18nService\n  }];\n};\n\nNzTableFilterComponent.propDecorators = {\n  contentTemplate: [{\n    type: Input\n  }],\n  customFilter: [{\n    type: Input\n  }],\n  extraTemplate: [{\n    type: Input\n  }],\n  filterMultiple: [{\n    type: Input\n  }],\n  listOfFilter: [{\n    type: Input\n  }],\n  filterChange: [{\n    type: Output\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzRowExpandButtonDirective = /*#__PURE__*/function () {\n  function NzRowExpandButtonDirective() {\n    _classCallCheck(this, NzRowExpandButtonDirective);\n\n    this.expand = false;\n    this.spaceMode = false;\n    this.expandChange = new EventEmitter();\n  }\n\n  _createClass(NzRowExpandButtonDirective, [{\n    key: \"onHostClick\",\n    value: function onHostClick() {\n      if (!this.spaceMode) {\n        this.expand = !this.expand;\n        this.expandChange.next(this.expand);\n      }\n    }\n  }]);\n\n  return NzRowExpandButtonDirective;\n}();\n\nNzRowExpandButtonDirective.ɵfac = function NzRowExpandButtonDirective_Factory(t) {\n  return new (t || NzRowExpandButtonDirective)();\n};\n\nNzRowExpandButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzRowExpandButtonDirective,\n  selectors: [[\"button\", \"nz-row-expand-button\", \"\"]],\n  hostVars: 9,\n  hostBindings: function NzRowExpandButtonDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NzRowExpandButtonDirective_click_HostBindingHandler() {\n        return ctx.onHostClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"type\", \"button\");\n      ɵngcc0.ɵɵclassProp(\"ant-table-row-expand-icon\", true)(\"ant-table-row-expand-icon-expanded\", !ctx.spaceMode && ctx.expand === true)(\"ant-table-row-expand-icon-collapsed\", !ctx.spaceMode && ctx.expand === false)(\"ant-table-row-expand-icon-spaced\", ctx.spaceMode);\n    }\n  },\n  inputs: {\n    expand: \"expand\",\n    spaceMode: \"spaceMode\"\n  },\n  outputs: {\n    expandChange: \"expandChange\"\n  }\n});\nNzRowExpandButtonDirective.propDecorators = {\n  expand: [{\n    type: Input\n  }],\n  spaceMode: [{\n    type: Input\n  }],\n  expandChange: [{\n    type: Output\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzRowIndentDirective = function NzRowIndentDirective() {\n  _classCallCheck(this, NzRowIndentDirective);\n\n  this.indentSize = 0;\n};\n\nNzRowIndentDirective.ɵfac = function NzRowIndentDirective_Factory(t) {\n  return new (t || NzRowIndentDirective)();\n};\n\nNzRowIndentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzRowIndentDirective,\n  selectors: [[\"nz-row-indent\"]],\n  hostVars: 4,\n  hostBindings: function NzRowIndentDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"padding-left\", ctx.indentSize, \"px\");\n      ɵngcc0.ɵɵclassProp(\"ant-table-row-indent\", true);\n    }\n  },\n  inputs: {\n    indentSize: \"indentSize\"\n  }\n});\nNzRowIndentDirective.propDecorators = {\n  indentSize: [{\n    type: Input\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzTableSelectionComponent = /*#__PURE__*/function () {\n  function NzTableSelectionComponent() {\n    _classCallCheck(this, NzTableSelectionComponent);\n\n    this.listOfSelections = [];\n    this.checked = false;\n    this.disabled = false;\n    this.indeterminate = false;\n    this.showCheckbox = false;\n    this.showRowSelection = false;\n    this.checkedChange = new EventEmitter();\n  }\n\n  _createClass(NzTableSelectionComponent, [{\n    key: \"onCheckedChange\",\n    value: function onCheckedChange(checked) {\n      this.checked = checked;\n      this.checkedChange.emit(checked);\n    }\n  }]);\n\n  return NzTableSelectionComponent;\n}();\n\nNzTableSelectionComponent.ɵfac = function NzTableSelectionComponent_Factory(t) {\n  return new (t || NzTableSelectionComponent)();\n};\n\nNzTableSelectionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTableSelectionComponent,\n  selectors: [[\"nz-table-selection\"]],\n  hostVars: 2,\n  hostBindings: function NzTableSelectionComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-selection\", true);\n    }\n  },\n  inputs: {\n    listOfSelections: \"listOfSelections\",\n    checked: \"checked\",\n    disabled: \"disabled\",\n    indeterminate: \"indeterminate\",\n    showCheckbox: \"showCheckbox\",\n    showRowSelection: \"showRowSelection\"\n  },\n  outputs: {\n    checkedChange: \"checkedChange\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"nz-checkbox\", \"\", 3, \"ant-table-selection-select-all-custom\", \"ngModel\", \"nzDisabled\", \"nzIndeterminate\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"ant-table-selection-extra\", 4, \"ngIf\"], [\"nz-checkbox\", \"\", 3, \"ngModel\", \"nzDisabled\", \"nzIndeterminate\", \"ngModelChange\"], [1, \"ant-table-selection-extra\"], [\"nz-dropdown\", \"\", \"nzPlacement\", \"bottomLeft\", 1, \"ant-table-selection-down\", 3, \"nzDropdownMenu\"], [\"nz-icon\", \"\", \"nzType\", \"down\"], [\"selectionMenu\", \"nzDropdownMenu\"], [\"nz-menu\", \"\", 1, \"ant-table-selection-menu\"], [\"nz-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"nz-menu-item\", \"\", 3, \"click\"]],\n  template: function NzTableSelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzTableSelectionComponent_label_0_Template, 1, 5, \"label\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzTableSelectionComponent_div_1_Template, 7, 2, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showCheckbox);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showRowSelection);\n    }\n  },\n  directives: [ɵngcc3.NgIf, ɵngcc11.NzCheckboxComponent, ɵngcc10.NgControlStatus, ɵngcc10.NgModel, ɵngcc1.NzDropDownDirective, ɵngcc4.ɵNzTransitionPatchDirective, ɵngcc5.NzIconDirective, ɵngcc1.NzDropdownMenuComponent, ɵngcc6.NzMenuDirective, ɵngcc3.NgForOf, ɵngcc6.NzMenuItemDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzTableSelectionComponent.propDecorators = {\n  listOfSelections: [{\n    type: Input\n  }],\n  checked: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  indeterminate: [{\n    type: Input\n  }],\n  showCheckbox: [{\n    type: Input\n  }],\n  showRowSelection: [{\n    type: Input\n  }],\n  checkedChange: [{\n    type: Output\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzTableSortersComponent = /*#__PURE__*/function () {\n  function NzTableSortersComponent() {\n    _classCallCheck(this, NzTableSortersComponent);\n\n    this.sortDirections = ['ascend', 'descend', null];\n    this.sortOrder = null;\n    this.contentTemplate = null;\n    this.isUp = false;\n    this.isDown = false;\n  }\n\n  _createClass(NzTableSortersComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var sortDirections = changes.sortDirections;\n\n      if (sortDirections) {\n        this.isUp = this.sortDirections.indexOf('ascend') !== -1;\n        this.isDown = this.sortDirections.indexOf('descend') !== -1;\n      }\n    }\n  }]);\n\n  return NzTableSortersComponent;\n}();\n\nNzTableSortersComponent.ɵfac = function NzTableSortersComponent_Factory(t) {\n  return new (t || NzTableSortersComponent)();\n};\n\nNzTableSortersComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTableSortersComponent,\n  selectors: [[\"nz-table-sorters\"]],\n  hostVars: 2,\n  hostBindings: function NzTableSortersComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-column-sorters\", true);\n    }\n  },\n  inputs: {\n    sortDirections: \"sortDirections\",\n    sortOrder: \"sortOrder\",\n    contentTemplate: \"contentTemplate\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 6,\n  vars: 5,\n  consts: [[3, \"ngTemplateOutlet\"], [1, \"ant-table-column-sorter\"], [1, \"ant-table-column-sorter-inner\"], [\"nz-icon\", \"\", \"nzType\", \"caret-up\", \"class\", \"ant-table-column-sorter-up\", 3, \"active\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"caret-down\", \"class\", \"ant-table-column-sorter-down\", 3, \"active\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"caret-up\", 1, \"ant-table-column-sorter-up\"], [\"nz-icon\", \"\", \"nzType\", \"caret-down\", 1, \"ant-table-column-sorter-down\"]],\n  template: function NzTableSortersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\");\n      ɵngcc0.ɵɵtemplate(1, NzTableSortersComponent_ng_template_1_Template, 0, 0, \"ng-template\", 0);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"span\", 1);\n      ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n      ɵngcc0.ɵɵtemplate(4, NzTableSortersComponent_i_4_Template, 1, 2, \"i\", 3);\n      ɵngcc0.ɵɵtemplate(5, NzTableSortersComponent_i_5_Template, 1, 2, \"i\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"ant-table-column-sorter-full\", ctx.isDown && ctx.isUp);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isUp);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isDown);\n    }\n  },\n  directives: [ɵngcc3.NgTemplateOutlet, ɵngcc3.NgIf, ɵngcc4.ɵNzTransitionPatchDirective, ɵngcc5.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzTableSortersComponent.propDecorators = {\n  sortDirections: [{\n    type: Input\n  }],\n  sortOrder: [{\n    type: Input\n  }],\n  contentTemplate: [{\n    type: Input\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzCellFixedDirective = /*#__PURE__*/function () {\n  function NzCellFixedDirective(renderer, elementRef) {\n    _classCallCheck(this, NzCellFixedDirective);\n\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nzRight = false;\n    this.nzLeft = false;\n    this.colspan = null;\n    this.colSpan = null;\n    this.changes$ = new Subject();\n    this.isAutoLeft = false;\n    this.isAutoRight = false;\n    this.isFixedLeft = false;\n    this.isFixedRight = false;\n    this.isFixed = false;\n  }\n\n  _createClass(NzCellFixedDirective, [{\n    key: \"setAutoLeftWidth\",\n    value: function setAutoLeftWidth(autoLeft) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'left', autoLeft);\n    }\n  }, {\n    key: \"setAutoRightWidth\",\n    value: function setAutoRightWidth(autoRight) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'right', autoRight);\n    }\n  }, {\n    key: \"setIsFirstRight\",\n    value: function setIsFirstRight(isFirstRight) {\n      this.setFixClass(isFirstRight, 'ant-table-cell-fix-right-first');\n    }\n  }, {\n    key: \"setIsLastLeft\",\n    value: function setIsLastLeft(isLastLeft) {\n      this.setFixClass(isLastLeft, 'ant-table-cell-fix-left-last');\n    }\n  }, {\n    key: \"setFixClass\",\n    value: function setFixClass(flag, className) {\n      // the setFixClass function may call many times, so remove it first.\n      this.renderer.removeClass(this.elementRef.nativeElement, className);\n\n      if (flag) {\n        this.renderer.addClass(this.elementRef.nativeElement, className);\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.setIsFirstRight(false);\n      this.setIsLastLeft(false);\n      this.isAutoLeft = this.nzLeft === '' || this.nzLeft === true;\n      this.isAutoRight = this.nzRight === '' || this.nzRight === true;\n      this.isFixedLeft = this.nzLeft !== false;\n      this.isFixedRight = this.nzRight !== false;\n      this.isFixed = this.isFixedLeft || this.isFixedRight;\n\n      var validatePx = function validatePx(value) {\n        if (typeof value === 'string' && value !== '') {\n          return value;\n        } else {\n          return null;\n        }\n      };\n\n      this.setAutoLeftWidth(validatePx(this.nzLeft));\n      this.setAutoRightWidth(validatePx(this.nzRight));\n      this.changes$.next();\n    }\n  }]);\n\n  return NzCellFixedDirective;\n}();\n\nNzCellFixedDirective.ɵfac = function NzCellFixedDirective_Factory(t) {\n  return new (t || NzCellFixedDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNzCellFixedDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzCellFixedDirective,\n  selectors: [[\"td\", \"nzRight\", \"\"], [\"th\", \"nzRight\", \"\"], [\"td\", \"nzLeft\", \"\"], [\"th\", \"nzLeft\", \"\"]],\n  hostVars: 6,\n  hostBindings: function NzCellFixedDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"position\", ctx.isFixed ? \"sticky\" : null);\n      ɵngcc0.ɵɵclassProp(\"ant-table-cell-fix-right\", ctx.isFixedRight)(\"ant-table-cell-fix-left\", ctx.isFixedLeft);\n    }\n  },\n  inputs: {\n    nzRight: \"nzRight\",\n    nzLeft: \"nzLeft\",\n    colspan: \"colspan\",\n    colSpan: \"colSpan\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNzCellFixedDirective.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nNzCellFixedDirective.propDecorators = {\n  nzRight: [{\n    type: Input\n  }],\n  nzLeft: [{\n    type: Input\n  }],\n  colspan: [{\n    type: Input\n  }],\n  colSpan: [{\n    type: Input\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzTableStyleService = /*#__PURE__*/function () {\n  function NzTableStyleService() {\n    _classCallCheck(this, NzTableStyleService);\n\n    this.theadTemplate$ = new ReplaySubject(1);\n    this.hasFixLeft$ = new ReplaySubject(1);\n    this.hasFixRight$ = new ReplaySubject(1);\n    this.hostWidth$ = new ReplaySubject(1);\n    this.columnCount$ = new ReplaySubject(1);\n    this.showEmpty$ = new ReplaySubject(1);\n    this.noResult$ = new ReplaySubject(1);\n    this.listOfThWidthConfigPx$ = new BehaviorSubject([]);\n    this.tableWidthConfigPx$ = new BehaviorSubject([]);\n    this.manualWidthConfigPx$ = combineLatest([this.tableWidthConfigPx$, this.listOfThWidthConfigPx$]).pipe(map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          widthConfig = _ref2[0],\n          listOfWidth = _ref2[1];\n\n      return widthConfig.length ? widthConfig : listOfWidth;\n    }));\n    this.listOfAutoWidthPx$ = new ReplaySubject(1);\n    this.listOfListOfThWidthPx$ = merge(\n    /** init with manual width **/\n    this.manualWidthConfigPx$, combineLatest([this.listOfAutoWidthPx$, this.manualWidthConfigPx$]).pipe(map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          autoWidth = _ref4[0],\n          manualWidth = _ref4[1];\n\n      /** use autoWidth until column length match **/\n      if (autoWidth.length === manualWidth.length) {\n        return autoWidth.map(function (width, index) {\n          if (width === '0px') {\n            return manualWidth[index] || null;\n          } else {\n            return manualWidth[index] || width;\n          }\n        });\n      } else {\n        return manualWidth;\n      }\n    })));\n    this.listOfMeasureColumn$ = new ReplaySubject(1);\n    this.listOfListOfThWidth$ = this.listOfAutoWidthPx$.pipe(map(function (list) {\n      return list.map(function (width) {\n        return parseInt(width, 10);\n      });\n    }));\n    this.enableAutoMeasure$ = new ReplaySubject(1);\n  }\n\n  _createClass(NzTableStyleService, [{\n    key: \"setTheadTemplate\",\n    value: function setTheadTemplate(template) {\n      this.theadTemplate$.next(template);\n    }\n  }, {\n    key: \"setHasFixLeft\",\n    value: function setHasFixLeft(hasFixLeft) {\n      this.hasFixLeft$.next(hasFixLeft);\n    }\n  }, {\n    key: \"setHasFixRight\",\n    value: function setHasFixRight(hasFixRight) {\n      this.hasFixRight$.next(hasFixRight);\n    }\n  }, {\n    key: \"setTableWidthConfig\",\n    value: function setTableWidthConfig(widthConfig) {\n      this.tableWidthConfigPx$.next(widthConfig);\n    }\n  }, {\n    key: \"setListOfTh\",\n    value: function setListOfTh(listOfTh) {\n      var columnCount = 0;\n      listOfTh.forEach(function (th) {\n        columnCount += th.colspan && +th.colspan || th.colSpan && +th.colSpan || 1;\n      });\n      var listOfThPx = listOfTh.map(function (item) {\n        return item.nzWidth;\n      });\n      this.columnCount$.next(columnCount);\n      this.listOfThWidthConfigPx$.next(listOfThPx);\n    }\n  }, {\n    key: \"setListOfMeasureColumn\",\n    value: function setListOfMeasureColumn(listOfTh) {\n      var listOfKeys = [];\n      listOfTh.forEach(function (th) {\n        var length = th.colspan && +th.colspan || th.colSpan && +th.colSpan || 1;\n\n        for (var i = 0; i < length; i++) {\n          listOfKeys.push(\"measure_key_\".concat(i));\n        }\n      });\n      this.listOfMeasureColumn$.next(listOfKeys);\n    }\n  }, {\n    key: \"setListOfAutoWidth\",\n    value: function setListOfAutoWidth(listOfAutoWidth) {\n      this.listOfAutoWidthPx$.next(listOfAutoWidth.map(function (width) {\n        return \"\".concat(width, \"px\");\n      }));\n    }\n  }, {\n    key: \"setShowEmpty\",\n    value: function setShowEmpty(showEmpty) {\n      this.showEmpty$.next(showEmpty);\n    }\n  }, {\n    key: \"setNoResult\",\n    value: function setNoResult(noResult) {\n      this.noResult$.next(noResult);\n    }\n  }, {\n    key: \"setScroll\",\n    value: function setScroll(scrollX, scrollY) {\n      var enableAutoMeasure = !!(scrollX || scrollY);\n\n      if (!enableAutoMeasure) {\n        this.setListOfAutoWidth([]);\n      }\n\n      this.enableAutoMeasure$.next(enableAutoMeasure);\n    }\n  }]);\n\n  return NzTableStyleService;\n}();\n\nNzTableStyleService.ɵfac = function NzTableStyleService_Factory(t) {\n  return new (t || NzTableStyleService)();\n};\n\nNzTableStyleService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NzTableStyleService,\n  factory: NzTableStyleService.ɵfac\n});\n\nNzTableStyleService.ctorParameters = function () {\n  return [];\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTableCellDirective = function NzTableCellDirective(nzTableStyleService) {\n  _classCallCheck(this, NzTableCellDirective);\n\n  this.isInsideTable = false;\n  this.isInsideTable = !!nzTableStyleService;\n};\n\nNzTableCellDirective.ɵfac = function NzTableCellDirective_Factory(t) {\n  return new (t || NzTableCellDirective)(ɵngcc0.ɵɵdirectiveInject(NzTableStyleService, 8));\n};\n\nNzTableCellDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTableCellDirective,\n  selectors: [[\"th\", 9, \"nz-disable-th\", 3, \"mat-cell\", \"\"], [\"td\", 9, \"nz-disable-td\", 3, \"mat-cell\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzTableCellDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-cell\", ctx.isInsideTable);\n    }\n  }\n});\n\nNzTableCellDirective.ctorParameters = function () {\n  return [{\n    type: NzTableStyleService,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTdAddOnComponent = /*#__PURE__*/function () {\n  function NzTdAddOnComponent() {\n    _classCallCheck(this, NzTdAddOnComponent);\n\n    this.nzChecked = false;\n    this.nzDisabled = false;\n    this.nzIndeterminate = false;\n    this.nzIndentSize = 0;\n    this.nzShowExpand = false;\n    this.nzShowCheckbox = false;\n    this.nzExpand = false;\n    this.nzCheckedChange = new EventEmitter();\n    this.nzExpandChange = new EventEmitter();\n    this.isNzShowExpandChanged = false;\n    this.isNzShowCheckboxChanged = false;\n  }\n\n  _createClass(NzTdAddOnComponent, [{\n    key: \"onCheckedChange\",\n    value: function onCheckedChange(checked) {\n      this.nzChecked = checked;\n      this.nzCheckedChange.emit(checked);\n    }\n  }, {\n    key: \"onExpandChange\",\n    value: function onExpandChange(expand) {\n      this.nzExpand = expand;\n      this.nzExpandChange.emit(expand);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var isFirstChange = function isFirstChange(value) {\n        return value && value.firstChange && value.currentValue !== undefined;\n      };\n\n      var nzExpand = changes.nzExpand,\n          nzChecked = changes.nzChecked,\n          nzShowExpand = changes.nzShowExpand,\n          nzShowCheckbox = changes.nzShowCheckbox;\n\n      if (nzShowExpand) {\n        this.isNzShowExpandChanged = true;\n      }\n\n      if (nzShowCheckbox) {\n        this.isNzShowCheckboxChanged = true;\n      }\n\n      if (isFirstChange(nzExpand) && !this.isNzShowExpandChanged) {\n        this.nzShowExpand = true;\n      }\n\n      if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n        this.nzShowCheckbox = true;\n      }\n    }\n  }]);\n\n  return NzTdAddOnComponent;\n}();\n\nNzTdAddOnComponent.ɵfac = function NzTdAddOnComponent_Factory(t) {\n  return new (t || NzTdAddOnComponent)();\n};\n\nNzTdAddOnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTdAddOnComponent,\n  selectors: [[\"td\", \"nzChecked\", \"\"], [\"td\", \"nzDisabled\", \"\"], [\"td\", \"nzIndeterminate\", \"\"], [\"td\", \"nzIndentSize\", \"\"], [\"td\", \"nzExpand\", \"\"], [\"td\", \"nzShowExpand\", \"\"], [\"td\", \"nzShowCheckbox\", \"\"]],\n  hostVars: 4,\n  hostBindings: function NzTdAddOnComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-cell-with-append\", ctx.nzShowExpand || ctx.nzIndentSize > 0)(\"ant-table-selection-column\", ctx.nzShowCheckbox);\n    }\n  },\n  inputs: {\n    nzChecked: \"nzChecked\",\n    nzDisabled: \"nzDisabled\",\n    nzIndeterminate: \"nzIndeterminate\",\n    nzIndentSize: \"nzIndentSize\",\n    nzShowExpand: \"nzShowExpand\",\n    nzShowCheckbox: \"nzShowCheckbox\",\n    nzExpand: \"nzExpand\"\n  },\n  outputs: {\n    nzCheckedChange: \"nzCheckedChange\",\n    nzExpandChange: \"nzExpandChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"nz-checkbox\", \"\", 3, \"nzDisabled\", \"ngModel\", \"nzIndeterminate\", \"ngModelChange\", 4, \"ngIf\"], [3, \"indentSize\"], [\"nz-row-expand-button\", \"\", 3, \"expand\", \"spaceMode\", \"expandChange\"], [\"nz-checkbox\", \"\", 3, \"nzDisabled\", \"ngModel\", \"nzIndeterminate\", \"ngModelChange\"]],\n  template: function NzTdAddOnComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzTdAddOnComponent_ng_container_0_Template, 3, 3, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzTdAddOnComponent_label_1_Template, 1, 3, \"label\", 1);\n      ɵngcc0.ɵɵprojection(2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowExpand || ctx.nzIndentSize > 0);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowCheckbox);\n    }\n  },\n  directives: [ɵngcc3.NgIf, NzRowIndentDirective, NzRowExpandButtonDirective, ɵngcc11.NzCheckboxComponent, ɵngcc10.NgControlStatus, ɵngcc10.NgModel],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzTdAddOnComponent.propDecorators = {\n  nzChecked: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzIndeterminate: [{\n    type: Input\n  }],\n  nzIndentSize: [{\n    type: Input\n  }],\n  nzShowExpand: [{\n    type: Input\n  }],\n  nzShowCheckbox: [{\n    type: Input\n  }],\n  nzExpand: [{\n    type: Input\n  }],\n  nzCheckedChange: [{\n    type: Output\n  }],\n  nzExpandChange: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTdAddOnComponent.prototype, \"nzShowExpand\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTdAddOnComponent.prototype, \"nzShowCheckbox\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTdAddOnComponent.prototype, \"nzExpand\", void 0);\n\nvar NzThAddOnComponent = /*#__PURE__*/function () {\n  function NzThAddOnComponent(cdr) {\n    _classCallCheck(this, NzThAddOnComponent);\n\n    this.cdr = cdr;\n    this.manualClickOrder$ = new Subject();\n    this.calcOperatorChange$ = new Subject();\n    this.nzFilterValue = null;\n    this.sortOrder = null;\n    this.sortDirections = ['ascend', 'descend', null];\n    this.sortOrderChange$ = new Subject();\n    this.destroy$ = new Subject();\n    this.isNzShowSortChanged = false;\n    this.isNzShowFilterChanged = false;\n    this.nzFilterMultiple = true;\n    this.nzSortOrder = null;\n    this.nzSortPriority = false;\n    this.nzSortDirections = ['ascend', 'descend', null];\n    this.nzFilters = [];\n    this.nzSortFn = null;\n    this.nzFilterFn = null;\n    this.nzShowSort = false;\n    this.nzShowFilter = false;\n    this.nzCustomFilter = false;\n    this.nzCheckedChange = new EventEmitter();\n    this.nzSortOrderChange = new EventEmitter();\n    this.nzFilterChange = new EventEmitter();\n  }\n\n  _createClass(NzThAddOnComponent, [{\n    key: \"getNextSortDirection\",\n    value: function getNextSortDirection(sortDirections, current) {\n      var index = sortDirections.indexOf(current);\n\n      if (index === sortDirections.length - 1) {\n        return sortDirections[0];\n      } else {\n        return sortDirections[index + 1];\n      }\n    }\n  }, {\n    key: \"emitNextSortValue\",\n    value: function emitNextSortValue() {\n      if (this.nzShowSort) {\n        var nextOrder = this.getNextSortDirection(this.sortDirections, this.sortOrder);\n        this.setSortOrder(nextOrder);\n        this.manualClickOrder$.next(this);\n      }\n    }\n  }, {\n    key: \"setSortOrder\",\n    value: function setSortOrder(order) {\n      this.sortOrderChange$.next(order);\n    }\n  }, {\n    key: \"clearSortOrder\",\n    value: function clearSortOrder() {\n      if (this.sortOrder !== null) {\n        this.setSortOrder(null);\n      }\n    }\n  }, {\n    key: \"onFilterValueChange\",\n    value: function onFilterValueChange(value) {\n      this.nzFilterChange.emit(value);\n      this.nzFilterValue = value;\n      this.updateCalcOperator();\n    }\n  }, {\n    key: \"updateCalcOperator\",\n    value: function updateCalcOperator() {\n      this.calcOperatorChange$.next();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      this.sortOrderChange$.pipe(takeUntil(this.destroy$)).subscribe(function (order) {\n        if (_this2.sortOrder !== order) {\n          _this2.sortOrder = order;\n\n          _this2.nzSortOrderChange.emit(order);\n        }\n\n        _this2.updateCalcOperator();\n\n        _this2.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzSortDirections = changes.nzSortDirections,\n          nzFilters = changes.nzFilters,\n          nzSortOrder = changes.nzSortOrder,\n          nzSortFn = changes.nzSortFn,\n          nzFilterFn = changes.nzFilterFn,\n          nzSortPriority = changes.nzSortPriority,\n          nzFilterMultiple = changes.nzFilterMultiple,\n          nzShowSort = changes.nzShowSort,\n          nzShowFilter = changes.nzShowFilter;\n\n      if (nzSortDirections) {\n        if (this.nzSortDirections && this.nzSortDirections.length) {\n          this.sortDirections = this.nzSortDirections;\n        }\n      }\n\n      if (nzSortOrder) {\n        this.sortOrder = this.nzSortOrder;\n        this.setSortOrder(this.nzSortOrder);\n      }\n\n      if (nzShowSort) {\n        this.isNzShowSortChanged = true;\n      }\n\n      if (nzShowFilter) {\n        this.isNzShowFilterChanged = true;\n      }\n\n      var isFirstChange = function isFirstChange(value) {\n        return value && value.firstChange && value.currentValue !== undefined;\n      };\n\n      if ((isFirstChange(nzSortOrder) || isFirstChange(nzSortFn)) && !this.isNzShowSortChanged) {\n        this.nzShowSort = true;\n      }\n\n      if (isFirstChange(nzFilters) && !this.isNzShowFilterChanged) {\n        this.nzShowFilter = true;\n      }\n\n      if ((nzFilters || nzFilterMultiple) && this.nzShowFilter) {\n        var listOfValue = this.nzFilters.filter(function (item) {\n          return item.byDefault;\n        }).map(function (item) {\n          return item.value;\n        });\n        this.nzFilterValue = this.nzFilterMultiple ? listOfValue : listOfValue[0] || null;\n      }\n\n      if (nzSortFn || nzFilterFn || nzSortPriority || nzFilters) {\n        this.updateCalcOperator();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzThAddOnComponent;\n}();\n\nNzThAddOnComponent.ɵfac = function NzThAddOnComponent_Factory(t) {\n  return new (t || NzThAddOnComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzThAddOnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzThAddOnComponent,\n  selectors: [[\"th\", \"nzColumnKey\", \"\"], [\"th\", \"nzSortFn\", \"\"], [\"th\", \"nzSortOrder\", \"\"], [\"th\", \"nzFilters\", \"\"], [\"th\", \"nzShowSort\", \"\"], [\"th\", \"nzShowFilter\", \"\"], [\"th\", \"nzCustomFilter\", \"\"]],\n  hostVars: 4,\n  hostBindings: function NzThAddOnComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NzThAddOnComponent_click_HostBindingHandler() {\n        return ctx.emitNextSortValue();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-column-has-sorters\", ctx.nzShowSort)(\"ant-table-column-sort\", ctx.sortOrder === \"descend\" || ctx.sortOrder === \"ascend\");\n    }\n  },\n  inputs: {\n    nzFilterMultiple: \"nzFilterMultiple\",\n    nzSortOrder: \"nzSortOrder\",\n    nzSortPriority: \"nzSortPriority\",\n    nzSortDirections: \"nzSortDirections\",\n    nzFilters: \"nzFilters\",\n    nzSortFn: \"nzSortFn\",\n    nzFilterFn: \"nzFilterFn\",\n    nzShowSort: \"nzShowSort\",\n    nzShowFilter: \"nzShowFilter\",\n    nzCustomFilter: \"nzCustomFilter\",\n    nzColumnKey: \"nzColumnKey\"\n  },\n  outputs: {\n    nzCheckedChange: \"nzCheckedChange\",\n    nzSortOrderChange: \"nzSortOrderChange\",\n    nzFilterChange: \"nzFilterChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c2,\n  ngContentSelectors: _c4,\n  decls: 9,\n  vars: 2,\n  consts: [[3, \"contentTemplate\", \"extraTemplate\", \"customFilter\", \"filterMultiple\", \"listOfFilter\", \"filterChange\", 4, \"ngIf\", \"ngIfElse\"], [\"notFilterTemplate\", \"\"], [\"extraTemplate\", \"\"], [\"sortTemplate\", \"\"], [\"contentTemplate\", \"\"], [3, \"contentTemplate\", \"extraTemplate\", \"customFilter\", \"filterMultiple\", \"listOfFilter\", \"filterChange\"], [3, \"ngTemplateOutlet\"], [3, \"sortOrder\", \"sortDirections\", \"contentTemplate\"]],\n  template: function NzThAddOnComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵtemplate(0, NzThAddOnComponent_nz_table_filter_0_Template, 1, 5, \"nz-table-filter\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzThAddOnComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(3, NzThAddOnComponent_ng_template_3_Template, 2, 0, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(5, NzThAddOnComponent_ng_template_5_Template, 1, 3, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(7, NzThAddOnComponent_ng_template_7_Template, 1, 0, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r1 = ɵngcc0.ɵɵreference(2);\n\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowFilter || ctx.nzCustomFilter)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [ɵngcc3.NgIf, NzTableFilterComponent, ɵngcc3.NgTemplateOutlet, NzTableSortersComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzThAddOnComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\nNzThAddOnComponent.propDecorators = {\n  nzColumnKey: [{\n    type: Input\n  }],\n  nzFilterMultiple: [{\n    type: Input\n  }],\n  nzSortOrder: [{\n    type: Input\n  }],\n  nzSortPriority: [{\n    type: Input\n  }],\n  nzSortDirections: [{\n    type: Input\n  }],\n  nzFilters: [{\n    type: Input\n  }],\n  nzSortFn: [{\n    type: Input\n  }],\n  nzFilterFn: [{\n    type: Input\n  }],\n  nzShowSort: [{\n    type: Input\n  }],\n  nzShowFilter: [{\n    type: Input\n  }],\n  nzCustomFilter: [{\n    type: Input\n  }],\n  nzCheckedChange: [{\n    type: Output\n  }],\n  nzSortOrderChange: [{\n    type: Output\n  }],\n  nzFilterChange: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzThAddOnComponent.prototype, \"nzShowSort\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzThAddOnComponent.prototype, \"nzShowFilter\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzThAddOnComponent.prototype, \"nzCustomFilter\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzThMeasureDirective = /*#__PURE__*/function () {\n  function NzThMeasureDirective(renderer, elementRef) {\n    _classCallCheck(this, NzThMeasureDirective);\n\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.changes$ = new Subject();\n    this.nzWidth = null;\n    this.colspan = null;\n    this.colSpan = null;\n    this.rowspan = null;\n    this.rowSpan = null;\n  }\n\n  _createClass(NzThMeasureDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzWidth = changes.nzWidth,\n          colspan = changes.colspan,\n          rowspan = changes.rowspan,\n          colSpan = changes.colSpan,\n          rowSpan = changes.rowSpan;\n\n      if (colspan || colSpan) {\n        var col = this.colspan || this.colSpan;\n\n        if (!isNil(col)) {\n          this.renderer.setAttribute(this.elementRef.nativeElement, 'colspan', \"\".concat(col));\n        } else {\n          this.renderer.removeAttribute(this.elementRef.nativeElement, 'colspan');\n        }\n      }\n\n      if (rowspan || rowSpan) {\n        var row = this.rowspan || this.rowSpan;\n\n        if (!isNil(row)) {\n          this.renderer.setAttribute(this.elementRef.nativeElement, 'rowspan', \"\".concat(row));\n        } else {\n          this.renderer.removeAttribute(this.elementRef.nativeElement, 'rowspan');\n        }\n      }\n\n      if (nzWidth || colspan) {\n        this.changes$.next();\n      }\n    }\n  }]);\n\n  return NzThMeasureDirective;\n}();\n\nNzThMeasureDirective.ɵfac = function NzThMeasureDirective_Factory(t) {\n  return new (t || NzThMeasureDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNzThMeasureDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzThMeasureDirective,\n  selectors: [[\"th\"]],\n  inputs: {\n    nzWidth: \"nzWidth\",\n    colspan: \"colspan\",\n    colSpan: \"colSpan\",\n    rowspan: \"rowspan\",\n    rowSpan: \"rowSpan\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNzThMeasureDirective.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nNzThMeasureDirective.propDecorators = {\n  nzWidth: [{\n    type: Input\n  }],\n  colspan: [{\n    type: Input\n  }],\n  colSpan: [{\n    type: Input\n  }],\n  rowspan: [{\n    type: Input\n  }],\n  rowSpan: [{\n    type: Input\n  }]\n};\n\nvar NzThSelectionComponent = /*#__PURE__*/function () {\n  function NzThSelectionComponent() {\n    _classCallCheck(this, NzThSelectionComponent);\n\n    this.nzSelections = [];\n    this.nzChecked = false;\n    this.nzDisabled = false;\n    this.nzIndeterminate = false;\n    this.nzShowCheckbox = false;\n    this.nzShowRowSelection = false;\n    this.nzCheckedChange = new EventEmitter();\n    this.isNzShowExpandChanged = false;\n    this.isNzShowCheckboxChanged = false;\n  }\n\n  _createClass(NzThSelectionComponent, [{\n    key: \"onCheckedChange\",\n    value: function onCheckedChange(checked) {\n      this.nzChecked = checked;\n      this.nzCheckedChange.emit(checked);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var isFirstChange = function isFirstChange(value) {\n        return value && value.firstChange && value.currentValue !== undefined;\n      };\n\n      var nzChecked = changes.nzChecked,\n          nzSelections = changes.nzSelections,\n          nzShowExpand = changes.nzShowExpand,\n          nzShowCheckbox = changes.nzShowCheckbox;\n\n      if (nzShowExpand) {\n        this.isNzShowExpandChanged = true;\n      }\n\n      if (nzShowCheckbox) {\n        this.isNzShowCheckboxChanged = true;\n      }\n\n      if (isFirstChange(nzSelections) && !this.isNzShowExpandChanged) {\n        this.nzShowRowSelection = true;\n      }\n\n      if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n        this.nzShowCheckbox = true;\n      }\n    }\n  }]);\n\n  return NzThSelectionComponent;\n}();\n\nNzThSelectionComponent.ɵfac = function NzThSelectionComponent_Factory(t) {\n  return new (t || NzThSelectionComponent)();\n};\n\nNzThSelectionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzThSelectionComponent,\n  selectors: [[\"th\", \"nzSelections\", \"\"], [\"th\", \"nzChecked\", \"\"], [\"th\", \"nzShowCheckbox\", \"\"], [\"th\", \"nzShowRowSelection\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzThSelectionComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-selection-column\", true);\n    }\n  },\n  inputs: {\n    nzSelections: \"nzSelections\",\n    nzChecked: \"nzChecked\",\n    nzDisabled: \"nzDisabled\",\n    nzIndeterminate: \"nzIndeterminate\",\n    nzShowCheckbox: \"nzShowCheckbox\",\n    nzShowRowSelection: \"nzShowRowSelection\"\n  },\n  outputs: {\n    nzCheckedChange: \"nzCheckedChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"checked\", \"disabled\", \"indeterminate\", \"listOfSelections\", \"showCheckbox\", \"showRowSelection\", \"checkedChange\"]],\n  template: function NzThSelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"nz-table-selection\", 0);\n      ɵngcc0.ɵɵlistener(\"checkedChange\", function NzThSelectionComponent_Template_nz_table_selection_checkedChange_0_listener($event) {\n        return ctx.onCheckedChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"checked\", ctx.nzChecked)(\"disabled\", ctx.nzDisabled)(\"indeterminate\", ctx.nzIndeterminate)(\"listOfSelections\", ctx.nzSelections)(\"showCheckbox\", ctx.nzShowCheckbox)(\"showRowSelection\", ctx.nzShowRowSelection);\n    }\n  },\n  directives: [NzTableSelectionComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzThSelectionComponent.propDecorators = {\n  nzSelections: [{\n    type: Input\n  }],\n  nzChecked: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzIndeterminate: [{\n    type: Input\n  }],\n  nzShowCheckbox: [{\n    type: Input\n  }],\n  nzShowRowSelection: [{\n    type: Input\n  }],\n  nzCheckedChange: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzThSelectionComponent.prototype, \"nzShowCheckbox\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzThSelectionComponent.prototype, \"nzShowRowSelection\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCellAlignDirective = function NzCellAlignDirective() {\n  _classCallCheck(this, NzCellAlignDirective);\n\n  this.nzAlign = null;\n};\n\nNzCellAlignDirective.ɵfac = function NzCellAlignDirective_Factory(t) {\n  return new (t || NzCellAlignDirective)();\n};\n\nNzCellAlignDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzCellAlignDirective,\n  selectors: [[\"th\", \"nzAlign\", \"\"], [\"td\", \"nzAlign\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzCellAlignDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"text-align\", ctx.nzAlign);\n    }\n  },\n  inputs: {\n    nzAlign: \"nzAlign\"\n  }\n});\nNzCellAlignDirective.propDecorators = {\n  nzAlign: [{\n    type: Input\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzCellEllipsisDirective = function NzCellEllipsisDirective() {\n  _classCallCheck(this, NzCellEllipsisDirective);\n\n  this.nzEllipsis = true;\n};\n\nNzCellEllipsisDirective.ɵfac = function NzCellEllipsisDirective_Factory(t) {\n  return new (t || NzCellEllipsisDirective)();\n};\n\nNzCellEllipsisDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzCellEllipsisDirective,\n  selectors: [[\"th\", \"nzEllipsis\", \"\"], [\"td\", \"nzEllipsis\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzCellEllipsisDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-cell-ellipsis\", ctx.nzEllipsis);\n    }\n  },\n  inputs: {\n    nzEllipsis: \"nzEllipsis\"\n  }\n});\nNzCellEllipsisDirective.propDecorators = {\n  nzEllipsis: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCellEllipsisDirective.prototype, \"nzEllipsis\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCellBreakWordDirective = function NzCellBreakWordDirective() {\n  _classCallCheck(this, NzCellBreakWordDirective);\n\n  this.nzBreakWord = true;\n};\n\nNzCellBreakWordDirective.ɵfac = function NzCellBreakWordDirective_Factory(t) {\n  return new (t || NzCellBreakWordDirective)();\n};\n\nNzCellBreakWordDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzCellBreakWordDirective,\n  selectors: [[\"th\", \"nzBreakWord\", \"\"], [\"td\", \"nzBreakWord\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzCellBreakWordDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"word-break\", ctx.nzBreakWord ? \"break-all\" : \"\");\n    }\n  },\n  inputs: {\n    nzBreakWord: \"nzBreakWord\"\n  }\n});\nNzCellBreakWordDirective.propDecorators = {\n  nzBreakWord: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCellBreakWordDirective.prototype, \"nzBreakWord\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTableContentComponent = function NzTableContentComponent() {\n  _classCallCheck(this, NzTableContentComponent);\n\n  this.tableLayout = 'auto';\n  this.theadTemplate = null;\n  this.contentTemplate = null;\n  this.listOfColWidth = [];\n  this.scrollX = null;\n};\n\nNzTableContentComponent.ɵfac = function NzTableContentComponent_Factory(t) {\n  return new (t || NzTableContentComponent)();\n};\n\nNzTableContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTableContentComponent,\n  selectors: [[\"table\", \"nz-table-content\", \"\"]],\n  hostVars: 8,\n  hostBindings: function NzTableContentComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"table-layout\", ctx.tableLayout)(\"width\", ctx.scrollX)(\"min-width\", ctx.scrollX ? \"100%\" : null);\n      ɵngcc0.ɵɵclassProp(\"ant-table-fixed\", ctx.scrollX);\n    }\n  },\n  inputs: {\n    tableLayout: \"tableLayout\",\n    theadTemplate: \"theadTemplate\",\n    contentTemplate: \"contentTemplate\",\n    listOfColWidth: \"listOfColWidth\",\n    scrollX: \"scrollX\"\n  },\n  attrs: _c6,\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"width\", \"minWidth\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"ant-table-thead\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [1, \"ant-table-thead\"]],\n  template: function NzTableContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzTableContentComponent_col_0_Template, 1, 4, \"col\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzTableContentComponent_thead_1_Template, 2, 1, \"thead\", 1);\n      ɵngcc0.ɵɵtemplate(2, NzTableContentComponent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      ɵngcc0.ɵɵprojection(3);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.listOfColWidth);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.theadTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n    }\n  },\n  directives: [ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzTableContentComponent.propDecorators = {\n  tableLayout: [{\n    type: Input\n  }],\n  theadTemplate: [{\n    type: Input\n  }],\n  contentTemplate: [{\n    type: Input\n  }],\n  listOfColWidth: [{\n    type: Input\n  }],\n  scrollX: [{\n    type: Input\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzTableFixedRowComponent = /*#__PURE__*/function () {\n  function NzTableFixedRowComponent(nzTableStyleService, renderer) {\n    _classCallCheck(this, NzTableFixedRowComponent);\n\n    this.nzTableStyleService = nzTableStyleService;\n    this.renderer = renderer;\n    this.hostWidth$ = new BehaviorSubject(null);\n    this.enableAutoMeasure$ = new BehaviorSubject(false);\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzTableFixedRowComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.nzTableStyleService) {\n        var _this$nzTableStyleSer = this.nzTableStyleService,\n            enableAutoMeasure$ = _this$nzTableStyleSer.enableAutoMeasure$,\n            hostWidth$ = _this$nzTableStyleSer.hostWidth$;\n        enableAutoMeasure$.subscribe(this.enableAutoMeasure$);\n        hostWidth$.subscribe(this.hostWidth$);\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this3 = this;\n\n      this.nzTableStyleService.columnCount$.pipe(takeUntil(this.destroy$)).subscribe(function (count) {\n        _this3.renderer.setAttribute(_this3.tdElement.nativeElement, 'colspan', \"\".concat(count));\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzTableFixedRowComponent;\n}();\n\nNzTableFixedRowComponent.ɵfac = function NzTableFixedRowComponent_Factory(t) {\n  return new (t || NzTableFixedRowComponent)(ɵngcc0.ɵɵdirectiveInject(NzTableStyleService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNzTableFixedRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTableFixedRowComponent,\n  selectors: [[\"tr\", \"nz-table-fixed-row\", \"\"], [\"tr\", \"nzExpand\", \"\"]],\n  viewQuery: function NzTableFixedRowComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c7, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tdElement = _t.first);\n    }\n  },\n  attrs: _c8,\n  ngContentSelectors: _c0,\n  decls: 6,\n  vars: 4,\n  consts: [[1, \"nz-disable-td\", \"ant-table-cell\"], [\"tdElement\", \"\"], [\"class\", \"ant-table-expanded-row-fixed\", \"style\", \"position: sticky; left: 0px; overflow: hidden;\", 3, \"width\", 4, \"ngIf\", \"ngIfElse\"], [\"contentTemplate\", \"\"], [1, \"ant-table-expanded-row-fixed\", 2, \"position\", \"sticky\", \"left\", \"0px\", \"overflow\", \"hidden\"], [3, \"ngTemplateOutlet\"]],\n  template: function NzTableFixedRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"td\", 0, 1);\n      ɵngcc0.ɵɵtemplate(2, NzTableFixedRowComponent_div_2_Template, 3, 5, \"div\", 2);\n      ɵngcc0.ɵɵpipe(3, \"async\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, NzTableFixedRowComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r2 = ɵngcc0.ɵɵreference(5);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(3, 2, ctx.enableAutoMeasure$))(\"ngIfElse\", _r2);\n    }\n  },\n  directives: [ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet],\n  pipes: [ɵngcc3.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTableFixedRowComponent.ctorParameters = function () {\n  return [{\n    type: NzTableStyleService\n  }, {\n    type: Renderer2\n  }];\n};\n\nNzTableFixedRowComponent.propDecorators = {\n  tdElement: [{\n    type: ViewChild,\n    args: ['tdElement']\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzTableInnerDefaultComponent = function NzTableInnerDefaultComponent() {\n  _classCallCheck(this, NzTableInnerDefaultComponent);\n\n  this.tableLayout = 'auto';\n  this.listOfColWidth = [];\n  this.theadTemplate = null;\n  this.contentTemplate = null;\n};\n\nNzTableInnerDefaultComponent.ɵfac = function NzTableInnerDefaultComponent_Factory(t) {\n  return new (t || NzTableInnerDefaultComponent)();\n};\n\nNzTableInnerDefaultComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTableInnerDefaultComponent,\n  selectors: [[\"nz-table-inner-default\"]],\n  hostVars: 2,\n  hostBindings: function NzTableInnerDefaultComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-container\", true);\n    }\n  },\n  inputs: {\n    tableLayout: \"tableLayout\",\n    listOfColWidth: \"listOfColWidth\",\n    theadTemplate: \"theadTemplate\",\n    contentTemplate: \"contentTemplate\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"ant-table-content\"], [\"nz-table-content\", \"\", 3, \"contentTemplate\", \"tableLayout\", \"listOfColWidth\", \"theadTemplate\"]],\n  template: function NzTableInnerDefaultComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelement(1, \"table\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"contentTemplate\", ctx.contentTemplate)(\"tableLayout\", ctx.tableLayout)(\"listOfColWidth\", ctx.listOfColWidth)(\"theadTemplate\", ctx.theadTemplate);\n    }\n  },\n  directives: [NzTableContentComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzTableInnerDefaultComponent.propDecorators = {\n  tableLayout: [{\n    type: Input\n  }],\n  listOfColWidth: [{\n    type: Input\n  }],\n  theadTemplate: [{\n    type: Input\n  }],\n  contentTemplate: [{\n    type: Input\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzTableInnerScrollComponent = /*#__PURE__*/function () {\n  function NzTableInnerScrollComponent(renderer, ngZone, platform, resizeService) {\n    _classCallCheck(this, NzTableInnerScrollComponent);\n\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.resizeService = resizeService;\n    this.data = [];\n    this.scrollX = null;\n    this.scrollY = null;\n    this.contentTemplate = null;\n    this.widthConfig = [];\n    this.listOfColWidth = [];\n    this.theadTemplate = null;\n    this.virtualTemplate = null;\n    this.virtualItemSize = 0;\n    this.virtualMaxBufferPx = 200;\n    this.virtualMinBufferPx = 100;\n\n    this.virtualForTrackBy = function (index) {\n      return index;\n    };\n\n    this.headerStyleMap = {};\n    this.bodyStyleMap = {};\n    this.verticalScrollBarWidth = 0;\n    this.noDateVirtualHeight = '182px';\n    this.data$ = new Subject();\n    this.scroll$ = new Subject();\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzTableInnerScrollComponent, [{\n    key: \"setScrollPositionClassName\",\n    value: function setScrollPositionClassName() {\n      var clear = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _this$tableBodyElemen = this.tableBodyElement.nativeElement,\n          scrollWidth = _this$tableBodyElemen.scrollWidth,\n          scrollLeft = _this$tableBodyElemen.scrollLeft,\n          clientWidth = _this$tableBodyElemen.clientWidth;\n      var leftClassName = 'ant-table-ping-left';\n      var rightClassName = 'ant-table-ping-right';\n\n      if (scrollWidth === clientWidth && scrollWidth !== 0 || clear) {\n        this.renderer.removeClass(this.tableMainElement, leftClassName);\n        this.renderer.removeClass(this.tableMainElement, rightClassName);\n      } else if (scrollLeft === 0) {\n        this.renderer.removeClass(this.tableMainElement, leftClassName);\n        this.renderer.addClass(this.tableMainElement, rightClassName);\n      } else if (scrollWidth === scrollLeft + clientWidth) {\n        this.renderer.removeClass(this.tableMainElement, rightClassName);\n        this.renderer.addClass(this.tableMainElement, leftClassName);\n      } else {\n        this.renderer.addClass(this.tableMainElement, leftClassName);\n        this.renderer.addClass(this.tableMainElement, rightClassName);\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var scrollX = changes.scrollX,\n          scrollY = changes.scrollY,\n          data = changes.data;\n\n      if (scrollX || scrollY) {\n        var hasVerticalScrollBar = this.verticalScrollBarWidth !== 0;\n        this.headerStyleMap = {\n          overflowX: 'hidden',\n          overflowY: this.scrollY && hasVerticalScrollBar ? 'scroll' : 'hidden'\n        };\n        this.bodyStyleMap = {\n          overflowY: this.scrollY ? 'scroll' : 'hidden',\n          overflowX: this.scrollX ? 'auto' : null,\n          maxHeight: this.scrollY\n        };\n        this.scroll$.next();\n      }\n\n      if (data) {\n        this.data$.next();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this4 = this;\n\n      if (this.platform.isBrowser) {\n        this.ngZone.runOutsideAngular(function () {\n          var scrollEvent$ = _this4.scroll$.pipe(startWith(null), delay(0), switchMap(function () {\n            return fromEvent(_this4.tableBodyElement.nativeElement, 'scroll').pipe(startWith(true));\n          }), takeUntil(_this4.destroy$));\n\n          var resize$ = _this4.resizeService.subscribe().pipe(takeUntil(_this4.destroy$));\n\n          var data$ = _this4.data$.pipe(takeUntil(_this4.destroy$));\n\n          var setClassName$ = merge(scrollEvent$, resize$, data$, _this4.scroll$).pipe(startWith(true), delay(0), takeUntil(_this4.destroy$));\n          setClassName$.subscribe(function () {\n            return _this4.setScrollPositionClassName();\n          });\n          scrollEvent$.pipe(filter(function () {\n            return !!_this4.scrollY;\n          })).subscribe(function () {\n            return _this4.tableHeaderElement.nativeElement.scrollLeft = _this4.tableBodyElement.nativeElement.scrollLeft;\n          });\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.setScrollPositionClassName(true);\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzTableInnerScrollComponent;\n}();\n\nNzTableInnerScrollComponent.ɵfac = function NzTableInnerScrollComponent_Factory(t) {\n  return new (t || NzTableInnerScrollComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc12.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc13.NzResizeService));\n};\n\nNzTableInnerScrollComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTableInnerScrollComponent,\n  selectors: [[\"nz-table-inner-scroll\"]],\n  viewQuery: function NzTableInnerScrollComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c9, true, ElementRef);\n      ɵngcc0.ɵɵviewQuery(_c10, true, ElementRef);\n      ɵngcc0.ɵɵviewQuery(CdkVirtualScrollViewport, true, CdkVirtualScrollViewport);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tableHeaderElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tableBodyElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cdkVirtualScrollViewport = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NzTableInnerScrollComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-container\", true);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    scrollX: \"scrollX\",\n    scrollY: \"scrollY\",\n    contentTemplate: \"contentTemplate\",\n    widthConfig: \"widthConfig\",\n    listOfColWidth: \"listOfColWidth\",\n    theadTemplate: \"theadTemplate\",\n    virtualTemplate: \"virtualTemplate\",\n    virtualItemSize: \"virtualItemSize\",\n    virtualMaxBufferPx: \"virtualMaxBufferPx\",\n    virtualMinBufferPx: \"virtualMinBufferPx\",\n    virtualForTrackBy: \"virtualForTrackBy\",\n    verticalScrollBarWidth: \"verticalScrollBarWidth\",\n    tableMainElement: \"tableMainElement\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"ant-table-content\", 4, \"ngIf\"], [1, \"ant-table-header\", \"nz-table-hide-scrollbar\", 3, \"ngStyle\"], [\"tableHeaderElement\", \"\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\", \"theadTemplate\"], [\"class\", \"ant-table-body\", 3, \"ngStyle\", 4, \"ngIf\"], [3, \"itemSize\", \"maxBufferPx\", \"minBufferPx\", \"height\", 4, \"ngIf\"], [1, \"ant-table-body\", 3, \"ngStyle\"], [\"tableBodyElement\", \"\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\", \"contentTemplate\"], [3, \"itemSize\", \"maxBufferPx\", \"minBufferPx\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-table-content\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\", \"theadTemplate\", \"contentTemplate\"]],\n  template: function NzTableInnerScrollComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzTableInnerScrollComponent_ng_container_0_Template, 6, 6, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzTableInnerScrollComponent_div_1_Template, 4, 5, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.scrollY);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.scrollY);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc3.NgIf, ɵngcc3.NgStyle, NzTableContentComponent, ɵngcc14.CdkVirtualScrollViewport, ɵngcc14.CdkFixedSizeVirtualScroll, NzTbodyComponent, ɵngcc14.CdkVirtualForOf, ɵngcc3.NgTemplateOutlet];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTableInnerScrollComponent.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: NzResizeService\n  }];\n};\n\nNzTableInnerScrollComponent.propDecorators = {\n  data: [{\n    type: Input\n  }],\n  scrollX: [{\n    type: Input\n  }],\n  scrollY: [{\n    type: Input\n  }],\n  contentTemplate: [{\n    type: Input\n  }],\n  widthConfig: [{\n    type: Input\n  }],\n  listOfColWidth: [{\n    type: Input\n  }],\n  theadTemplate: [{\n    type: Input\n  }],\n  virtualTemplate: [{\n    type: Input\n  }],\n  virtualItemSize: [{\n    type: Input\n  }],\n  virtualMaxBufferPx: [{\n    type: Input\n  }],\n  virtualMinBufferPx: [{\n    type: Input\n  }],\n  tableMainElement: [{\n    type: Input\n  }],\n  virtualForTrackBy: [{\n    type: Input\n  }],\n  tableHeaderElement: [{\n    type: ViewChild,\n    args: ['tableHeaderElement', {\n      read: ElementRef\n    }]\n  }],\n  tableBodyElement: [{\n    type: ViewChild,\n    args: ['tableBodyElement', {\n      read: ElementRef\n    }]\n  }],\n  cdkVirtualScrollViewport: [{\n    type: ViewChild,\n    args: [CdkVirtualScrollViewport, {\n      read: CdkVirtualScrollViewport\n    }]\n  }],\n  verticalScrollBarWidth: [{\n    type: Input\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzTableVirtualScrollDirective = function NzTableVirtualScrollDirective(templateRef) {\n  _classCallCheck(this, NzTableVirtualScrollDirective);\n\n  this.templateRef = templateRef;\n};\n\nNzTableVirtualScrollDirective.ɵfac = function NzTableVirtualScrollDirective_Factory(t) {\n  return new (t || NzTableVirtualScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNzTableVirtualScrollDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTableVirtualScrollDirective,\n  selectors: [[\"\", \"nz-virtual-scroll\", \"\"]],\n  exportAs: [\"nzVirtualScroll\"]\n});\n\nNzTableVirtualScrollDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTableDataService = /*#__PURE__*/function () {\n  function NzTableDataService() {\n    var _this5 = this;\n\n    _classCallCheck(this, NzTableDataService);\n\n    this.destroy$ = new Subject();\n    this.pageIndex$ = new BehaviorSubject(1);\n    this.frontPagination$ = new BehaviorSubject(true);\n    this.pageSize$ = new BehaviorSubject(10);\n    this.listOfData$ = new BehaviorSubject([]);\n    this.pageIndexDistinct$ = this.pageIndex$.pipe(distinctUntilChanged());\n    this.pageSizeDistinct$ = this.pageSize$.pipe(distinctUntilChanged());\n    this.listOfCalcOperator$ = new BehaviorSubject([]);\n    this.queryParams$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfCalcOperator$]).pipe(debounceTime(0), skip(1), map(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 3),\n          pageIndex = _ref6[0],\n          pageSize = _ref6[1],\n          listOfCalc = _ref6[2];\n\n      return {\n        pageIndex: pageIndex,\n        pageSize: pageSize,\n        sort: listOfCalc.filter(function (item) {\n          return item.sortFn;\n        }).map(function (item) {\n          return {\n            key: item.key,\n            value: item.sortOrder\n          };\n        }),\n        filter: listOfCalc.filter(function (item) {\n          return item.filterFn;\n        }).map(function (item) {\n          return {\n            key: item.key,\n            value: item.filterValue\n          };\n        })\n      };\n    }));\n    this.listOfDataAfterCalc$ = combineLatest([this.listOfData$, this.listOfCalcOperator$]).pipe(map(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n          listOfData = _ref8[0],\n          listOfCalcOperator = _ref8[1];\n\n      var listOfDataAfterCalc = _toConsumableArray(listOfData);\n\n      var listOfFilterOperator = listOfCalcOperator.filter(function (item) {\n        var filterValue = item.filterValue,\n            filterFn = item.filterFn;\n        var isReset = filterValue === null || filterValue === undefined || Array.isArray(filterValue) && filterValue.length === 0;\n        return !isReset && typeof filterFn === 'function';\n      });\n\n      var _iterator = _createForOfIteratorHelper(listOfFilterOperator),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var item = _step.value;\n          var filterFn = item.filterFn,\n              filterValue = item.filterValue;\n          listOfDataAfterCalc = listOfDataAfterCalc.filter(function (data) {\n            return filterFn(filterValue, data);\n          });\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var listOfSortOperator = listOfCalcOperator.filter(function (item) {\n        return item.sortOrder !== null && typeof item.sortFn === 'function';\n      }).sort(function (a, b) {\n        return +b.sortPriority - +a.sortPriority;\n      });\n\n      if (listOfCalcOperator.length) {\n        listOfDataAfterCalc.sort(function (record1, record2) {\n          var _iterator2 = _createForOfIteratorHelper(listOfSortOperator),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var item = _step2.value;\n              var sortFn = item.sortFn,\n                  sortOrder = item.sortOrder;\n\n              if (sortFn && sortOrder) {\n                var compareResult = sortFn(record1, record2, sortOrder);\n\n                if (compareResult !== 0) {\n                  return sortOrder === 'ascend' ? compareResult : -compareResult;\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          return 0;\n        });\n      }\n\n      return listOfDataAfterCalc;\n    }));\n    this.listOfFrontEndCurrentPageData$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfDataAfterCalc$]).pipe(takeUntil(this.destroy$), filter(function (value) {\n      var _value = _slicedToArray(value, 3),\n          pageIndex = _value[0],\n          pageSize = _value[1],\n          listOfData = _value[2];\n\n      var maxPageIndex = Math.ceil(listOfData.length / pageSize) || 1;\n      return pageIndex <= maxPageIndex;\n    }), map(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 3),\n          pageIndex = _ref10[0],\n          pageSize = _ref10[1],\n          listOfData = _ref10[2];\n\n      return listOfData.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\n    }));\n    this.listOfCurrentPageData$ = this.frontPagination$.pipe(switchMap(function (pagination) {\n      return pagination ? _this5.listOfFrontEndCurrentPageData$ : _this5.listOfData$;\n    }));\n    this.total$ = this.frontPagination$.pipe(switchMap(function (pagination) {\n      return pagination ? _this5.listOfDataAfterCalc$ : _this5.listOfData$;\n    }), map(function (list) {\n      return list.length;\n    }), distinctUntilChanged());\n  }\n\n  _createClass(NzTableDataService, [{\n    key: \"updatePageSize\",\n    value: function updatePageSize(size) {\n      this.pageSize$.next(size);\n    }\n  }, {\n    key: \"updateFrontPagination\",\n    value: function updateFrontPagination(pagination) {\n      this.frontPagination$.next(pagination);\n    }\n  }, {\n    key: \"updatePageIndex\",\n    value: function updatePageIndex(index) {\n      this.pageIndex$.next(index);\n    }\n  }, {\n    key: \"updateListOfData\",\n    value: function updateListOfData(list) {\n      this.listOfData$.next(list);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzTableDataService;\n}();\n\nNzTableDataService.ɵfac = function NzTableDataService_Factory(t) {\n  return new (t || NzTableDataService)();\n};\n\nNzTableDataService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NzTableDataService,\n  factory: NzTableDataService.ɵfac\n});\n\nNzTableDataService.ctorParameters = function () {\n  return [];\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_CONFIG_MODULE_NAME = 'table';\n\nvar NzTableComponent = /*#__PURE__*/function () {\n  function NzTableComponent(elementRef, nzResizeObserver, nzConfigService, cdr, nzTableStyleService, nzTableDataService) {\n    var _this6 = this;\n\n    _classCallCheck(this, NzTableComponent);\n\n    this.elementRef = elementRef;\n    this.nzResizeObserver = nzResizeObserver;\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.nzTableStyleService = nzTableStyleService;\n    this.nzTableDataService = nzTableDataService;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzTableLayout = 'auto';\n    this.nzShowTotal = null;\n    this.nzItemRender = null;\n    this.nzTitle = null;\n    this.nzFooter = null;\n    this.nzNoResult = undefined;\n    this.nzPageSizeOptions = [10, 20, 30, 40, 50];\n    this.nzVirtualItemSize = 0;\n    this.nzVirtualMaxBufferPx = 200;\n    this.nzVirtualMinBufferPx = 100;\n\n    this.nzVirtualForTrackBy = function (index) {\n      return index;\n    };\n\n    this.nzLoadingDelay = 0;\n    this.nzPageIndex = 1;\n    this.nzPageSize = 10;\n    this.nzTotal = 0;\n    this.nzWidthConfig = [];\n    this.nzData = [];\n    this.nzPaginationPosition = 'bottom';\n    this.nzScroll = {\n      x: null,\n      y: null\n    };\n    this.nzFrontPagination = true;\n    this.nzTemplateMode = false;\n    this.nzShowPagination = true;\n    this.nzLoading = false;\n    this.nzOuterBordered = false;\n    this.nzLoadingIndicator = null;\n    this.nzBordered = false;\n    this.nzSize = 'default';\n    this.nzShowSizeChanger = false;\n    this.nzHideOnSinglePage = false;\n    this.nzShowQuickJumper = false;\n    this.nzSimple = false;\n    this.nzPageSizeChange = new EventEmitter();\n    this.nzPageIndexChange = new EventEmitter();\n    this.nzQueryParams = new EventEmitter();\n    this.nzCurrentPageDataChange = new EventEmitter();\n    /** public data for ngFor tr */\n\n    this.data = [];\n    this.scrollX = null;\n    this.scrollY = null;\n    this.theadTemplate = null;\n    this.listOfAutoColWidth = [];\n    this.listOfManualColWidth = [];\n    this.hasFixLeft = false;\n    this.hasFixRight = false;\n    this.destroy$ = new Subject();\n    this.loading$ = new BehaviorSubject(false);\n    this.templateMode$ = new BehaviorSubject(false);\n    this.verticalScrollBarWidth = 0;\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(function () {\n      _this6.cdr.markForCheck();\n    });\n  }\n\n  _createClass(NzTableComponent, [{\n    key: \"onPageSizeChange\",\n    value: function onPageSizeChange(size) {\n      this.nzTableDataService.updatePageSize(size);\n    }\n  }, {\n    key: \"onPageIndexChange\",\n    value: function onPageIndexChange(index) {\n      this.nzTableDataService.updatePageIndex(index);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this7 = this;\n\n      var _this$nzTableDataServ = this.nzTableDataService,\n          pageIndexDistinct$ = _this$nzTableDataServ.pageIndexDistinct$,\n          pageSizeDistinct$ = _this$nzTableDataServ.pageSizeDistinct$,\n          listOfCurrentPageData$ = _this$nzTableDataServ.listOfCurrentPageData$,\n          total$ = _this$nzTableDataServ.total$,\n          queryParams$ = _this$nzTableDataServ.queryParams$;\n      var _this$nzTableStyleSer2 = this.nzTableStyleService,\n          theadTemplate$ = _this$nzTableStyleSer2.theadTemplate$,\n          hasFixLeft$ = _this$nzTableStyleSer2.hasFixLeft$,\n          hasFixRight$ = _this$nzTableStyleSer2.hasFixRight$;\n      queryParams$.pipe(takeUntil(this.destroy$)).subscribe(this.nzQueryParams);\n      pageIndexDistinct$.pipe(takeUntil(this.destroy$)).subscribe(function (pageIndex) {\n        if (pageIndex !== _this7.nzPageIndex) {\n          _this7.nzPageIndex = pageIndex;\n\n          _this7.nzPageIndexChange.next(pageIndex);\n        }\n      });\n      pageSizeDistinct$.pipe(takeUntil(this.destroy$)).subscribe(function (pageSize) {\n        if (pageSize !== _this7.nzPageSize) {\n          _this7.nzPageSize = pageSize;\n\n          _this7.nzPageSizeChange.next(pageSize);\n        }\n      });\n      total$.pipe(takeUntil(this.destroy$), filter(function () {\n        return _this7.nzFrontPagination;\n      })).subscribe(function (total) {\n        if (total !== _this7.nzTotal) {\n          _this7.nzTotal = total;\n\n          _this7.cdr.markForCheck();\n        }\n      });\n      listOfCurrentPageData$.pipe(takeUntil(this.destroy$)).subscribe(function (data) {\n        _this7.data = data;\n\n        _this7.nzCurrentPageDataChange.next(data);\n\n        _this7.cdr.markForCheck();\n      });\n      theadTemplate$.pipe(takeUntil(this.destroy$)).subscribe(function (theadTemplate) {\n        _this7.theadTemplate = theadTemplate;\n\n        _this7.cdr.markForCheck();\n      });\n      hasFixLeft$.pipe(takeUntil(this.destroy$)).subscribe(function (hasFixLeft) {\n        _this7.hasFixLeft = hasFixLeft;\n\n        _this7.cdr.markForCheck();\n      });\n      hasFixRight$.pipe(takeUntil(this.destroy$)).subscribe(function (hasFixRight) {\n        _this7.hasFixRight = hasFixRight;\n\n        _this7.cdr.markForCheck();\n      });\n      combineLatest([total$, this.loading$, this.templateMode$]).pipe(map(function (_ref11) {\n        var _ref12 = _slicedToArray(_ref11, 3),\n            total = _ref12[0],\n            loading = _ref12[1],\n            templateMode = _ref12[2];\n\n        return total === 0 && !loading && !templateMode;\n      }), takeUntil(this.destroy$)).subscribe(function (empty) {\n        _this7.nzTableStyleService.setShowEmpty(empty);\n      });\n      this.verticalScrollBarWidth = measureScrollbar('vertical');\n      this.nzTableStyleService.listOfListOfThWidthPx$.pipe(takeUntil(this.destroy$)).subscribe(function (listOfWidth) {\n        _this7.listOfAutoColWidth = listOfWidth;\n\n        _this7.cdr.markForCheck();\n      });\n      this.nzTableStyleService.manualWidthConfigPx$.pipe(takeUntil(this.destroy$)).subscribe(function (listOfWidth) {\n        _this7.listOfManualColWidth = listOfWidth;\n\n        _this7.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzScroll = changes.nzScroll,\n          nzPageIndex = changes.nzPageIndex,\n          nzPageSize = changes.nzPageSize,\n          nzFrontPagination = changes.nzFrontPagination,\n          nzData = changes.nzData,\n          nzWidthConfig = changes.nzWidthConfig,\n          nzNoResult = changes.nzNoResult,\n          nzLoading = changes.nzLoading,\n          nzTemplateMode = changes.nzTemplateMode;\n\n      if (nzPageIndex) {\n        this.nzTableDataService.updatePageIndex(this.nzPageIndex);\n      }\n\n      if (nzPageSize) {\n        this.nzTableDataService.updatePageSize(this.nzPageSize);\n      }\n\n      if (nzData) {\n        this.nzData = this.nzData || [];\n        this.nzTableDataService.updateListOfData(this.nzData);\n      }\n\n      if (nzFrontPagination) {\n        this.nzTableDataService.updateFrontPagination(this.nzFrontPagination);\n      }\n\n      if (nzScroll) {\n        this.scrollX = this.nzScroll && this.nzScroll.x || null;\n        this.scrollY = this.nzScroll && this.nzScroll.y || null;\n        this.nzTableStyleService.setScroll(this.scrollX, this.scrollY);\n      }\n\n      if (nzWidthConfig) {\n        this.nzTableStyleService.setTableWidthConfig(this.nzWidthConfig);\n      }\n\n      if (nzLoading) {\n        this.loading$.next(this.nzLoading);\n      }\n\n      if (nzTemplateMode) {\n        this.templateMode$.next(this.nzTemplateMode);\n      }\n\n      if (nzNoResult) {\n        this.nzTableStyleService.setNoResult(this.nzNoResult);\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this8 = this;\n\n      this.nzResizeObserver.observe(this.elementRef).pipe(map(function (_ref13) {\n        var _ref14 = _slicedToArray(_ref13, 1),\n            entry = _ref14[0];\n\n        var _entry$target$getBoun = entry.target.getBoundingClientRect(),\n            width = _entry$target$getBoun.width;\n\n        var scrollBarWidth = _this8.scrollY ? _this8.verticalScrollBarWidth : 0;\n        return Math.floor(width - scrollBarWidth);\n      }), takeUntil(this.destroy$)).subscribe(this.nzTableStyleService.hostWidth$);\n\n      if (this.nzTableInnerScrollComponent && this.nzTableInnerScrollComponent.cdkVirtualScrollViewport) {\n        this.cdkVirtualScrollViewport = this.nzTableInnerScrollComponent.cdkVirtualScrollViewport;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzTableComponent;\n}();\n\nNzTableComponent.ɵfac = function NzTableComponent_Factory(t) {\n  return new (t || NzTableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc15.NzResizeObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc16.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NzTableStyleService), ɵngcc0.ɵɵdirectiveInject(NzTableDataService));\n};\n\nNzTableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTableComponent,\n  selectors: [[\"nz-table\"]],\n  contentQueries: function NzTableComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzTableVirtualScrollDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzVirtualScrollDirective = _t.first);\n    }\n  },\n  viewQuery: function NzTableComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(NzTableInnerScrollComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzTableInnerScrollComponent = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NzTableComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-wrapper\", true);\n    }\n  },\n  inputs: {\n    nzTableLayout: \"nzTableLayout\",\n    nzShowTotal: \"nzShowTotal\",\n    nzItemRender: \"nzItemRender\",\n    nzTitle: \"nzTitle\",\n    nzFooter: \"nzFooter\",\n    nzNoResult: \"nzNoResult\",\n    nzPageSizeOptions: \"nzPageSizeOptions\",\n    nzVirtualItemSize: \"nzVirtualItemSize\",\n    nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\",\n    nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\",\n    nzVirtualForTrackBy: \"nzVirtualForTrackBy\",\n    nzLoadingDelay: \"nzLoadingDelay\",\n    nzPageIndex: \"nzPageIndex\",\n    nzPageSize: \"nzPageSize\",\n    nzTotal: \"nzTotal\",\n    nzWidthConfig: \"nzWidthConfig\",\n    nzData: \"nzData\",\n    nzPaginationPosition: \"nzPaginationPosition\",\n    nzScroll: \"nzScroll\",\n    nzFrontPagination: \"nzFrontPagination\",\n    nzTemplateMode: \"nzTemplateMode\",\n    nzShowPagination: \"nzShowPagination\",\n    nzLoading: \"nzLoading\",\n    nzOuterBordered: \"nzOuterBordered\",\n    nzLoadingIndicator: \"nzLoadingIndicator\",\n    nzBordered: \"nzBordered\",\n    nzSize: \"nzSize\",\n    nzShowSizeChanger: \"nzShowSizeChanger\",\n    nzHideOnSinglePage: \"nzHideOnSinglePage\",\n    nzShowQuickJumper: \"nzShowQuickJumper\",\n    nzSimple: \"nzSimple\"\n  },\n  outputs: {\n    nzPageSizeChange: \"nzPageSizeChange\",\n    nzPageIndexChange: \"nzPageIndexChange\",\n    nzQueryParams: \"nzQueryParams\",\n    nzCurrentPageDataChange: \"nzCurrentPageDataChange\"\n  },\n  exportAs: [\"nzTable\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NzTableStyleService, NzTableDataService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 14,\n  vars: 25,\n  consts: [[3, \"nzDelay\", \"nzSpinning\", \"nzIndicator\"], [4, \"ngIf\"], [1, \"ant-table\"], [\"tableMainElement\", \"\"], [3, \"title\", 4, \"ngIf\"], [3, \"data\", \"scrollX\", \"scrollY\", \"contentTemplate\", \"listOfColWidth\", \"theadTemplate\", \"verticalScrollBarWidth\", \"virtualTemplate\", \"virtualItemSize\", \"virtualMaxBufferPx\", \"virtualMinBufferPx\", \"tableMainElement\", \"virtualForTrackBy\", 4, \"ngIf\", \"ngIfElse\"], [\"defaultTemplate\", \"\"], [3, \"footer\", 4, \"ngIf\"], [\"paginationTemplate\", \"\"], [\"contentTemplate\", \"\"], [3, \"ngTemplateOutlet\"], [3, \"title\"], [3, \"data\", \"scrollX\", \"scrollY\", \"contentTemplate\", \"listOfColWidth\", \"theadTemplate\", \"verticalScrollBarWidth\", \"virtualTemplate\", \"virtualItemSize\", \"virtualMaxBufferPx\", \"virtualMinBufferPx\", \"tableMainElement\", \"virtualForTrackBy\"], [3, \"tableLayout\", \"listOfColWidth\", \"theadTemplate\", \"contentTemplate\"], [3, \"footer\"], [\"class\", \"ant-table-pagination ant-table-pagination-right\", 3, \"nzShowSizeChanger\", \"nzPageSizeOptions\", \"nzItemRender\", \"nzShowQuickJumper\", \"nzHideOnSinglePage\", \"nzShowTotal\", \"nzSize\", \"nzPageSize\", \"nzTotal\", \"nzSimple\", \"nzPageIndex\", \"nzPageSizeChange\", \"nzPageIndexChange\", 4, \"ngIf\"], [1, \"ant-table-pagination\", \"ant-table-pagination-right\", 3, \"nzShowSizeChanger\", \"nzPageSizeOptions\", \"nzItemRender\", \"nzShowQuickJumper\", \"nzHideOnSinglePage\", \"nzShowTotal\", \"nzSize\", \"nzPageSize\", \"nzTotal\", \"nzSimple\", \"nzPageIndex\", \"nzPageSizeChange\", \"nzPageIndexChange\"]],\n  template: function NzTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"nz-spin\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzTableComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n      ɵngcc0.ɵɵtemplate(4, NzTableComponent_nz_table_title_footer_4_Template, 1, 1, \"nz-table-title-footer\", 4);\n      ɵngcc0.ɵɵtemplate(5, NzTableComponent_nz_table_inner_scroll_5_Template, 1, 13, \"nz-table-inner-scroll\", 5);\n      ɵngcc0.ɵɵtemplate(6, NzTableComponent_ng_template_6_Template, 1, 4, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(8, NzTableComponent_nz_table_title_footer_8_Template, 1, 1, \"nz-table-title-footer\", 7);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, NzTableComponent_ng_container_9_Template, 2, 1, \"ng-container\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(10, NzTableComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(12, NzTableComponent_ng_template_12_Template, 1, 0, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r4 = ɵngcc0.ɵɵreference(7);\n\n      ɵngcc0.ɵɵproperty(\"nzDelay\", ctx.nzLoadingDelay)(\"nzSpinning\", ctx.nzLoading)(\"nzIndicator\", ctx.nzLoadingIndicator);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzPaginationPosition === \"both\" || ctx.nzPaginationPosition === \"top\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"ant-table-fixed-header\", ctx.nzData.length && ctx.scrollY)(\"ant-table-fixed-column\", ctx.scrollX)(\"ant-table-has-fix-left\", ctx.hasFixLeft)(\"ant-table-has-fix-right\", ctx.hasFixRight)(\"ant-table-bordered\", ctx.nzBordered)(\"nz-table-out-bordered\", ctx.nzOuterBordered && !ctx.nzBordered)(\"ant-table-middle\", ctx.nzSize === \"middle\")(\"ant-table-small\", ctx.nzSize === \"small\");\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzTitle);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.scrollY || ctx.scrollX)(\"ngIfElse\", _r4);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzFooter);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzPaginationPosition === \"both\" || ctx.nzPaginationPosition === \"bottom\");\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc17.NzSpinComponent, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, NzTableTitleFooterComponent, NzTableInnerScrollComponent, NzTableInnerDefaultComponent, ɵngcc18.NzPaginationComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTableComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NzResizeObserver\n  }, {\n    type: NzConfigService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NzTableStyleService\n  }, {\n    type: NzTableDataService\n  }];\n};\n\nNzTableComponent.propDecorators = {\n  nzTableLayout: [{\n    type: Input\n  }],\n  nzShowTotal: [{\n    type: Input\n  }],\n  nzItemRender: [{\n    type: Input\n  }],\n  nzTitle: [{\n    type: Input\n  }],\n  nzFooter: [{\n    type: Input\n  }],\n  nzNoResult: [{\n    type: Input\n  }],\n  nzPageSizeOptions: [{\n    type: Input\n  }],\n  nzVirtualItemSize: [{\n    type: Input\n  }],\n  nzVirtualMaxBufferPx: [{\n    type: Input\n  }],\n  nzVirtualMinBufferPx: [{\n    type: Input\n  }],\n  nzVirtualForTrackBy: [{\n    type: Input\n  }],\n  nzLoadingDelay: [{\n    type: Input\n  }],\n  nzPageIndex: [{\n    type: Input\n  }],\n  nzPageSize: [{\n    type: Input\n  }],\n  nzTotal: [{\n    type: Input\n  }],\n  nzWidthConfig: [{\n    type: Input\n  }],\n  nzData: [{\n    type: Input\n  }],\n  nzPaginationPosition: [{\n    type: Input\n  }],\n  nzScroll: [{\n    type: Input\n  }],\n  nzFrontPagination: [{\n    type: Input\n  }],\n  nzTemplateMode: [{\n    type: Input\n  }],\n  nzShowPagination: [{\n    type: Input\n  }],\n  nzLoading: [{\n    type: Input\n  }],\n  nzOuterBordered: [{\n    type: Input\n  }],\n  nzLoadingIndicator: [{\n    type: Input\n  }],\n  nzBordered: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  nzShowSizeChanger: [{\n    type: Input\n  }],\n  nzHideOnSinglePage: [{\n    type: Input\n  }],\n  nzShowQuickJumper: [{\n    type: Input\n  }],\n  nzSimple: [{\n    type: Input\n  }],\n  nzPageSizeChange: [{\n    type: Output\n  }],\n  nzPageIndexChange: [{\n    type: Output\n  }],\n  nzQueryParams: [{\n    type: Output\n  }],\n  nzCurrentPageDataChange: [{\n    type: Output\n  }],\n  nzVirtualScrollDirective: [{\n    type: ContentChild,\n    args: [NzTableVirtualScrollDirective, {\n      static: false\n    }]\n  }],\n  nzTableInnerScrollComponent: [{\n    type: ViewChild,\n    args: [NzTableInnerScrollComponent]\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTableComponent.prototype, \"nzFrontPagination\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTableComponent.prototype, \"nzTemplateMode\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTableComponent.prototype, \"nzShowPagination\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTableComponent.prototype, \"nzLoading\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTableComponent.prototype, \"nzOuterBordered\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", Object)], NzTableComponent.prototype, \"nzLoadingIndicator\", void 0);\n\n__decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzTableComponent.prototype, \"nzBordered\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", String)], NzTableComponent.prototype, \"nzSize\", void 0);\n\n__decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzTableComponent.prototype, \"nzShowSizeChanger\", void 0);\n\n__decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzTableComponent.prototype, \"nzHideOnSinglePage\", void 0);\n\n__decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzTableComponent.prototype, \"nzShowQuickJumper\", void 0);\n\n__decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzTableComponent.prototype, \"nzSimple\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzFilterTriggerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-filter-trigger',\n      exportAs: \"nzFilterTrigger\",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <span\\n      nz-dropdown\\n      class=\\\"ant-table-filter-trigger\\\"\\n      nzTrigger=\\\"click\\\"\\n      nzPlacement=\\\"bottomRight\\\"\\n      [nzClickHide]=\\\"false\\\"\\n      [nzDropdownMenu]=\\\"nzDropdownMenu\\\"\\n      [class.active]=\\\"nzActive\\\"\\n      [class.ant-table-filter-open]=\\\"nzVisible\\\"\\n      [nzVisible]=\\\"nzVisible\\\"\\n      (nzVisibleChange)=\\\"onVisibleChange($event)\\\"\\n      (click)=\\\"onFilterClick($event)\\\"\\n    >\\n      <ng-content></ng-content>\\n    </span>\\n  \",\n      host: {\n        '[class.ant-table-filter-trigger-container]': 'true',\n        '[class.ant-table-filter-trigger-container-open]': 'nzVisible'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    nzActive: [{\n      type: Input\n    }],\n    nzVisible: [{\n      type: Input\n    }],\n    nzVisibleChange: [{\n      type: Output\n    }],\n    nzDropdownMenu: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-filter',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <span class=\\\"ant-table-filter-column-title\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"contentTemplate\\\"></ng-template>\\n    </span>\\n    <ng-container *ngIf=\\\"!customFilter; else extraTemplate\\\">\\n      <nz-filter-trigger\\n        [nzVisible]=\\\"isVisible\\\"\\n        [nzActive]=\\\"isChecked\\\"\\n        [nzDropdownMenu]=\\\"filterMenu\\\"\\n        (nzVisibleChange)=\\\"onVisibleChange($event)\\\"\\n      >\\n        <i nz-icon nzType=\\\"filter\\\" nzTheme=\\\"fill\\\"></i>\\n      </nz-filter-trigger>\\n      <nz-dropdown-menu #filterMenu=\\\"nzDropdownMenu\\\">\\n        <div class=\\\"ant-table-filter-dropdown\\\">\\n          <ul nz-menu>\\n            <li nz-menu-item [nzSelected]=\\\"f.checked\\\" *ngFor=\\\"let f of listOfParsedFilter; trackBy: trackByValue\\\" (click)=\\\"check(f)\\\">\\n              <label nz-radio *ngIf=\\\"!filterMultiple\\\" [ngModel]=\\\"f.checked\\\" (ngModelChange)=\\\"check(f)\\\"></label>\\n              <label nz-checkbox *ngIf=\\\"filterMultiple\\\" [ngModel]=\\\"f.checked\\\" (ngModelChange)=\\\"check(f)\\\"></label>\\n              <span>{{ f.text }}</span>\\n            </li>\\n          </ul>\\n          <div class=\\\"ant-table-filter-dropdown-btns\\\">\\n            <button nz-button nzType=\\\"link\\\" nzSize=\\\"small\\\" (click)=\\\"reset()\\\" [disabled]=\\\"!isChecked\\\">{{ locale.filterReset }}</button>\\n            <button nz-button nzType=\\\"primary\\\" nzSize=\\\"small\\\" (click)=\\\"confirm()\\\">{{ locale.filterConfirm }}</button>\\n          </div>\\n        </div>\\n      </nz-dropdown-menu>\\n    </ng-container>\\n  \",\n      host: {\n        '[class.ant-table-filter-column]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.NzI18nService\n    }];\n  }, {\n    contentTemplate: [{\n      type: Input\n    }],\n    customFilter: [{\n      type: Input\n    }],\n    extraTemplate: [{\n      type: Input\n    }],\n    filterMultiple: [{\n      type: Input\n    }],\n    listOfFilter: [{\n      type: Input\n    }],\n    filterChange: [{\n      type: Output\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzRowExpandButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'button[nz-row-expand-button]',\n      host: {\n        '[type]': \"'button'\",\n        '[class.ant-table-row-expand-icon]': 'true',\n        '[class.ant-table-row-expand-icon-expanded]': \"!spaceMode && expand === true\",\n        '[class.ant-table-row-expand-icon-collapsed]': \"!spaceMode && expand === false\",\n        '[class.ant-table-row-expand-icon-spaced]': 'spaceMode',\n        '(click)': 'onHostClick()'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    expand: [{\n      type: Input\n    }],\n    spaceMode: [{\n      type: Input\n    }],\n    expandChange: [{\n      type: Output\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzRowIndentDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'nz-row-indent',\n      host: {\n        '[class.ant-table-row-indent]': 'true',\n        '[style.padding-left.px]': 'indentSize'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    indentSize: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableSelectionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-selection',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <label\\n      *ngIf=\\\"showCheckbox\\\"\\n      nz-checkbox\\n      [class.ant-table-selection-select-all-custom]=\\\"showRowSelection\\\"\\n      [ngModel]=\\\"checked\\\"\\n      [nzDisabled]=\\\"disabled\\\"\\n      [nzIndeterminate]=\\\"indeterminate\\\"\\n      (ngModelChange)=\\\"onCheckedChange($event)\\\"\\n    >\\n    </label>\\n    <div class=\\\"ant-table-selection-extra\\\" *ngIf=\\\"showRowSelection\\\">\\n      <span nz-dropdown class=\\\"ant-table-selection-down\\\" nzPlacement=\\\"bottomLeft\\\" [nzDropdownMenu]=\\\"selectionMenu\\\">\\n        <i nz-icon nzType=\\\"down\\\"></i>\\n      </span>\\n      <nz-dropdown-menu #selectionMenu=\\\"nzDropdownMenu\\\">\\n        <ul nz-menu class=\\\"ant-table-selection-menu\\\">\\n          <li nz-menu-item *ngFor=\\\"let selection of listOfSelections\\\" (click)=\\\"selection.onSelect()\\\">\\n            {{ selection.text }}\\n          </li>\\n        </ul>\\n      </nz-dropdown-menu>\\n    </div>\\n  \",\n      host: {\n        '[class.ant-table-selection]': 'true'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    listOfSelections: [{\n      type: Input\n    }],\n    checked: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    indeterminate: [{\n      type: Input\n    }],\n    showCheckbox: [{\n      type: Input\n    }],\n    showRowSelection: [{\n      type: Input\n    }],\n    checkedChange: [{\n      type: Output\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableSortersComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-sorters',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <span><ng-template [ngTemplateOutlet]=\\\"contentTemplate\\\"></ng-template></span>\\n    <span class=\\\"ant-table-column-sorter\\\" [class.ant-table-column-sorter-full]=\\\"isDown && isUp\\\">\\n      <span class=\\\"ant-table-column-sorter-inner\\\">\\n        <i nz-icon nzType=\\\"caret-up\\\" *ngIf=\\\"isUp\\\" class=\\\"ant-table-column-sorter-up\\\" [class.active]=\\\"sortOrder == 'ascend'\\\"></i>\\n        <i nz-icon nzType=\\\"caret-down\\\" *ngIf=\\\"isDown\\\" class=\\\"ant-table-column-sorter-down\\\" [class.active]=\\\"sortOrder == 'descend'\\\"></i>\\n      </span>\\n    </span>\\n  \",\n      host: {\n        '[class.ant-table-column-sorters]': 'true'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    sortDirections: [{\n      type: Input\n    }],\n    sortOrder: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCellFixedDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'td[nzRight],th[nzRight],td[nzLeft],th[nzLeft]',\n      host: {\n        '[class.ant-table-cell-fix-right]': \"isFixedRight\",\n        '[class.ant-table-cell-fix-left]': \"isFixedLeft\",\n        '[style.position]': \"isFixed? 'sticky' : null\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    nzRight: [{\n      type: Input\n    }],\n    nzLeft: [{\n      type: Input\n    }],\n    colspan: [{\n      type: Input\n    }],\n    colSpan: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableStyleService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableCellDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th:not(.nz-disable-th):not([mat-cell]), td:not(.nz-disable-td):not([mat-cell])',\n      host: {\n        '[class.ant-table-cell]': 'isInsideTable'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzTableStyleService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTdAddOnComponent, [{\n    type: Component,\n    args: [{\n      selector: 'td[nzChecked], td[nzDisabled], td[nzIndeterminate], td[nzIndentSize], td[nzExpand], td[nzShowExpand], td[nzShowCheckbox]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-container *ngIf=\\\"nzShowExpand || nzIndentSize > 0\\\">\\n      <nz-row-indent [indentSize]=\\\"nzIndentSize\\\"></nz-row-indent>\\n      <button nz-row-expand-button [expand]=\\\"nzExpand\\\" (expandChange)=\\\"onExpandChange($event)\\\" [spaceMode]=\\\"!nzShowExpand\\\"></button>\\n    </ng-container>\\n    <label\\n      nz-checkbox\\n      *ngIf=\\\"nzShowCheckbox\\\"\\n      [nzDisabled]=\\\"nzDisabled\\\"\\n      [ngModel]=\\\"nzChecked\\\"\\n      [nzIndeterminate]=\\\"nzIndeterminate\\\"\\n      (ngModelChange)=\\\"onCheckedChange($event)\\\"\\n    >\\n    </label>\\n    <ng-content></ng-content>\\n  \",\n      host: {\n        '[class.ant-table-cell-with-append]': \"nzShowExpand || nzIndentSize > 0\",\n        '[class.ant-table-selection-column]': \"nzShowCheckbox\"\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzChecked: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzIndeterminate: [{\n      type: Input\n    }],\n    nzIndentSize: [{\n      type: Input\n    }],\n    nzShowExpand: [{\n      type: Input\n    }],\n    nzShowCheckbox: [{\n      type: Input\n    }],\n    nzExpand: [{\n      type: Input\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzThAddOnComponent, [{\n    type: Component,\n    args: [{\n      selector: 'th[nzColumnKey], th[nzSortFn], th[nzSortOrder], th[nzFilters], th[nzShowSort], th[nzShowFilter], th[nzCustomFilter]',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <nz-table-filter\\n      *ngIf=\\\"nzShowFilter || nzCustomFilter; else notFilterTemplate\\\"\\n      [contentTemplate]=\\\"notFilterTemplate\\\"\\n      [extraTemplate]=\\\"extraTemplate\\\"\\n      [customFilter]=\\\"nzCustomFilter\\\"\\n      [filterMultiple]=\\\"nzFilterMultiple\\\"\\n      [listOfFilter]=\\\"nzFilters\\\"\\n      (filterChange)=\\\"onFilterValueChange($event)\\\"\\n    ></nz-table-filter>\\n    <ng-template #notFilterTemplate>\\n      <ng-template [ngTemplateOutlet]=\\\"nzShowSort ? sortTemplate : contentTemplate\\\"></ng-template>\\n    </ng-template>\\n    <ng-template #extraTemplate>\\n      <ng-content select=\\\"[nz-th-extra]\\\"></ng-content>\\n      <ng-content select=\\\"nz-filter-trigger\\\"></ng-content>\\n    </ng-template>\\n    <ng-template #sortTemplate>\\n      <nz-table-sorters [sortOrder]=\\\"sortOrder\\\" [sortDirections]=\\\"sortDirections\\\" [contentTemplate]=\\\"contentTemplate\\\"></nz-table-sorters>\\n    </ng-template>\\n    <ng-template #contentTemplate>\\n      <ng-content></ng-content>\\n    </ng-template>\\n  \",\n      host: {\n        '[class.ant-table-column-has-sorters]': 'nzShowSort',\n        '[class.ant-table-column-sort]': \"sortOrder === 'descend' || sortOrder === 'ascend'\",\n        '(click)': 'emitNextSortValue()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    nzFilterMultiple: [{\n      type: Input\n    }],\n    nzSortOrder: [{\n      type: Input\n    }],\n    nzSortPriority: [{\n      type: Input\n    }],\n    nzSortDirections: [{\n      type: Input\n    }],\n    nzFilters: [{\n      type: Input\n    }],\n    nzSortFn: [{\n      type: Input\n    }],\n    nzFilterFn: [{\n      type: Input\n    }],\n    nzShowSort: [{\n      type: Input\n    }],\n    nzShowFilter: [{\n      type: Input\n    }],\n    nzCustomFilter: [{\n      type: Input\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }],\n    nzSortOrderChange: [{\n      type: Output\n    }],\n    nzFilterChange: [{\n      type: Output\n    }],\n    nzColumnKey: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzThMeasureDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    nzWidth: [{\n      type: Input\n    }],\n    colspan: [{\n      type: Input\n    }],\n    colSpan: [{\n      type: Input\n    }],\n    rowspan: [{\n      type: Input\n    }],\n    rowSpan: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzThSelectionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'th[nzSelections],th[nzChecked],th[nzShowCheckbox],th[nzShowRowSelection]',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <nz-table-selection\\n      [checked]=\\\"nzChecked\\\"\\n      [disabled]=\\\"nzDisabled\\\"\\n      [indeterminate]=\\\"nzIndeterminate\\\"\\n      [listOfSelections]=\\\"nzSelections\\\"\\n      [showCheckbox]=\\\"nzShowCheckbox\\\"\\n      [showRowSelection]=\\\"nzShowRowSelection\\\"\\n      (checkedChange)=\\\"onCheckedChange($event)\\\"\\n    ></nz-table-selection>\\n    <ng-content></ng-content>\\n  \",\n      host: {\n        '[class.ant-table-selection-column]': 'true'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzSelections: [{\n      type: Input\n    }],\n    nzChecked: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzIndeterminate: [{\n      type: Input\n    }],\n    nzShowCheckbox: [{\n      type: Input\n    }],\n    nzShowRowSelection: [{\n      type: Input\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCellAlignDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th[nzAlign],td[nzAlign]',\n      host: {\n        '[style.text-align]': 'nzAlign'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzAlign: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCellEllipsisDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th[nzEllipsis],td[nzEllipsis]',\n      host: {\n        '[class.ant-table-cell-ellipsis]': 'nzEllipsis'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzEllipsis: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCellBreakWordDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th[nzBreakWord],td[nzBreakWord]',\n      host: {\n        '[style.word-break]': \"nzBreakWord ? 'break-all' : ''\"\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzBreakWord: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table[nz-table-content]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <col [style.width]=\\\"width\\\" [style.minWidth]=\\\"width\\\" *ngFor=\\\"let width of listOfColWidth\\\" />\\n    <thead class=\\\"ant-table-thead\\\" *ngIf=\\\"theadTemplate\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"theadTemplate\\\"></ng-template>\\n    </thead>\\n    <ng-template [ngTemplateOutlet]=\\\"contentTemplate\\\"></ng-template>\\n    <ng-content></ng-content>\\n  \",\n      host: {\n        '[style.table-layout]': 'tableLayout',\n        '[class.ant-table-fixed]': 'scrollX',\n        '[style.width]': 'scrollX',\n        '[style.min-width]': \"scrollX ? '100%': null\"\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    tableLayout: [{\n      type: Input\n    }],\n    theadTemplate: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: Input\n    }],\n    listOfColWidth: [{\n      type: Input\n    }],\n    scrollX: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableFixedRowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tr[nz-table-fixed-row], tr[nzExpand]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <td class=\\\"nz-disable-td ant-table-cell\\\" #tdElement>\\n      <div\\n        class=\\\"ant-table-expanded-row-fixed\\\"\\n        *ngIf=\\\"enableAutoMeasure$ | async; else contentTemplate\\\"\\n        style=\\\"position: sticky; left: 0px; overflow: hidden;\\\"\\n        [style.width.px]=\\\"hostWidth$ | async\\\"\\n      >\\n        <ng-template [ngTemplateOutlet]=\\\"contentTemplate\\\"></ng-template>\\n      </div>\\n    </td>\\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NzTableStyleService\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    tdElement: [{\n      type: ViewChild,\n      args: ['tdElement']\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableInnerDefaultComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-inner-default',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div class=\\\"ant-table-content\\\">\\n      <table\\n        nz-table-content\\n        [contentTemplate]=\\\"contentTemplate\\\"\\n        [tableLayout]=\\\"tableLayout\\\"\\n        [listOfColWidth]=\\\"listOfColWidth\\\"\\n        [theadTemplate]=\\\"theadTemplate\\\"\\n      ></table>\\n    </div>\\n  \",\n      host: {\n        '[class.ant-table-container]': 'true'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    tableLayout: [{\n      type: Input\n    }],\n    listOfColWidth: [{\n      type: Input\n    }],\n    theadTemplate: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableInnerScrollComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-inner-scroll',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-container *ngIf=\\\"scrollY\\\">\\n      <div #tableHeaderElement [ngStyle]=\\\"headerStyleMap\\\" class=\\\"ant-table-header nz-table-hide-scrollbar\\\">\\n        <table\\n          nz-table-content\\n          tableLayout=\\\"fixed\\\"\\n          [scrollX]=\\\"scrollX\\\"\\n          [listOfColWidth]=\\\"listOfColWidth\\\"\\n          [theadTemplate]=\\\"theadTemplate\\\"\\n        ></table>\\n      </div>\\n      <div #tableBodyElement *ngIf=\\\"!virtualTemplate\\\" class=\\\"ant-table-body\\\" [ngStyle]=\\\"bodyStyleMap\\\">\\n        <table\\n          nz-table-content\\n          tableLayout=\\\"fixed\\\"\\n          [scrollX]=\\\"scrollX\\\"\\n          [listOfColWidth]=\\\"listOfColWidth\\\"\\n          [contentTemplate]=\\\"contentTemplate\\\"\\n        ></table>\\n      </div>\\n      <cdk-virtual-scroll-viewport\\n        #tableBodyElement\\n        *ngIf=\\\"virtualTemplate\\\"\\n        [itemSize]=\\\"virtualItemSize\\\"\\n        [maxBufferPx]=\\\"virtualMaxBufferPx\\\"\\n        [minBufferPx]=\\\"virtualMinBufferPx\\\"\\n        [style.height]=\\\"data.length ? scrollY : noDateVirtualHeight\\\"\\n      >\\n        <table nz-table-content tableLayout=\\\"fixed\\\" [scrollX]=\\\"scrollX\\\" [listOfColWidth]=\\\"listOfColWidth\\\">\\n          <tbody>\\n            <ng-container *cdkVirtualFor=\\\"let item of data; let i = index; trackBy: virtualForTrackBy\\\">\\n              <ng-template [ngTemplateOutlet]=\\\"virtualTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: item, index: i }\\\"></ng-template>\\n            </ng-container>\\n          </tbody>\\n        </table>\\n      </cdk-virtual-scroll-viewport>\\n    </ng-container>\\n    <div class=\\\"ant-table-content\\\" *ngIf=\\\"!scrollY\\\">\\n      <div #tableBodyElement class=\\\"ant-table-body\\\" [ngStyle]=\\\"bodyStyleMap\\\">\\n        <table\\n          nz-table-content\\n          tableLayout=\\\"fixed\\\"\\n          [scrollX]=\\\"scrollX\\\"\\n          [listOfColWidth]=\\\"listOfColWidth\\\"\\n          [theadTemplate]=\\\"theadTemplate\\\"\\n          [contentTemplate]=\\\"contentTemplate\\\"\\n        ></table>\\n      </div>\\n    </div>\\n  \",\n      host: {\n        '[class.ant-table-container]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc12.Platform\n    }, {\n      type: ɵngcc13.NzResizeService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    scrollX: [{\n      type: Input\n    }],\n    scrollY: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: Input\n    }],\n    widthConfig: [{\n      type: Input\n    }],\n    listOfColWidth: [{\n      type: Input\n    }],\n    theadTemplate: [{\n      type: Input\n    }],\n    virtualTemplate: [{\n      type: Input\n    }],\n    virtualItemSize: [{\n      type: Input\n    }],\n    virtualMaxBufferPx: [{\n      type: Input\n    }],\n    virtualMinBufferPx: [{\n      type: Input\n    }],\n    virtualForTrackBy: [{\n      type: Input\n    }],\n    verticalScrollBarWidth: [{\n      type: Input\n    }],\n    tableMainElement: [{\n      type: Input\n    }],\n    tableHeaderElement: [{\n      type: ViewChild,\n      args: ['tableHeaderElement', {\n        read: ElementRef\n      }]\n    }],\n    tableBodyElement: [{\n      type: ViewChild,\n      args: ['tableBodyElement', {\n        read: ElementRef\n      }]\n    }],\n    cdkVirtualScrollViewport: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport, {\n        read: CdkVirtualScrollViewport\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableVirtualScrollDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-virtual-scroll]',\n      exportAs: 'nzVirtualScroll'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableDataService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table',\n      exportAs: 'nzTable',\n      providers: [NzTableStyleService, NzTableDataService],\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <nz-spin [nzDelay]=\\\"nzLoadingDelay\\\" [nzSpinning]=\\\"nzLoading\\\" [nzIndicator]=\\\"nzLoadingIndicator\\\">\\n      <ng-container *ngIf=\\\"nzPaginationPosition === 'both' || nzPaginationPosition === 'top'\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"paginationTemplate\\\"></ng-template>\\n      </ng-container>\\n      <div\\n        #tableMainElement\\n        class=\\\"ant-table\\\"\\n        [class.ant-table-fixed-header]=\\\"nzData.length && scrollY\\\"\\n        [class.ant-table-fixed-column]=\\\"scrollX\\\"\\n        [class.ant-table-has-fix-left]=\\\"hasFixLeft\\\"\\n        [class.ant-table-has-fix-right]=\\\"hasFixRight\\\"\\n        [class.ant-table-bordered]=\\\"nzBordered\\\"\\n        [class.nz-table-out-bordered]=\\\"nzOuterBordered && !nzBordered\\\"\\n        [class.ant-table-middle]=\\\"nzSize === 'middle'\\\"\\n        [class.ant-table-small]=\\\"nzSize === 'small'\\\"\\n      >\\n        <nz-table-title-footer [title]=\\\"nzTitle\\\" *ngIf=\\\"nzTitle\\\"></nz-table-title-footer>\\n        <nz-table-inner-scroll\\n          *ngIf=\\\"scrollY || scrollX; else defaultTemplate\\\"\\n          [data]=\\\"data\\\"\\n          [scrollX]=\\\"scrollX\\\"\\n          [scrollY]=\\\"scrollY\\\"\\n          [contentTemplate]=\\\"contentTemplate\\\"\\n          [listOfColWidth]=\\\"listOfAutoColWidth\\\"\\n          [theadTemplate]=\\\"theadTemplate\\\"\\n          [verticalScrollBarWidth]=\\\"verticalScrollBarWidth\\\"\\n          [virtualTemplate]=\\\"nzVirtualScrollDirective ? nzVirtualScrollDirective.templateRef : null\\\"\\n          [virtualItemSize]=\\\"nzVirtualItemSize\\\"\\n          [virtualMaxBufferPx]=\\\"nzVirtualMaxBufferPx\\\"\\n          [virtualMinBufferPx]=\\\"nzVirtualMinBufferPx\\\"\\n          [tableMainElement]=\\\"tableMainElement\\\"\\n          [virtualForTrackBy]=\\\"nzVirtualForTrackBy\\\"\\n        ></nz-table-inner-scroll>\\n        <ng-template #defaultTemplate>\\n          <nz-table-inner-default\\n            [tableLayout]=\\\"nzTableLayout\\\"\\n            [listOfColWidth]=\\\"listOfManualColWidth\\\"\\n            [theadTemplate]=\\\"theadTemplate\\\"\\n            [contentTemplate]=\\\"contentTemplate\\\"\\n          ></nz-table-inner-default>\\n        </ng-template>\\n        <nz-table-title-footer [footer]=\\\"nzFooter\\\" *ngIf=\\\"nzFooter\\\"></nz-table-title-footer>\\n      </div>\\n      <ng-container *ngIf=\\\"nzPaginationPosition === 'both' || nzPaginationPosition === 'bottom'\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"paginationTemplate\\\"></ng-template>\\n      </ng-container>\\n    </nz-spin>\\n    <ng-template #paginationTemplate>\\n      <nz-pagination\\n        *ngIf=\\\"nzShowPagination && data.length\\\"\\n        class=\\\"ant-table-pagination ant-table-pagination-right\\\"\\n        [nzShowSizeChanger]=\\\"nzShowSizeChanger\\\"\\n        [nzPageSizeOptions]=\\\"nzPageSizeOptions\\\"\\n        [nzItemRender]=\\\"nzItemRender!\\\"\\n        [nzShowQuickJumper]=\\\"nzShowQuickJumper\\\"\\n        [nzHideOnSinglePage]=\\\"nzHideOnSinglePage\\\"\\n        [nzShowTotal]=\\\"nzShowTotal\\\"\\n        [nzSize]=\\\"nzSize === 'default' ? 'default' : 'small'\\\"\\n        [nzPageSize]=\\\"nzPageSize\\\"\\n        [nzTotal]=\\\"nzTotal\\\"\\n        [nzSimple]=\\\"nzSimple\\\"\\n        [nzPageIndex]=\\\"nzPageIndex\\\"\\n        (nzPageSizeChange)=\\\"onPageSizeChange($event)\\\"\\n        (nzPageIndexChange)=\\\"onPageIndexChange($event)\\\"\\n      ></nz-pagination>\\n    </ng-template>\\n    <ng-template #contentTemplate>\\n      <ng-content></ng-content>\\n    </ng-template>\\n  \",\n      host: {\n        '[class.ant-table-wrapper]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc15.NzResizeObserver\n    }, {\n      type: ɵngcc16.NzConfigService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NzTableStyleService\n    }, {\n      type: NzTableDataService\n    }];\n  }, {\n    nzTableLayout: [{\n      type: Input\n    }],\n    nzShowTotal: [{\n      type: Input\n    }],\n    nzItemRender: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzFooter: [{\n      type: Input\n    }],\n    nzNoResult: [{\n      type: Input\n    }],\n    nzPageSizeOptions: [{\n      type: Input\n    }],\n    nzVirtualItemSize: [{\n      type: Input\n    }],\n    nzVirtualMaxBufferPx: [{\n      type: Input\n    }],\n    nzVirtualMinBufferPx: [{\n      type: Input\n    }],\n    nzVirtualForTrackBy: [{\n      type: Input\n    }],\n    nzLoadingDelay: [{\n      type: Input\n    }],\n    nzPageIndex: [{\n      type: Input\n    }],\n    nzPageSize: [{\n      type: Input\n    }],\n    nzTotal: [{\n      type: Input\n    }],\n    nzWidthConfig: [{\n      type: Input\n    }],\n    nzData: [{\n      type: Input\n    }],\n    nzPaginationPosition: [{\n      type: Input\n    }],\n    nzScroll: [{\n      type: Input\n    }],\n    nzFrontPagination: [{\n      type: Input\n    }],\n    nzTemplateMode: [{\n      type: Input\n    }],\n    nzShowPagination: [{\n      type: Input\n    }],\n    nzLoading: [{\n      type: Input\n    }],\n    nzOuterBordered: [{\n      type: Input\n    }],\n    nzLoadingIndicator: [{\n      type: Input\n    }],\n    nzBordered: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzShowSizeChanger: [{\n      type: Input\n    }],\n    nzHideOnSinglePage: [{\n      type: Input\n    }],\n    nzShowQuickJumper: [{\n      type: Input\n    }],\n    nzSimple: [{\n      type: Input\n    }],\n    nzPageSizeChange: [{\n      type: Output\n    }],\n    nzPageIndexChange: [{\n      type: Output\n    }],\n    nzQueryParams: [{\n      type: Output\n    }],\n    nzCurrentPageDataChange: [{\n      type: Output\n    }],\n    nzVirtualScrollDirective: [{\n      type: ContentChild,\n      args: [NzTableVirtualScrollDirective, {\n        static: false\n      }]\n    }],\n    nzTableInnerScrollComponent: [{\n      type: ViewChild,\n      args: [NzTableInnerScrollComponent]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTbodyComponent = /*#__PURE__*/function () {\n  function NzTbodyComponent(nzTableStyleService) {\n    _classCallCheck(this, NzTbodyComponent);\n\n    this.nzTableStyleService = nzTableStyleService;\n    this.isInsideTable = false;\n    this.showEmpty$ = new BehaviorSubject(false);\n    this.noResult$ = new BehaviorSubject(undefined);\n    this.listOfMeasureColumn$ = new BehaviorSubject([]);\n    this.isInsideTable = !!this.nzTableStyleService;\n\n    if (this.nzTableStyleService) {\n      var _this$nzTableStyleSer3 = this.nzTableStyleService,\n          showEmpty$ = _this$nzTableStyleSer3.showEmpty$,\n          noResult$ = _this$nzTableStyleSer3.noResult$,\n          listOfMeasureColumn$ = _this$nzTableStyleSer3.listOfMeasureColumn$;\n      noResult$.subscribe(this.noResult$);\n      listOfMeasureColumn$.subscribe(this.listOfMeasureColumn$);\n      showEmpty$.subscribe(this.showEmpty$);\n    }\n  }\n\n  _createClass(NzTbodyComponent, [{\n    key: \"onListOfAutoWidthChange\",\n    value: function onListOfAutoWidthChange(listOfAutoWidth) {\n      this.nzTableStyleService.setListOfAutoWidth(listOfAutoWidth);\n    }\n  }]);\n\n  return NzTbodyComponent;\n}();\n\nNzTbodyComponent.ɵfac = function NzTbodyComponent_Factory(t) {\n  return new (t || NzTbodyComponent)(ɵngcc0.ɵɵdirectiveInject(NzTableStyleService, 8));\n};\n\nNzTbodyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTbodyComponent,\n  selectors: [[\"tbody\"]],\n  hostVars: 2,\n  hostBindings: function NzTbodyComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-tbody\", ctx.isInsideTable);\n    }\n  },\n  ngContentSelectors: _c0,\n  decls: 5,\n  vars: 6,\n  consts: [[4, \"ngIf\"], [\"class\", \"ant-table-placeholder\", \"nz-table-fixed-row\", \"\", 4, \"ngIf\"], [\"nz-table-measure-row\", \"\", 3, \"listOfMeasureColumn\", \"listOfAutoWidth\", 4, \"ngIf\"], [\"nz-table-measure-row\", \"\", 3, \"listOfMeasureColumn\", \"listOfAutoWidth\"], [\"nz-table-fixed-row\", \"\", 1, \"ant-table-placeholder\"], [\"nzComponentName\", \"table\", 3, \"specificContent\"]],\n  template: function NzTbodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzTbodyComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      ɵngcc0.ɵɵpipe(1, \"async\");\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵtemplate(3, NzTbodyComponent_tr_3_Template, 3, 3, \"tr\", 1);\n      ɵngcc0.ɵɵpipe(4, \"async\");\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 2, ctx.listOfMeasureColumn$));\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(4, 4, ctx.showEmpty$));\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc3.NgIf, NzTrMeasureComponent, NzTableFixedRowComponent, ɵngcc19.NzEmbedEmptyComponent];\n  },\n  pipes: function pipes() {\n    return [ɵngcc3.AsyncPipe];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTbodyComponent.ctorParameters = function () {\n  return [{\n    type: NzTableStyleService,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTbodyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tbody',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-container *ngIf=\\\"listOfMeasureColumn$ | async as listOfMeasureColumn\\\">\\n      <tr\\n        nz-table-measure-row\\n        *ngIf=\\\"isInsideTable && listOfMeasureColumn.length\\\"\\n        [listOfMeasureColumn]=\\\"listOfMeasureColumn\\\"\\n        (listOfAutoWidth)=\\\"onListOfAutoWidthChange($event)\\\"\\n      ></tr>\\n    </ng-container>\\n    <ng-content></ng-content>\\n    <tr class=\\\"ant-table-placeholder\\\" nz-table-fixed-row *ngIf=\\\"showEmpty$ | async\\\">\\n      <nz-embed-empty nzComponentName=\\\"table\\\" [specificContent]=\\\"(noResult$ | async)!\\\"></nz-embed-empty>\\n    </tr>\\n  \",\n      host: {\n        '[class.ant-table-tbody]': 'isInsideTable'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzTableStyleService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTrDirective = /*#__PURE__*/function () {\n  function NzTrDirective(nzTableStyleService) {\n    var _this9 = this;\n\n    _classCallCheck(this, NzTrDirective);\n\n    this.nzTableStyleService = nzTableStyleService;\n    this.destroy$ = new Subject();\n    this.listOfFixedColumns$ = new ReplaySubject(1);\n    this.listOfColumns$ = new ReplaySubject(1);\n    this.listOfFixedColumnsChanges$ = this.listOfFixedColumns$.pipe(switchMap(function (list) {\n      return merge.apply(void 0, [_this9.listOfFixedColumns$].concat(_toConsumableArray(list.map(function (c) {\n        return c.changes$;\n      })))).pipe(flatMap(function () {\n        return _this9.listOfFixedColumns$;\n      }));\n    }), takeUntil(this.destroy$));\n    this.listOfFixedLeftColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(function (list) {\n      return list.filter(function (item) {\n        return item.nzLeft !== false;\n      });\n    }));\n    this.listOfFixedRightColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(function (list) {\n      return list.filter(function (item) {\n        return item.nzRight !== false;\n      });\n    }));\n    this.listOfColumnsChanges$ = this.listOfColumns$.pipe(switchMap(function (list) {\n      return merge.apply(void 0, [_this9.listOfColumns$].concat(_toConsumableArray(list.map(function (c) {\n        return c.changes$;\n      })))).pipe(flatMap(function () {\n        return _this9.listOfColumns$;\n      }));\n    }), takeUntil(this.destroy$));\n    this.isInsideTable = false;\n    this.isInsideTable = !!nzTableStyleService;\n  }\n\n  _createClass(NzTrDirective, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      if (this.nzTableStyleService) {\n        this.listOfCellFixedDirective.changes.pipe(startWith(this.listOfCellFixedDirective), takeUntil(this.destroy$)).subscribe(this.listOfFixedColumns$);\n        this.listOfNzThDirective.changes.pipe(startWith(this.listOfNzThDirective), takeUntil(this.destroy$)).subscribe(this.listOfColumns$);\n        /** set last left and first right **/\n\n        this.listOfFixedLeftColumnChanges$.subscribe(function (listOfFixedLeft) {\n          listOfFixedLeft.forEach(function (cell) {\n            return cell.setIsLastLeft(cell === listOfFixedLeft[listOfFixedLeft.length - 1]);\n          });\n        });\n        this.listOfFixedRightColumnChanges$.subscribe(function (listOfFixedRight) {\n          listOfFixedRight.forEach(function (cell) {\n            return cell.setIsFirstRight(cell === listOfFixedRight[0]);\n          });\n        });\n        /** calculate fixed nzLeft and nzRight **/\n\n        combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedLeftColumnChanges$]).subscribe(function (_ref15) {\n          var _ref16 = _slicedToArray(_ref15, 2),\n              listOfAutoWidth = _ref16[0],\n              listOfLeftCell = _ref16[1];\n\n          listOfLeftCell.forEach(function (cell, index) {\n            if (cell.isAutoLeft) {\n              var currentArray = listOfLeftCell.slice(0, index);\n              var count = currentArray.reduce(function (pre, cur) {\n                return pre + (cur.colspan || cur.colSpan || 1);\n              }, 0);\n              var width = listOfAutoWidth.slice(0, count).reduce(function (pre, cur) {\n                return pre + cur;\n              }, 0);\n              cell.setAutoLeftWidth(\"\".concat(width, \"px\"));\n            }\n          });\n        });\n        combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedRightColumnChanges$]).subscribe(function (_ref17) {\n          var _ref18 = _slicedToArray(_ref17, 2),\n              listOfAutoWidth = _ref18[0],\n              listOfRightCell = _ref18[1];\n\n          listOfRightCell.forEach(function (_, index) {\n            var cell = listOfRightCell[listOfRightCell.length - index - 1];\n\n            if (cell.isAutoRight) {\n              var currentArray = listOfRightCell.slice(listOfRightCell.length - index, listOfRightCell.length);\n              var count = currentArray.reduce(function (pre, cur) {\n                return pre + (cur.colspan || cur.colSpan || 1);\n              }, 0);\n              var width = listOfAutoWidth.slice(listOfAutoWidth.length - count, listOfAutoWidth.length).reduce(function (pre, cur) {\n                return pre + cur;\n              }, 0);\n              cell.setAutoRightWidth(\"\".concat(width, \"px\"));\n            }\n          });\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzTrDirective;\n}();\n\nNzTrDirective.ɵfac = function NzTrDirective_Factory(t) {\n  return new (t || NzTrDirective)(ɵngcc0.ɵɵdirectiveInject(NzTableStyleService, 8));\n};\n\nNzTrDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTrDirective,\n  selectors: [[\"tr\", 3, \"mat-row\", \"\", 3, \"mat-header-row\", \"\", 3, \"nz-table-measure-row\", \"\", 3, \"nzExpand\", \"\", 3, \"nz-table-fixed-row\", \"\"]],\n  contentQueries: function NzTrDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzThMeasureDirective, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzCellFixedDirective, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listOfNzThDirective = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listOfCellFixedDirective = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NzTrDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-row\", ctx.isInsideTable);\n    }\n  }\n});\n\nNzTrDirective.ctorParameters = function () {\n  return [{\n    type: NzTableStyleService,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nNzTrDirective.propDecorators = {\n  listOfNzThDirective: [{\n    type: ContentChildren,\n    args: [NzThMeasureDirective]\n  }],\n  listOfCellFixedDirective: [{\n    type: ContentChildren,\n    args: [NzCellFixedDirective]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTrDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tr:not([mat-row]):not([mat-header-row]):not([nz-table-measure-row]):not([nzExpand]):not([nz-table-fixed-row])',\n      host: {\n        '[class.ant-table-row]': 'isInsideTable'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzTableStyleService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    listOfNzThDirective: [{\n      type: ContentChildren,\n      args: [NzThMeasureDirective]\n    }],\n    listOfCellFixedDirective: [{\n      type: ContentChildren,\n      args: [NzCellFixedDirective]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTheadComponent = /*#__PURE__*/function () {\n  function NzTheadComponent(elementRef, renderer, nzTableStyleService, nzTableDataService) {\n    _classCallCheck(this, NzTheadComponent);\n\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.nzTableStyleService = nzTableStyleService;\n    this.nzTableDataService = nzTableDataService;\n    this.destroy$ = new Subject();\n    this.isInsideTable = false;\n    this.nzSortOrderChange = new EventEmitter();\n    this.isInsideTable = !!this.nzTableStyleService;\n  }\n\n  _createClass(NzTheadComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.nzTableStyleService) {\n        this.nzTableStyleService.setTheadTemplate(this.templateRef);\n      }\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this10 = this;\n\n      if (this.nzTableStyleService) {\n        var firstTableRow$ = this.listOfNzTrDirective.changes.pipe(startWith(this.listOfNzTrDirective), map(function (item) {\n          return item && item.first;\n        }));\n        var listOfColumnsChanges$ = firstTableRow$.pipe(switchMap(function (firstTableRow) {\n          return firstTableRow ? firstTableRow.listOfColumnsChanges$ : EMPTY;\n        }), takeUntil(this.destroy$));\n        listOfColumnsChanges$.subscribe(function (data) {\n          return _this10.nzTableStyleService.setListOfTh(data);\n        });\n        /** TODO: need reset the measure row when scrollX change **/\n\n        this.nzTableStyleService.enableAutoMeasure$.pipe(switchMap(function (enable) {\n          return enable ? listOfColumnsChanges$ : of([]);\n        })).pipe(takeUntil(this.destroy$)).subscribe(function (data) {\n          return _this10.nzTableStyleService.setListOfMeasureColumn(data);\n        });\n        var listOfFixedLeftColumnChanges$ = firstTableRow$.pipe(switchMap(function (firstTr) {\n          return firstTr ? firstTr.listOfFixedLeftColumnChanges$ : EMPTY;\n        }), takeUntil(this.destroy$));\n        var listOfFixedRightColumnChanges$ = firstTableRow$.pipe(switchMap(function (firstTr) {\n          return firstTr ? firstTr.listOfFixedRightColumnChanges$ : EMPTY;\n        }), takeUntil(this.destroy$));\n        listOfFixedLeftColumnChanges$.subscribe(function (listOfFixedLeftColumn) {\n          _this10.nzTableStyleService.setHasFixLeft(listOfFixedLeftColumn.length !== 0);\n        });\n        listOfFixedRightColumnChanges$.subscribe(function (listOfFixedRightColumn) {\n          _this10.nzTableStyleService.setHasFixRight(listOfFixedRightColumn.length !== 0);\n        });\n      }\n\n      if (this.nzTableDataService) {\n        var listOfColumn$ = this.listOfNzThAddOnComponent.changes.pipe(startWith(this.listOfNzThAddOnComponent));\n        var manualSort$ = listOfColumn$.pipe(switchMap(function () {\n          return merge.apply(void 0, _toConsumableArray(_this10.listOfNzThAddOnComponent.map(function (th) {\n            return th.manualClickOrder$;\n          })));\n        }), takeUntil(this.destroy$));\n        manualSort$.subscribe(function (data) {\n          var emitValue = {\n            key: data.nzColumnKey,\n            value: data.sortOrder\n          };\n\n          _this10.nzSortOrderChange.emit(emitValue);\n\n          if (data.nzSortFn && data.nzSortPriority === false) {\n            _this10.listOfNzThAddOnComponent.filter(function (th) {\n              return th !== data;\n            }).forEach(function (th) {\n              return th.clearSortOrder();\n            });\n          }\n        });\n        var listOfCalcOperator$ = listOfColumn$.pipe(switchMap(function (list) {\n          return merge.apply(void 0, [listOfColumn$].concat(_toConsumableArray(list.map(function (c) {\n            return c.calcOperatorChange$;\n          })))).pipe(mergeMap(function () {\n            return listOfColumn$;\n          }));\n        }), map(function (list) {\n          return list.filter(function (item) {\n            return !!item.nzSortFn || !!item.nzFilterFn;\n          }).map(function (item) {\n            var nzSortFn = item.nzSortFn,\n                sortOrder = item.sortOrder,\n                nzFilterFn = item.nzFilterFn,\n                nzFilterValue = item.nzFilterValue,\n                nzSortPriority = item.nzSortPriority,\n                nzColumnKey = item.nzColumnKey;\n            return {\n              key: nzColumnKey,\n              sortFn: nzSortFn,\n              sortPriority: nzSortPriority,\n              sortOrder: sortOrder,\n              filterFn: nzFilterFn,\n              filterValue: nzFilterValue\n            };\n          });\n        }), // TODO: after checked error here\n        delay(0));\n        listOfCalcOperator$.subscribe(function (list) {\n          _this10.nzTableDataService.listOfCalcOperator$.next(list);\n        });\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.nzTableStyleService) {\n        this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzTheadComponent;\n}();\n\nNzTheadComponent.ɵfac = function NzTheadComponent_Factory(t) {\n  return new (t || NzTheadComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NzTableStyleService, 8), ɵngcc0.ɵɵdirectiveInject(NzTableDataService, 8));\n};\n\nNzTheadComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTheadComponent,\n  selectors: [[\"thead\", 9, \"ant-table-thead\"]],\n  contentQueries: function NzTheadComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzTrDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzThAddOnComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listOfNzTrDirective = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listOfNzThAddOnComponent = _t);\n    }\n  },\n  viewQuery: function NzTheadComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c12, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    }\n  },\n  outputs: {\n    nzSortOrderChange: \"nzSortOrderChange\"\n  },\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 1,\n  consts: [[\"contentTemplate\", \"\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function NzTheadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzTheadComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NzTheadComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isInsideTable);\n    }\n  },\n  directives: [ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTheadComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NzTableStyleService,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: NzTableDataService,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nNzTheadComponent.propDecorators = {\n  templateRef: [{\n    type: ViewChild,\n    args: ['contentTemplate', {\n      static: true\n    }]\n  }],\n  listOfNzTrDirective: [{\n    type: ContentChildren,\n    args: [NzTrDirective, {\n      descendants: true\n    }]\n  }],\n  listOfNzThAddOnComponent: [{\n    type: ContentChildren,\n    args: [NzThAddOnComponent, {\n      descendants: true\n    }]\n  }],\n  nzSortOrderChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTheadComponent, [{\n    type: Component,\n    args: [{\n      selector: 'thead:not(.ant-table-thead)',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-template #contentTemplate>\\n      <ng-content></ng-content>\\n    </ng-template>\\n    <ng-container *ngIf=\\\"!isInsideTable\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"contentTemplate\\\"></ng-template>\\n    </ng-container>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: NzTableStyleService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: NzTableDataService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzSortOrderChange: [{\n      type: Output\n    }],\n    templateRef: [{\n      type: ViewChild,\n      args: ['contentTemplate', {\n        static: true\n      }]\n    }],\n    listOfNzTrDirective: [{\n      type: ContentChildren,\n      args: [NzTrDirective, {\n        descendants: true\n      }]\n    }],\n    listOfNzThAddOnComponent: [{\n      type: ContentChildren,\n      args: [NzThAddOnComponent, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTableTitleFooterComponent = function NzTableTitleFooterComponent() {\n  _classCallCheck(this, NzTableTitleFooterComponent);\n\n  this.title = null;\n  this.footer = null;\n};\n\nNzTableTitleFooterComponent.ɵfac = function NzTableTitleFooterComponent_Factory(t) {\n  return new (t || NzTableTitleFooterComponent)();\n};\n\nNzTableTitleFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTableTitleFooterComponent,\n  selectors: [[\"nz-table-title-footer\"]],\n  hostVars: 4,\n  hostBindings: function NzTableTitleFooterComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-title\", ctx.title !== null)(\"ant-table-footer\", ctx.footer !== null);\n    }\n  },\n  inputs: {\n    title: \"title\",\n    footer: \"footer\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"nzStringTemplateOutlet\"]],\n  template: function NzTableTitleFooterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzTableTitleFooterComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzTableTitleFooterComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.title);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.footer);\n    }\n  },\n  directives: [ɵngcc20.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzTableTitleFooterComponent.propDecorators = {\n  title: [{\n    type: Input\n  }],\n  footer: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableTitleFooterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-title-footer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-container *nzStringTemplateOutlet=\\\"title\\\">{{ title }}</ng-container>\\n    <ng-container *nzStringTemplateOutlet=\\\"footer\\\">{{ footer }}</ng-container>\\n  \",\n      host: {\n        '[class.ant-table-title]': \"title !== null\",\n        '[class.ant-table-footer]': \"footer !== null\"\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    title: [{\n      type: Input\n    }],\n    footer: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTrExpandDirective = function NzTrExpandDirective() {\n  _classCallCheck(this, NzTrExpandDirective);\n\n  this.nzExpand = true;\n};\n\nNzTrExpandDirective.ɵfac = function NzTrExpandDirective_Factory(t) {\n  return new (t || NzTrExpandDirective)();\n};\n\nNzTrExpandDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTrExpandDirective,\n  selectors: [[\"tr\", \"nzExpand\", \"\"]],\n  hostVars: 3,\n  hostBindings: function NzTrExpandDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"hidden\", !ctx.nzExpand);\n      ɵngcc0.ɵɵclassProp(\"ant-table-expanded-row\", true);\n    }\n  },\n  inputs: {\n    nzExpand: \"nzExpand\"\n  }\n});\nNzTrExpandDirective.propDecorators = {\n  nzExpand: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTrExpandDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tr[nzExpand]',\n      host: {\n        '[class.ant-table-expanded-row]': 'true',\n        '[hidden]': \"!nzExpand\"\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzExpand: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTrMeasureComponent = /*#__PURE__*/function () {\n  function NzTrMeasureComponent(nzResizeObserver, ngZone) {\n    _classCallCheck(this, NzTrMeasureComponent);\n\n    this.nzResizeObserver = nzResizeObserver;\n    this.ngZone = ngZone;\n    this.listOfMeasureColumn = [];\n    this.listOfAutoWidth = new EventEmitter();\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzTrMeasureComponent, [{\n    key: \"trackByFunc\",\n    value: function trackByFunc(_, key) {\n      return key;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this11 = this;\n\n      this.listOfTdElement.changes.pipe(startWith(this.listOfTdElement)).pipe(switchMap(function (list) {\n        return combineLatest(list.toArray().map(function (item) {\n          return _this11.nzResizeObserver.observe(item).pipe(map(function (_ref19) {\n            var _ref20 = _slicedToArray(_ref19, 1),\n                entry = _ref20[0];\n\n            var _entry$target$getBoun2 = entry.target.getBoundingClientRect(),\n                width = _entry$target$getBoun2.width;\n\n            return Math.floor(width);\n          }));\n        }));\n      }), debounceTime(16), takeUntil(this.destroy$)).subscribe(function (data) {\n        _this11.ngZone.run(function () {\n          _this11.listOfAutoWidth.next(data);\n        });\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzTrMeasureComponent;\n}();\n\nNzTrMeasureComponent.ɵfac = function NzTrMeasureComponent_Factory(t) {\n  return new (t || NzTrMeasureComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc15.NzResizeObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNzTrMeasureComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTrMeasureComponent,\n  selectors: [[\"tr\", \"nz-table-measure-row\", \"\"]],\n  viewQuery: function NzTrMeasureComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c7, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listOfTdElement = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NzTrMeasureComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-table-measure-now\", true);\n    }\n  },\n  inputs: {\n    listOfMeasureColumn: \"listOfMeasureColumn\"\n  },\n  outputs: {\n    listOfAutoWidth: \"listOfAutoWidth\"\n  },\n  attrs: _c13,\n  decls: 1,\n  vars: 2,\n  consts: [[\"class\", \"nz-disable-td\", \"style\", \"padding: 0px; border: 0px; height: 0px;\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"nz-disable-td\", 2, \"padding\", \"0px\", \"border\", \"0px\", \"height\", \"0px\"], [\"tdElement\", \"\"]],\n  template: function NzTrMeasureComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzTrMeasureComponent_td_0_Template, 2, 0, \"td\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.listOfMeasureColumn)(\"ngForTrackBy\", ctx.trackByFunc);\n    }\n  },\n  directives: [ɵngcc3.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTrMeasureComponent.ctorParameters = function () {\n  return [{\n    type: NzResizeObserver\n  }, {\n    type: NgZone\n  }];\n};\n\nNzTrMeasureComponent.propDecorators = {\n  listOfMeasureColumn: [{\n    type: Input\n  }],\n  listOfAutoWidth: [{\n    type: Output\n  }],\n  listOfTdElement: [{\n    type: ViewChildren,\n    args: ['tdElement']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTrMeasureComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tr[nz-table-measure-row]',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <td\\n      #tdElement\\n      class=\\\"nz-disable-td\\\"\\n      style=\\\"padding: 0px; border: 0px; height: 0px;\\\"\\n      *ngFor=\\\"let th of listOfMeasureColumn; trackBy: trackByFunc\\\"\\n    ></td>\\n  \",\n      host: {\n        '[class.ant-table-measure-now]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc15.NzResizeObserver\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    listOfMeasureColumn: [{\n      type: Input\n    }],\n    listOfAutoWidth: [{\n      type: Output\n    }],\n    listOfTdElement: [{\n      type: ViewChildren,\n      args: ['tdElement']\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTableModule = function NzTableModule() {\n  _classCallCheck(this, NzTableModule);\n};\n\nNzTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzTableModule\n});\nNzTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzTableModule_Factory(t) {\n    return new (t || NzTableModule)();\n  },\n  imports: [[NzMenuModule, FormsModule, NzOutletModule, NzRadioModule, NzCheckboxModule, NzDropDownModule, NzButtonModule, CommonModule, PlatformModule, NzPaginationModule, NzResizeObserversModule, NzSpinModule, NzI18nModule, NzIconModule, NzEmptyModule, ScrollingModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTableModule, {\n    declarations: function declarations() {\n      return [NzTableComponent, NzThAddOnComponent, NzTableCellDirective, NzThMeasureDirective, NzTdAddOnComponent, NzTheadComponent, NzTbodyComponent, NzTrDirective, NzTrExpandDirective, NzTableVirtualScrollDirective, NzCellFixedDirective, NzTableContentComponent, NzTableTitleFooterComponent, NzTableInnerDefaultComponent, NzTableInnerScrollComponent, NzTrMeasureComponent, NzRowIndentDirective, NzRowExpandButtonDirective, NzCellBreakWordDirective, NzCellAlignDirective, NzTableSortersComponent, NzTableFilterComponent, NzTableSelectionComponent, NzCellEllipsisDirective, NzFilterTriggerComponent, NzTableFixedRowComponent, NzThSelectionComponent];\n    },\n    imports: function imports() {\n      return [NzMenuModule, FormsModule, NzOutletModule, NzRadioModule, NzCheckboxModule, NzDropDownModule, NzButtonModule, CommonModule, PlatformModule, NzPaginationModule, NzResizeObserversModule, NzSpinModule, NzI18nModule, NzIconModule, NzEmptyModule, ScrollingModule];\n    },\n    exports: function exports() {\n      return [NzTableComponent, NzThAddOnComponent, NzTableCellDirective, NzThMeasureDirective, NzTdAddOnComponent, NzTheadComponent, NzTbodyComponent, NzTrDirective, NzTableVirtualScrollDirective, NzCellFixedDirective, NzFilterTriggerComponent, NzTrExpandDirective, NzCellBreakWordDirective, NzCellAlignDirective, NzCellEllipsisDirective, NzTableFixedRowComponent, NzThSelectionComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzTableComponent, NzThAddOnComponent, NzTableCellDirective, NzThMeasureDirective, NzTdAddOnComponent, NzTheadComponent, NzTbodyComponent, NzTrDirective, NzTrExpandDirective, NzTableVirtualScrollDirective, NzCellFixedDirective, NzTableContentComponent, NzTableTitleFooterComponent, NzTableInnerDefaultComponent, NzTableInnerScrollComponent, NzTrMeasureComponent, NzRowIndentDirective, NzRowExpandButtonDirective, NzCellBreakWordDirective, NzCellAlignDirective, NzTableSortersComponent, NzTableFilterComponent, NzTableSelectionComponent, NzCellEllipsisDirective, NzFilterTriggerComponent, NzTableFixedRowComponent, NzThSelectionComponent],\n      exports: [NzTableComponent, NzThAddOnComponent, NzTableCellDirective, NzThMeasureDirective, NzTdAddOnComponent, NzTheadComponent, NzTbodyComponent, NzTrDirective, NzTableVirtualScrollDirective, NzCellFixedDirective, NzFilterTriggerComponent, NzTrExpandDirective, NzCellBreakWordDirective, NzCellAlignDirective, NzCellEllipsisDirective, NzTableFixedRowComponent, NzThSelectionComponent],\n      imports: [NzMenuModule, FormsModule, NzOutletModule, NzRadioModule, NzCheckboxModule, NzDropDownModule, NzButtonModule, CommonModule, PlatformModule, NzPaginationModule, NzResizeObserversModule, NzSpinModule, NzI18nModule, NzIconModule, NzEmptyModule, ScrollingModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCellAlignDirective, NzCellBreakWordDirective, NzCellEllipsisDirective, NzCellFixedDirective, NzFilterTriggerComponent, NzRowExpandButtonDirective, NzRowIndentDirective, NzTableCellDirective, NzTableComponent, NzTableContentComponent, NzTableDataService, NzTableFilterComponent, NzTableFixedRowComponent, NzTableInnerDefaultComponent, NzTableInnerScrollComponent, NzTableModule, NzTableSelectionComponent, NzTableSortersComponent, NzTableStyleService, NzTableTitleFooterComponent, NzTableVirtualScrollDirective, NzTbodyComponent, NzTdAddOnComponent, NzThAddOnComponent, NzThMeasureDirective, NzThSelectionComponent, NzTheadComponent, NzTrDirective, NzTrExpandDirective, NzTrMeasureComponent };","map":{"version":3,"sources":["../../components/table/src/addon/filter-trigger.component.ts","../../components/table/src/addon/filter.component.ts","../../components/table/src/addon/row-expand-button.directive.ts","../../components/table/src/addon/row-indent.directive.ts","../../components/table/src/addon/selection.component.ts","../../components/table/src/addon/sorters.component.ts","../../components/table/src/cell/cell-fixed.directive.ts","../../components/table/src/table-style.service.ts","../../components/table/src/cell/cell.directive.ts","../../components/table/src/cell/td-addon.component.ts","../../components/table/src/cell/th-addon.component.ts","../../components/table/src/cell/th-measure.directive.ts","../../components/table/src/cell/th-selection.component.ts","../../components/table/src/styled/align.directive.ts","../../components/table/src/styled/ellipsis.directive.ts","../../components/table/src/styled/word-break.directive.ts","../../components/table/src/table/table-content.component.ts","../../components/table/src/table/table-fixed-row.component.ts","../../components/table/src/table/table-inner-default.component.ts","../../components/table/src/table/table-inner-scroll.component.ts","../../components/table/src/table/table-virtual-scroll.directive.ts","../../components/table/src/table-data.service.ts","../../components/table/src/table/table.component.ts","../../components/table/src/table/tbody.component.ts","../../components/table/src/table/tr.directive.ts","../../components/table/src/table/thead.component.ts","../../components/table/src/table/title-footer.component.ts","../../components/table/src/table/tr-expand.directive.ts","../../components/table/src/table/tr-measure.component.ts","../../components/table/src/table.module.ts","../../components/table/src/table.types.ts","../../components/table/public-api.ts","../../components/table/ng-zorro-antd-table.ts"],"names":[],"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\n\n@Component({\n  selector: 'nz-filter-trigger',\n  exportAs: `nzFilterTrigger`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span\n      nz-dropdown\n      class=\"ant-table-filter-trigger\"\n      nzTrigger=\"click\"\n      nzPlacement=\"bottomRight\"\n      [nzClickHide]=\"false\"\n      [nzDropdownMenu]=\"nzDropdownMenu\"\n      [class.active]=\"nzActive\"\n      [class.ant-table-filter-open]=\"nzVisible\"\n      [nzVisible]=\"nzVisible\"\n      (nzVisibleChange)=\"onVisibleChange($event)\"\n      (click)=\"onFilterClick($event)\"\n    >\n      <ng-content></ng-content>\n    </span>\n  `,\n  host: {\n    '[class.ant-table-filter-trigger-container]': 'true',\n    '[class.ant-table-filter-trigger-container-open]': 'nzVisible'\n  }\n})\nexport class NzFilterTriggerComponent {\n  @Input() nzActive = false;\n  @Input() nzDropdownMenu!: NzDropdownMenuComponent;\n  @Input() nzVisible = false;\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n  onVisibleChange(visible: boolean): void {\n    this.nzVisible = visible;\n    this.nzVisibleChange.next(visible);\n  }\n  onFilterClick($event: MouseEvent): void {\n    $event.stopPropagation();\n  }\n  hide(): void {\n    this.nzVisible = false;\n    this.cdr.markForCheck();\n  }\n  show(): void {\n    this.nzVisible = true;\n    this.cdr.markForCheck();\n  }\n  constructor(private cdr: ChangeDetectorRef) {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService, NzTableI18nInterface } from 'ng-zorro-antd/i18n';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableFilterList } from '../table.types';\n\ninterface NzThItemInterface {\n  text: string;\n  value: NzSafeAny;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'nz-table-filter',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span class=\"ant-table-filter-column-title\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </span>\n    <ng-container *ngIf=\"!customFilter; else extraTemplate\">\n      <nz-filter-trigger\n        [nzVisible]=\"isVisible\"\n        [nzActive]=\"isChecked\"\n        [nzDropdownMenu]=\"filterMenu\"\n        (nzVisibleChange)=\"onVisibleChange($event)\"\n      >\n        <i nz-icon nzType=\"filter\" nzTheme=\"fill\"></i>\n      </nz-filter-trigger>\n      <nz-dropdown-menu #filterMenu=\"nzDropdownMenu\">\n        <div class=\"ant-table-filter-dropdown\">\n          <ul nz-menu>\n            <li nz-menu-item [nzSelected]=\"f.checked\" *ngFor=\"let f of listOfParsedFilter; trackBy: trackByValue\" (click)=\"check(f)\">\n              <label nz-radio *ngIf=\"!filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <label nz-checkbox *ngIf=\"filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <span>{{ f.text }}</span>\n            </li>\n          </ul>\n          <div class=\"ant-table-filter-dropdown-btns\">\n            <button nz-button nzType=\"link\" nzSize=\"small\" (click)=\"reset()\" [disabled]=\"!isChecked\">{{ locale.filterReset }}</button>\n            <button nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"confirm()\">{{ locale.filterConfirm }}</button>\n          </div>\n        </div>\n      </nz-dropdown-menu>\n    </ng-container>\n  `,\n  host: {\n    '[class.ant-table-filter-column]': 'true'\n  }\n})\nexport class NzTableFilterComponent implements OnChanges, OnDestroy, OnInit {\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() customFilter = false;\n  @Input() extraTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() filterMultiple = true;\n  @Input() listOfFilter: NzTableFilterList = [];\n  @Output() readonly filterChange = new EventEmitter<NzSafeAny[] | NzSafeAny>();\n  private destroy$ = new Subject();\n  locale!: NzTableI18nInterface;\n  isChanged = false;\n  isChecked = false;\n  isVisible = false;\n  listOfParsedFilter: NzThItemInterface[] = [];\n\n  trackByValue(_: number, item: NzThItemInterface): NzSafeAny {\n    return item.value;\n  }\n\n  check(filter: NzThItemInterface): void {\n    this.isChanged = true;\n    if (this.filterMultiple) {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n        if (item === filter) {\n          return { ...item, checked: !filter.checked };\n        } else {\n          return item;\n        }\n      });\n      filter.checked = !filter.checked;\n    } else {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n        return { ...item, checked: item === filter };\n      });\n    }\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n  }\n\n  confirm(): void {\n    this.isVisible = false;\n    this.emitFilterData();\n  }\n\n  reset(): void {\n    this.isChanged = true;\n    this.isVisible = false;\n    this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter, true);\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    this.emitFilterData();\n  }\n\n  onVisibleChange(value: boolean): void {\n    this.isVisible = value;\n    if (!value) {\n      this.emitFilterData();\n    }\n  }\n\n  emitFilterData(): void {\n    if (this.isChanged) {\n      const listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n      if (this.filterMultiple) {\n        this.filterChange.emit(listOfChecked);\n      } else {\n        this.filterChange.emit(listOfChecked.length > 0 ? listOfChecked[0] : null);\n      }\n      this.isChanged = false;\n    }\n  }\n\n  parseListOfFilter(listOfFilter: NzTableFilterList, reset?: boolean): NzThItemInterface[] {\n    return listOfFilter.map(item => {\n      const checked = reset ? false : !!item.byDefault;\n      return { text: item.text, value: item.value, checked };\n    });\n  }\n\n  getCheckedStatus(listOfParsedFilter: NzThItemInterface[]): boolean {\n    return listOfParsedFilter.some(item => item.checked);\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private i18n: NzI18nService) {}\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Table');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { listOfFilter } = changes;\n    if (listOfFilter && this.listOfFilter && this.listOfFilter.length) {\n      this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter);\n      this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: 'button[nz-row-expand-button]',\n  host: {\n    '[type]': `'button'`,\n    '[class.ant-table-row-expand-icon]': 'true',\n    '[class.ant-table-row-expand-icon-expanded]': `!spaceMode && expand === true`,\n    '[class.ant-table-row-expand-icon-collapsed]': `!spaceMode && expand === false`,\n    '[class.ant-table-row-expand-icon-spaced]': 'spaceMode',\n    '(click)': 'onHostClick()'\n  }\n})\nexport class NzRowExpandButtonDirective {\n  @Input() expand = false;\n  @Input() spaceMode = false;\n  @Output() readonly expandChange = new EventEmitter();\n  onHostClick(): void {\n    if (!this.spaceMode) {\n      this.expand = !this.expand;\n      this.expandChange.next(this.expand);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'nz-row-indent',\n  host: {\n    '[class.ant-table-row-indent]': 'true',\n    '[style.padding-left.px]': 'indentSize'\n  }\n})\nexport class NzRowIndentDirective {\n  @Input() indentSize = 0;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-table-selection',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <label\n      *ngIf=\"showCheckbox\"\n      nz-checkbox\n      [class.ant-table-selection-select-all-custom]=\"showRowSelection\"\n      [ngModel]=\"checked\"\n      [nzDisabled]=\"disabled\"\n      [nzIndeterminate]=\"indeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    >\n    </label>\n    <div class=\"ant-table-selection-extra\" *ngIf=\"showRowSelection\">\n      <span nz-dropdown class=\"ant-table-selection-down\" nzPlacement=\"bottomLeft\" [nzDropdownMenu]=\"selectionMenu\">\n        <i nz-icon nzType=\"down\"></i>\n      </span>\n      <nz-dropdown-menu #selectionMenu=\"nzDropdownMenu\">\n        <ul nz-menu class=\"ant-table-selection-menu\">\n          <li nz-menu-item *ngFor=\"let selection of listOfSelections\" (click)=\"selection.onSelect()\">\n            {{ selection.text }}\n          </li>\n        </ul>\n      </nz-dropdown-menu>\n    </div>\n  `,\n  host: {\n    '[class.ant-table-selection]': 'true'\n  }\n})\nexport class NzTableSelectionComponent {\n  @Input() listOfSelections: Array<{ text: string; onSelect(...args: NzSafeAny[]): NzSafeAny }> = [];\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() indeterminate = false;\n  @Input() showCheckbox = false;\n  @Input() showRowSelection = false;\n  @Output() readonly checkedChange = new EventEmitter<boolean>();\n  onCheckedChange(checked: boolean): void {\n    this.checked = checked;\n    this.checkedChange.emit(checked);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableSortOrder } from '../table.types';\n\n@Component({\n  selector: 'nz-table-sorters',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span><ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template></span>\n    <span class=\"ant-table-column-sorter\" [class.ant-table-column-sorter-full]=\"isDown && isUp\">\n      <span class=\"ant-table-column-sorter-inner\">\n        <i nz-icon nzType=\"caret-up\" *ngIf=\"isUp\" class=\"ant-table-column-sorter-up\" [class.active]=\"sortOrder == 'ascend'\"></i>\n        <i nz-icon nzType=\"caret-down\" *ngIf=\"isDown\" class=\"ant-table-column-sorter-down\" [class.active]=\"sortOrder == 'descend'\"></i>\n      </span>\n    </span>\n  `,\n  host: {\n    '[class.ant-table-column-sorters]': 'true'\n  }\n})\nexport class NzTableSortersComponent implements OnChanges {\n  @Input() sortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  @Input() sortOrder: NzTableSortOrder = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  isUp = false;\n  isDown = false;\n  ngOnChanges(changes: SimpleChanges): void {\n    const { sortDirections } = changes;\n    if (sortDirections) {\n      this.isUp = this.sortDirections.indexOf('ascend') !== -1;\n      this.isDown = this.sortDirections.indexOf('descend') !== -1;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: 'td[nzRight],th[nzRight],td[nzLeft],th[nzLeft]',\n  host: {\n    '[class.ant-table-cell-fix-right]': `isFixedRight`,\n    '[class.ant-table-cell-fix-left]': `isFixedLeft`,\n    '[style.position]': `isFixed? 'sticky' : null`\n  }\n})\nexport class NzCellFixedDirective implements OnChanges {\n  @Input() nzRight: string | boolean = false;\n  @Input() nzLeft: string | boolean = false;\n  @Input() colspan: number | null = null;\n  @Input() colSpan: number | null = null;\n  changes$ = new Subject<void>();\n  isAutoLeft = false;\n  isAutoRight = false;\n  isFixedLeft = false;\n  isFixedRight = false;\n  isFixed = false;\n\n  setAutoLeftWidth(autoLeft: string | null): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'left', autoLeft);\n  }\n\n  setAutoRightWidth(autoRight: string | null): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'right', autoRight);\n  }\n\n  setIsFirstRight(isFirstRight: boolean): void {\n    this.setFixClass(isFirstRight, 'ant-table-cell-fix-right-first');\n  }\n\n  setIsLastLeft(isLastLeft: boolean): void {\n    this.setFixClass(isLastLeft, 'ant-table-cell-fix-left-last');\n  }\n\n  private setFixClass(flag: boolean, className: string): void {\n    // the setFixClass function may call many times, so remove it first.\n    this.renderer.removeClass(this.elementRef.nativeElement, className);\n\n    if (flag) {\n      this.renderer.addClass(this.elementRef.nativeElement, className);\n    }\n  }\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnChanges(): void {\n    this.setIsFirstRight(false);\n    this.setIsLastLeft(false);\n    this.isAutoLeft = this.nzLeft === '' || this.nzLeft === true;\n    this.isAutoRight = this.nzRight === '' || this.nzRight === true;\n    this.isFixedLeft = this.nzLeft !== false;\n    this.isFixedRight = this.nzRight !== false;\n    this.isFixed = this.isFixedLeft || this.isFixedRight;\n    const validatePx = (value: string | boolean): string | null => {\n      if (typeof value === 'string' && value !== '') {\n        return value;\n      } else {\n        return null;\n      }\n    };\n    this.setAutoLeftWidth(validatePx(this.nzLeft));\n    this.setAutoRightWidth(validatePx(this.nzRight));\n    this.changes$.next();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject, combineLatest, merge, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NzThMeasureDirective } from './cell/th-measure.directive';\n\n@Injectable()\nexport class NzTableStyleService {\n  theadTemplate$ = new ReplaySubject<TemplateRef<NzSafeAny>>(1);\n  hasFixLeft$ = new ReplaySubject<boolean>(1);\n  hasFixRight$ = new ReplaySubject<boolean>(1);\n  hostWidth$ = new ReplaySubject<number>(1);\n  columnCount$ = new ReplaySubject<number>(1);\n  showEmpty$ = new ReplaySubject<boolean>(1);\n  noResult$ = new ReplaySubject<string | TemplateRef<NzSafeAny> | undefined>(1);\n  private listOfThWidthConfigPx$ = new BehaviorSubject<Array<string | null>>([]);\n  private tableWidthConfigPx$ = new BehaviorSubject<Array<string | null>>([]);\n  manualWidthConfigPx$ = combineLatest([this.tableWidthConfigPx$, this.listOfThWidthConfigPx$]).pipe(\n    map(([widthConfig, listOfWidth]) => (widthConfig.length ? widthConfig : listOfWidth))\n  );\n  private listOfAutoWidthPx$ = new ReplaySubject<string[]>(1);\n  listOfListOfThWidthPx$ = merge(\n    /** init with manual width **/\n    this.manualWidthConfigPx$,\n    combineLatest([this.listOfAutoWidthPx$, this.manualWidthConfigPx$]).pipe(\n      map(([autoWidth, manualWidth]) => {\n        /** use autoWidth until column length match **/\n        if (autoWidth.length === manualWidth.length) {\n          return autoWidth.map((width, index) => {\n            if (width === '0px') {\n              return manualWidth[index] || null;\n            } else {\n              return manualWidth[index] || width;\n            }\n          });\n        } else {\n          return manualWidth;\n        }\n      })\n    )\n  );\n  listOfMeasureColumn$ = new ReplaySubject<string[]>(1);\n  listOfListOfThWidth$ = this.listOfAutoWidthPx$.pipe(map(list => list.map(width => parseInt(width, 10))));\n  enableAutoMeasure$ = new ReplaySubject<boolean>(1);\n\n  setTheadTemplate(template: TemplateRef<NzSafeAny>): void {\n    this.theadTemplate$.next(template);\n  }\n\n  setHasFixLeft(hasFixLeft: boolean): void {\n    this.hasFixLeft$.next(hasFixLeft);\n  }\n\n  setHasFixRight(hasFixRight: boolean): void {\n    this.hasFixRight$.next(hasFixRight);\n  }\n\n  setTableWidthConfig(widthConfig: Array<string | null>): void {\n    this.tableWidthConfigPx$.next(widthConfig);\n  }\n\n  setListOfTh(listOfTh: NzThMeasureDirective[]): void {\n    let columnCount = 0;\n    listOfTh.forEach(th => {\n      columnCount += (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n    });\n    const listOfThPx = listOfTh.map(item => item.nzWidth);\n    this.columnCount$.next(columnCount);\n    this.listOfThWidthConfigPx$.next(listOfThPx);\n  }\n\n  setListOfMeasureColumn(listOfTh: NzThMeasureDirective[]): void {\n    const listOfKeys: string[] = [];\n    listOfTh.forEach(th => {\n      const length = (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n      for (let i = 0; i < length; i++) {\n        listOfKeys.push(`measure_key_${i}`);\n      }\n    });\n    this.listOfMeasureColumn$.next(listOfKeys);\n  }\n\n  setListOfAutoWidth(listOfAutoWidth: number[]): void {\n    this.listOfAutoWidthPx$.next(listOfAutoWidth.map(width => `${width}px`));\n  }\n\n  setShowEmpty(showEmpty: boolean): void {\n    this.showEmpty$.next(showEmpty);\n  }\n\n  setNoResult(noResult: string | TemplateRef<NzSafeAny> | undefined): void {\n    this.noResult$.next(noResult);\n  }\n\n  setScroll(scrollX: string | null, scrollY: string | null): void {\n    const enableAutoMeasure = !!(scrollX || scrollY);\n    if (!enableAutoMeasure) {\n      this.setListOfAutoWidth([]);\n    }\n    this.enableAutoMeasure$.next(enableAutoMeasure);\n  }\n\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directive, Optional } from '@angular/core';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Directive({\n  selector: 'th:not(.nz-disable-th):not([mat-cell]), td:not(.nz-disable-td):not([mat-cell])',\n  host: {\n    '[class.ant-table-cell]': 'isInsideTable'\n  }\n})\nexport class NzTableCellDirective {\n  isInsideTable = false;\n  constructor(@Optional() nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!nzTableStyleService;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'td[nzChecked], td[nzDisabled], td[nzIndeterminate], td[nzIndentSize], td[nzExpand], td[nzShowExpand], td[nzShowCheckbox]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"nzShowExpand || nzIndentSize > 0\">\n      <nz-row-indent [indentSize]=\"nzIndentSize\"></nz-row-indent>\n      <button nz-row-expand-button [expand]=\"nzExpand\" (expandChange)=\"onExpandChange($event)\" [spaceMode]=\"!nzShowExpand\"></button>\n    </ng-container>\n    <label\n      nz-checkbox\n      *ngIf=\"nzShowCheckbox\"\n      [nzDisabled]=\"nzDisabled\"\n      [ngModel]=\"nzChecked\"\n      [nzIndeterminate]=\"nzIndeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    >\n    </label>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-table-cell-with-append]': `nzShowExpand || nzIndentSize > 0`,\n    '[class.ant-table-selection-column]': `nzShowCheckbox`\n  }\n})\nexport class NzTdAddOnComponent implements OnChanges {\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowCheckbox: BooleanInput;\n  static ngAcceptInputType_nzExpand: BooleanInput;\n\n  @Input() nzChecked = false;\n  @Input() nzDisabled = false;\n  @Input() nzIndeterminate = false;\n  @Input() nzIndentSize = 0;\n  @Input() @InputBoolean() nzShowExpand = false;\n  @Input() @InputBoolean() nzShowCheckbox = false;\n  @Input() @InputBoolean() nzExpand = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Output() readonly nzExpandChange = new EventEmitter<boolean>();\n  private isNzShowExpandChanged = false;\n  private isNzShowCheckboxChanged = false;\n\n  onCheckedChange(checked: boolean): void {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  onExpandChange(expand: boolean): void {\n    this.nzExpand = expand;\n    this.nzExpandChange.emit(expand);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    const { nzExpand, nzChecked, nzShowExpand, nzShowCheckbox } = changes;\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n    if (isFirstChange(nzExpand) && !this.isNzShowExpandChanged) {\n      this.nzShowExpand = true;\n    }\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableFilterFn, NzTableFilterList, NzTableFilterValue, NzTableSortFn, NzTableSortOrder } from '../table.types';\n\n@Component({\n  selector: 'th[nzColumnKey], th[nzSortFn], th[nzSortOrder], th[nzFilters], th[nzShowSort], th[nzShowFilter], th[nzCustomFilter]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nz-table-filter\n      *ngIf=\"nzShowFilter || nzCustomFilter; else notFilterTemplate\"\n      [contentTemplate]=\"notFilterTemplate\"\n      [extraTemplate]=\"extraTemplate\"\n      [customFilter]=\"nzCustomFilter\"\n      [filterMultiple]=\"nzFilterMultiple\"\n      [listOfFilter]=\"nzFilters\"\n      (filterChange)=\"onFilterValueChange($event)\"\n    ></nz-table-filter>\n    <ng-template #notFilterTemplate>\n      <ng-template [ngTemplateOutlet]=\"nzShowSort ? sortTemplate : contentTemplate\"></ng-template>\n    </ng-template>\n    <ng-template #extraTemplate>\n      <ng-content select=\"[nz-th-extra]\"></ng-content>\n      <ng-content select=\"nz-filter-trigger\"></ng-content>\n    </ng-template>\n    <ng-template #sortTemplate>\n      <nz-table-sorters [sortOrder]=\"sortOrder\" [sortDirections]=\"sortDirections\" [contentTemplate]=\"contentTemplate\"></nz-table-sorters>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-table-column-has-sorters]': 'nzShowSort',\n    '[class.ant-table-column-sort]': `sortOrder === 'descend' || sortOrder === 'ascend'`,\n    '(click)': 'emitNextSortValue()'\n  }\n})\nexport class NzThAddOnComponent implements OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_nzShowSort: BooleanInput;\n  static ngAcceptInputType_nzShowFilter: BooleanInput;\n  static ngAcceptInputType_nzCustomFilter: BooleanInput;\n\n  manualClickOrder$ = new Subject<NzThAddOnComponent>();\n  calcOperatorChange$ = new Subject();\n  nzFilterValue: NzTableFilterValue = null;\n  sortOrder: NzTableSortOrder = null;\n  sortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  private sortOrderChange$ = new Subject<NzTableSortOrder>();\n  private destroy$ = new Subject();\n  private isNzShowSortChanged = false;\n  private isNzShowFilterChanged = false;\n  @Input() nzColumnKey?: string;\n  @Input() nzFilterMultiple = true;\n  @Input() nzSortOrder: NzTableSortOrder = null;\n  @Input() nzSortPriority: number | boolean = false;\n  @Input() nzSortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  @Input() nzFilters: NzTableFilterList = [];\n  @Input() nzSortFn: NzTableSortFn | boolean | null = null;\n  @Input() nzFilterFn: NzTableFilterFn | boolean | null = null;\n  @Input() @InputBoolean() nzShowSort = false;\n  @Input() @InputBoolean() nzShowFilter = false;\n  @Input() @InputBoolean() nzCustomFilter = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Output() readonly nzSortOrderChange = new EventEmitter<string | null>();\n  @Output() readonly nzFilterChange = new EventEmitter<NzTableFilterValue>();\n\n  getNextSortDirection(sortDirections: NzTableSortOrder[], current: NzTableSortOrder): NzTableSortOrder {\n    const index = sortDirections.indexOf(current);\n    if (index === sortDirections.length - 1) {\n      return sortDirections[0];\n    } else {\n      return sortDirections[index + 1];\n    }\n  }\n\n  emitNextSortValue(): void {\n    if (this.nzShowSort) {\n      const nextOrder = this.getNextSortDirection(this.sortDirections, this.sortOrder!);\n      this.setSortOrder(nextOrder);\n      this.manualClickOrder$.next(this);\n    }\n  }\n\n  setSortOrder(order: NzTableSortOrder): void {\n    this.sortOrderChange$.next(order);\n  }\n\n  clearSortOrder(): void {\n    if (this.sortOrder !== null) {\n      this.setSortOrder(null);\n    }\n  }\n\n  onFilterValueChange(value: NzTableFilterValue): void {\n    this.nzFilterChange.emit(value);\n    this.nzFilterValue = value;\n    this.updateCalcOperator();\n  }\n\n  updateCalcOperator(): void {\n    this.calcOperatorChange$.next();\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.sortOrderChange$.pipe(takeUntil(this.destroy$)).subscribe(order => {\n      if (this.sortOrder !== order) {\n        this.sortOrder = order;\n        this.nzSortOrderChange.emit(order);\n      }\n      this.updateCalcOperator();\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const {\n      nzSortDirections,\n      nzFilters,\n      nzSortOrder,\n      nzSortFn,\n      nzFilterFn,\n      nzSortPriority,\n      nzFilterMultiple,\n      nzShowSort,\n      nzShowFilter\n    } = changes;\n    if (nzSortDirections) {\n      if (this.nzSortDirections && this.nzSortDirections.length) {\n        this.sortDirections = this.nzSortDirections;\n      }\n    }\n    if (nzSortOrder) {\n      this.sortOrder = this.nzSortOrder;\n      this.setSortOrder(this.nzSortOrder);\n    }\n    if (nzShowSort) {\n      this.isNzShowSortChanged = true;\n    }\n    if (nzShowFilter) {\n      this.isNzShowFilterChanged = true;\n    }\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    if ((isFirstChange(nzSortOrder) || isFirstChange(nzSortFn)) && !this.isNzShowSortChanged) {\n      this.nzShowSort = true;\n    }\n    if (isFirstChange(nzFilters) && !this.isNzShowFilterChanged) {\n      this.nzShowFilter = true;\n    }\n    if ((nzFilters || nzFilterMultiple) && this.nzShowFilter) {\n      const listOfValue = this.nzFilters.filter(item => item.byDefault).map(item => item.value);\n      this.nzFilterValue = this.nzFilterMultiple ? listOfValue : listOfValue[0] || null;\n    }\n    if (nzSortFn || nzFilterFn || nzSortPriority || nzFilters) {\n      this.updateCalcOperator();\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directive, ElementRef, Input, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\nimport { isNil } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: 'th'\n})\nexport class NzThMeasureDirective implements OnChanges {\n  changes$ = new Subject();\n  @Input() nzWidth: string | null = null;\n  @Input() colspan: string | number | null = null;\n  @Input() colSpan: string | number | null = null;\n  @Input() rowspan: string | number | null = null;\n  @Input() rowSpan: string | number | null = null;\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzWidth, colspan, rowspan, colSpan, rowSpan } = changes;\n    if (colspan || colSpan) {\n      const col = this.colspan || this.colSpan;\n      if (!isNil(col)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'colspan', `${col}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'colspan');\n      }\n    }\n    if (rowspan || rowSpan) {\n      const row = this.rowspan || this.rowSpan;\n      if (!isNil(row)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'rowspan', `${row}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'rowspan');\n      }\n    }\n    if (nzWidth || colspan) {\n      this.changes$.next();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'th[nzSelections],th[nzChecked],th[nzShowCheckbox],th[nzShowRowSelection]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nz-table-selection\n      [checked]=\"nzChecked\"\n      [disabled]=\"nzDisabled\"\n      [indeterminate]=\"nzIndeterminate\"\n      [listOfSelections]=\"nzSelections\"\n      [showCheckbox]=\"nzShowCheckbox\"\n      [showRowSelection]=\"nzShowRowSelection\"\n      (checkedChange)=\"onCheckedChange($event)\"\n    ></nz-table-selection>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-table-selection-column]': 'true'\n  }\n})\nexport class NzThSelectionComponent implements OnChanges {\n  static ngAcceptInputType_nzShowCheckbox: BooleanInput;\n  static ngAcceptInputType_nzShowRowSelection: BooleanInput;\n\n  @Input() nzSelections: Array<{ text: string; onSelect(...args: NzSafeAny[]): NzSafeAny }> = [];\n  @Input() nzChecked = false;\n  @Input() nzDisabled = false;\n  @Input() nzIndeterminate = false;\n  @Input() @InputBoolean() nzShowCheckbox = false;\n  @Input() @InputBoolean() nzShowRowSelection = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n\n  private isNzShowExpandChanged = false;\n  private isNzShowCheckboxChanged = false;\n\n  onCheckedChange(checked: boolean): void {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    const { nzChecked, nzSelections, nzShowExpand, nzShowCheckbox } = changes;\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n    if (isFirstChange(nzSelections) && !this.isNzShowExpandChanged) {\n      this.nzShowRowSelection = true;\n    }\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'th[nzAlign],td[nzAlign]',\n  host: {\n    '[style.text-align]': 'nzAlign'\n  }\n})\nexport class NzCellAlignDirective {\n  @Input() nzAlign: 'left' | 'right' | 'center' | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Directive({\n  selector: 'th[nzEllipsis],td[nzEllipsis]',\n  host: {\n    '[class.ant-table-cell-ellipsis]': 'nzEllipsis'\n  }\n})\nexport class NzCellEllipsisDirective {\n  static ngAcceptInputType_nzEllipsis: BooleanInput;\n\n  @Input() @InputBoolean() nzEllipsis = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Directive({\n  selector: 'th[nzBreakWord],td[nzBreakWord]',\n  host: {\n    '[style.word-break]': `nzBreakWord ? 'break-all' : ''`\n  }\n})\nexport class NzCellBreakWordDirective {\n  static ngAcceptInputType_nzBreakWord: BooleanInput;\n\n  @Input() @InputBoolean() nzBreakWord = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableLayout } from '../table.types';\n\n@Component({\n  selector: 'table[nz-table-content]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <col [style.width]=\"width\" [style.minWidth]=\"width\" *ngFor=\"let width of listOfColWidth\" />\n    <thead class=\"ant-table-thead\" *ngIf=\"theadTemplate\">\n      <ng-template [ngTemplateOutlet]=\"theadTemplate\"></ng-template>\n    </thead>\n    <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[style.table-layout]': 'tableLayout',\n    '[class.ant-table-fixed]': 'scrollX',\n    '[style.width]': 'scrollX',\n    '[style.min-width]': `scrollX ? '100%': null`\n  }\n})\nexport class NzTableContentComponent {\n  @Input() tableLayout: NzTableLayout = 'auto';\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() scrollX: string | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Component({\n  selector: 'tr[nz-table-fixed-row], tr[nzExpand]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <td class=\"nz-disable-td ant-table-cell\" #tdElement>\n      <div\n        class=\"ant-table-expanded-row-fixed\"\n        *ngIf=\"enableAutoMeasure$ | async; else contentTemplate\"\n        style=\"position: sticky; left: 0px; overflow: hidden;\"\n        [style.width.px]=\"hostWidth$ | async\"\n      >\n        <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      </div>\n    </td>\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\n  `\n})\nexport class NzTableFixedRowComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('tdElement') tdElement!: ElementRef;\n  hostWidth$ = new BehaviorSubject<number | null>(null);\n  enableAutoMeasure$ = new BehaviorSubject<boolean>(false);\n  private destroy$ = new Subject();\n  constructor(private nzTableStyleService: NzTableStyleService, private renderer: Renderer2) {}\n  ngOnInit(): void {\n    if (this.nzTableStyleService) {\n      const { enableAutoMeasure$, hostWidth$ } = this.nzTableStyleService;\n      enableAutoMeasure$.subscribe(this.enableAutoMeasure$);\n      hostWidth$.subscribe(this.hostWidth$);\n    }\n  }\n  ngAfterViewInit(): void {\n    this.nzTableStyleService.columnCount$.pipe(takeUntil(this.destroy$)).subscribe(count => {\n      this.renderer.setAttribute(this.tdElement.nativeElement, 'colspan', `${count}`);\n    });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableLayout } from '../table.types';\n\n@Component({\n  selector: 'nz-table-inner-default',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"ant-table-content\">\n      <table\n        nz-table-content\n        [contentTemplate]=\"contentTemplate\"\n        [tableLayout]=\"tableLayout\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n      ></table>\n    </div>\n  `,\n  host: {\n    '[class.ant-table-container]': 'true'\n  }\n})\nexport class NzTableInnerDefaultComponent {\n  @Input() tableLayout: NzTableLayout = 'auto';\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { delay, filter, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzTableData } from '../table.types';\n\n@Component({\n  selector: 'nz-table-inner-scroll',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"scrollY\">\n      <div #tableHeaderElement [ngStyle]=\"headerStyleMap\" class=\"ant-table-header nz-table-hide-scrollbar\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n        ></table>\n      </div>\n      <div #tableBodyElement *ngIf=\"!virtualTemplate\" class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n      <cdk-virtual-scroll-viewport\n        #tableBodyElement\n        *ngIf=\"virtualTemplate\"\n        [itemSize]=\"virtualItemSize\"\n        [maxBufferPx]=\"virtualMaxBufferPx\"\n        [minBufferPx]=\"virtualMinBufferPx\"\n        [style.height]=\"data.length ? scrollY : noDateVirtualHeight\"\n      >\n        <table nz-table-content tableLayout=\"fixed\" [scrollX]=\"scrollX\" [listOfColWidth]=\"listOfColWidth\">\n          <tbody>\n            <ng-container *cdkVirtualFor=\"let item of data; let i = index; trackBy: virtualForTrackBy\">\n              <ng-template [ngTemplateOutlet]=\"virtualTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item, index: i }\"></ng-template>\n            </ng-container>\n          </tbody>\n        </table>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"ant-table-content\" *ngIf=\"!scrollY\">\n      <div #tableBodyElement class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class.ant-table-container]': 'true'\n  }\n})\nexport class NzTableInnerScrollComponent implements OnChanges, AfterViewInit, OnDestroy {\n  @Input() data: NzTableData[] = [];\n  @Input() scrollX: string | null = null;\n  @Input() scrollY: string | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() widthConfig: string[] = [];\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() virtualTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() virtualItemSize = 0;\n  @Input() virtualMaxBufferPx = 200;\n  @Input() virtualMinBufferPx = 100;\n  @Input() tableMainElement?: HTMLDivElement;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n  @ViewChild('tableHeaderElement', { read: ElementRef }) tableHeaderElement!: ElementRef;\n  @ViewChild('tableBodyElement', { read: ElementRef }) tableBodyElement!: ElementRef;\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport })\n  cdkVirtualScrollViewport?: CdkVirtualScrollViewport;\n  headerStyleMap = {};\n  bodyStyleMap = {};\n  @Input() verticalScrollBarWidth = 0;\n  noDateVirtualHeight = '182px';\n  private data$ = new Subject<void>();\n  private scroll$ = new Subject<void>();\n  private destroy$ = new Subject<void>();\n\n  setScrollPositionClassName(clear: boolean = false): void {\n    const { scrollWidth, scrollLeft, clientWidth } = this.tableBodyElement.nativeElement;\n    const leftClassName = 'ant-table-ping-left';\n    const rightClassName = 'ant-table-ping-right';\n    if ((scrollWidth === clientWidth && scrollWidth !== 0) || clear) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n    } else if (scrollLeft === 0) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    } else if (scrollWidth === scrollLeft + clientWidth) {\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n    } else {\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    }\n  }\n\n  constructor(private renderer: Renderer2, private ngZone: NgZone, private platform: Platform, private resizeService: NzResizeService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { scrollX, scrollY, data } = changes;\n    if (scrollX || scrollY) {\n      const hasVerticalScrollBar = this.verticalScrollBarWidth !== 0;\n      this.headerStyleMap = {\n        overflowX: 'hidden',\n        overflowY: this.scrollY && hasVerticalScrollBar ? 'scroll' : 'hidden'\n      };\n      this.bodyStyleMap = {\n        overflowY: this.scrollY ? 'scroll' : 'hidden',\n        overflowX: this.scrollX ? 'auto' : null,\n        maxHeight: this.scrollY\n      };\n      this.scroll$.next();\n    }\n    if (data) {\n      this.data$.next();\n    }\n  }\n  ngAfterViewInit(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        const scrollEvent$ = this.scroll$.pipe(\n          startWith(null),\n          delay(0),\n          switchMap(() => fromEvent<MouseEvent>(this.tableBodyElement.nativeElement, 'scroll').pipe(startWith(true))),\n          takeUntil(this.destroy$)\n        );\n        const resize$ = this.resizeService.subscribe().pipe(takeUntil(this.destroy$));\n        const data$ = this.data$.pipe(takeUntil(this.destroy$));\n        const setClassName$ = merge(scrollEvent$, resize$, data$, this.scroll$).pipe(startWith(true), delay(0), takeUntil(this.destroy$));\n        setClassName$.subscribe(() => this.setScrollPositionClassName());\n        scrollEvent$\n          .pipe(filter(() => !!this.scrollY))\n          .subscribe(() => (this.tableHeaderElement.nativeElement.scrollLeft = this.tableBodyElement.nativeElement.scrollLeft));\n      });\n    }\n  }\n  ngOnDestroy(): void {\n    this.setScrollPositionClassName(true);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Directive({\n  selector: '[nz-virtual-scroll]',\n  exportAs: 'nzVirtualScroll'\n})\nexport class NzTableVirtualScrollDirective {\n  constructor(public templateRef: TemplateRef<{ $implicit: NzSafeAny; index: number }>) {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, skip, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzTableData, NzTableFilterFn, NzTableFilterValue, NzTableQueryParams, NzTableSortFn, NzTableSortOrder } from './table.types';\n\n@Injectable()\nexport class NzTableDataService implements OnDestroy {\n  private destroy$ = new Subject();\n  private pageIndex$ = new BehaviorSubject<number>(1);\n  private frontPagination$ = new BehaviorSubject<boolean>(true);\n  private pageSize$ = new BehaviorSubject<number>(10);\n  private listOfData$ = new BehaviorSubject<NzTableData[]>([]);\n  pageIndexDistinct$ = this.pageIndex$.pipe(distinctUntilChanged());\n  pageSizeDistinct$ = this.pageSize$.pipe(distinctUntilChanged());\n  listOfCalcOperator$ = new BehaviorSubject<\n    Array<{\n      key?: string;\n      sortFn: NzTableSortFn | null | boolean;\n      sortOrder: NzTableSortOrder;\n      filterFn: NzTableFilterFn | null | boolean;\n      filterValue: NzTableFilterValue;\n      sortPriority: number | boolean;\n    }>\n  >([]);\n  queryParams$: Observable<NzTableQueryParams> = combineLatest([\n    this.pageIndexDistinct$,\n    this.pageSizeDistinct$,\n    this.listOfCalcOperator$\n  ]).pipe(\n    debounceTime(0),\n    skip(1),\n    map(([pageIndex, pageSize, listOfCalc]) => {\n      return {\n        pageIndex,\n        pageSize,\n        sort: listOfCalc\n          .filter(item => item.sortFn)\n          .map(item => {\n            return {\n              key: item.key!,\n              value: item.sortOrder\n            };\n          }),\n        filter: listOfCalc\n          .filter(item => item.filterFn)\n          .map(item => {\n            return {\n              key: item.key!,\n              value: item.filterValue\n            };\n          })\n      };\n    })\n  );\n  private listOfDataAfterCalc$ = combineLatest([this.listOfData$, this.listOfCalcOperator$]).pipe(\n    map(([listOfData, listOfCalcOperator]) => {\n      let listOfDataAfterCalc = [...listOfData];\n      const listOfFilterOperator = listOfCalcOperator.filter(item => {\n        const { filterValue, filterFn } = item;\n        const isReset = filterValue === null || filterValue === undefined || (Array.isArray(filterValue) && filterValue!.length === 0);\n        return !isReset && typeof filterFn === 'function';\n      });\n      for (const item of listOfFilterOperator) {\n        const { filterFn, filterValue } = item;\n        listOfDataAfterCalc = listOfDataAfterCalc.filter(data => (filterFn as NzTableFilterFn)(filterValue, data));\n      }\n      const listOfSortOperator = listOfCalcOperator\n        .filter(item => item.sortOrder !== null && typeof item.sortFn === 'function')\n        .sort((a, b) => +b.sortPriority - +a.sortPriority);\n      if (listOfCalcOperator.length) {\n        listOfDataAfterCalc.sort((record1, record2) => {\n          for (const item of listOfSortOperator) {\n            const { sortFn, sortOrder } = item;\n            if (sortFn && sortOrder) {\n              const compareResult = (sortFn as NzTableSortFn)(record1, record2, sortOrder);\n              if (compareResult !== 0) {\n                return sortOrder === 'ascend' ? compareResult : -compareResult;\n              }\n            }\n          }\n          return 0;\n        });\n      }\n      return listOfDataAfterCalc;\n    })\n  );\n  private listOfFrontEndCurrentPageData$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfDataAfterCalc$]).pipe(\n    takeUntil(this.destroy$),\n    filter(value => {\n      const [pageIndex, pageSize, listOfData] = value;\n      const maxPageIndex = Math.ceil(listOfData.length / pageSize) || 1;\n      return pageIndex <= maxPageIndex;\n    }),\n    map(([pageIndex, pageSize, listOfData]) => {\n      return listOfData.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\n    })\n  );\n  listOfCurrentPageData$ = this.frontPagination$.pipe(\n    switchMap(pagination => (pagination ? this.listOfFrontEndCurrentPageData$ : this.listOfData$))\n  );\n  total$ = this.frontPagination$.pipe(\n    switchMap(pagination => (pagination ? this.listOfDataAfterCalc$ : this.listOfData$)),\n    map(list => list.length),\n    distinctUntilChanged()\n  );\n\n  updatePageSize(size: number): void {\n    this.pageSize$.next(size);\n  }\n  updateFrontPagination(pagination: boolean): void {\n    this.frontPagination$.next(pagination);\n  }\n  updatePageIndex(index: number): void {\n    this.pageIndex$.next(index);\n  }\n  updateListOfData(list: NzTableData[]): void {\n    this.listOfData$.next(list);\n  }\n  constructor() {}\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, measureScrollbar } from 'ng-zorro-antd/core/util';\nimport { PaginationItemRenderContext } from 'ng-zorro-antd/pagination';\nimport { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\nimport { NzTableDataService } from '../table-data.service';\nimport { NzTableStyleService } from '../table-style.service';\nimport { NzTableData, NzTableLayout, NzTablePaginationPosition, NzTableQueryParams, NzTableSize } from '../table.types';\nimport { NzTableInnerScrollComponent } from './table-inner-scroll.component';\nimport { NzTableVirtualScrollDirective } from './table-virtual-scroll.directive';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'table';\n\n@Component({\n  selector: 'nz-table',\n  exportAs: 'nzTable',\n  providers: [NzTableStyleService, NzTableDataService],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <nz-spin [nzDelay]=\"nzLoadingDelay\" [nzSpinning]=\"nzLoading\" [nzIndicator]=\"nzLoadingIndicator\">\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'top'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n      <div\n        #tableMainElement\n        class=\"ant-table\"\n        [class.ant-table-fixed-header]=\"nzData.length && scrollY\"\n        [class.ant-table-fixed-column]=\"scrollX\"\n        [class.ant-table-has-fix-left]=\"hasFixLeft\"\n        [class.ant-table-has-fix-right]=\"hasFixRight\"\n        [class.ant-table-bordered]=\"nzBordered\"\n        [class.nz-table-out-bordered]=\"nzOuterBordered && !nzBordered\"\n        [class.ant-table-middle]=\"nzSize === 'middle'\"\n        [class.ant-table-small]=\"nzSize === 'small'\"\n      >\n        <nz-table-title-footer [title]=\"nzTitle\" *ngIf=\"nzTitle\"></nz-table-title-footer>\n        <nz-table-inner-scroll\n          *ngIf=\"scrollY || scrollX; else defaultTemplate\"\n          [data]=\"data\"\n          [scrollX]=\"scrollX\"\n          [scrollY]=\"scrollY\"\n          [contentTemplate]=\"contentTemplate\"\n          [listOfColWidth]=\"listOfAutoColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [verticalScrollBarWidth]=\"verticalScrollBarWidth\"\n          [virtualTemplate]=\"nzVirtualScrollDirective ? nzVirtualScrollDirective.templateRef : null\"\n          [virtualItemSize]=\"nzVirtualItemSize\"\n          [virtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [virtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [tableMainElement]=\"tableMainElement\"\n          [virtualForTrackBy]=\"nzVirtualForTrackBy\"\n        ></nz-table-inner-scroll>\n        <ng-template #defaultTemplate>\n          <nz-table-inner-default\n            [tableLayout]=\"nzTableLayout\"\n            [listOfColWidth]=\"listOfManualColWidth\"\n            [theadTemplate]=\"theadTemplate\"\n            [contentTemplate]=\"contentTemplate\"\n          ></nz-table-inner-default>\n        </ng-template>\n        <nz-table-title-footer [footer]=\"nzFooter\" *ngIf=\"nzFooter\"></nz-table-title-footer>\n      </div>\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'bottom'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n    </nz-spin>\n    <ng-template #paginationTemplate>\n      <nz-pagination\n        *ngIf=\"nzShowPagination && data.length\"\n        class=\"ant-table-pagination ant-table-pagination-right\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n        [nzPageSizeOptions]=\"nzPageSizeOptions\"\n        [nzItemRender]=\"nzItemRender!\"\n        [nzShowQuickJumper]=\"nzShowQuickJumper\"\n        [nzHideOnSinglePage]=\"nzHideOnSinglePage\"\n        [nzShowTotal]=\"nzShowTotal\"\n        [nzSize]=\"nzSize === 'default' ? 'default' : 'small'\"\n        [nzPageSize]=\"nzPageSize\"\n        [nzTotal]=\"nzTotal\"\n        [nzSimple]=\"nzSimple\"\n        [nzPageIndex]=\"nzPageIndex\"\n        (nzPageSizeChange)=\"onPageSizeChange($event)\"\n        (nzPageIndexChange)=\"onPageIndexChange($event)\"\n      ></nz-pagination>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-table-wrapper]': 'true'\n  }\n})\nexport class NzTableComponent<T = NzSafeAny> implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzFrontPagination: BooleanInput;\n  static ngAcceptInputType_nzTemplateMode: BooleanInput;\n  static ngAcceptInputType_nzShowPagination: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzOuterBordered: BooleanInput;\n  static ngAcceptInputType_nzShowSizeChanger: BooleanInput;\n  static ngAcceptInputType_nzHideOnSinglePage: BooleanInput;\n  static ngAcceptInputType_nzShowQuickJumper: BooleanInput;\n  static ngAcceptInputType_nzSimple: BooleanInput;\n\n  @Input() nzTableLayout: NzTableLayout = 'auto';\n  @Input() nzShowTotal: TemplateRef<{ $implicit: number; range: [number, number] }> | null = null;\n  @Input() nzItemRender: TemplateRef<PaginationItemRenderContext> | null = null;\n  @Input() nzTitle: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() nzFooter: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() nzNoResult: string | TemplateRef<NzSafeAny> | undefined = undefined;\n  @Input() nzPageSizeOptions = [10, 20, 30, 40, 50];\n  @Input() nzVirtualItemSize = 0;\n  @Input() nzVirtualMaxBufferPx = 200;\n  @Input() nzVirtualMinBufferPx = 100;\n  @Input() nzVirtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n  @Input() nzLoadingDelay = 0;\n  @Input() nzPageIndex = 1;\n  @Input() nzPageSize = 10;\n  @Input() nzTotal = 0;\n  @Input() nzWidthConfig: Array<string | null> = [];\n  @Input() nzData: T[] = [];\n  @Input() nzPaginationPosition: NzTablePaginationPosition = 'bottom';\n  @Input() nzScroll: { x?: string | null; y?: string | null } = { x: null, y: null };\n  @Input() @InputBoolean() nzFrontPagination = true;\n  @Input() @InputBoolean() nzTemplateMode = false;\n  @Input() @InputBoolean() nzShowPagination = true;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzOuterBordered = false;\n  @Input() @WithConfig() nzLoadingIndicator: TemplateRef<NzSafeAny> | null = null;\n  @Input() @WithConfig() @InputBoolean() nzBordered: boolean = false;\n  @Input() @WithConfig() nzSize: NzTableSize = 'default';\n  @Input() @WithConfig() @InputBoolean() nzShowSizeChanger: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzHideOnSinglePage: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzShowQuickJumper: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzSimple: boolean = false;\n  @Output() readonly nzPageSizeChange = new EventEmitter<number>();\n  @Output() readonly nzPageIndexChange = new EventEmitter<number>();\n  @Output() readonly nzQueryParams = new EventEmitter<NzTableQueryParams>();\n  @Output() readonly nzCurrentPageDataChange = new EventEmitter<NzTableData[]>();\n\n  /** public data for ngFor tr */\n  public data: T[] = [];\n  public cdkVirtualScrollViewport?: CdkVirtualScrollViewport;\n  scrollX: string | null = null;\n  scrollY: string | null = null;\n  theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  listOfAutoColWidth: Array<string | null> = [];\n  listOfManualColWidth: Array<string | null> = [];\n  hasFixLeft = false;\n  hasFixRight = false;\n  private destroy$ = new Subject<void>();\n  private loading$ = new BehaviorSubject<boolean>(false);\n  private templateMode$ = new BehaviorSubject<boolean>(false);\n  @ContentChild(NzTableVirtualScrollDirective, { static: false })\n  nzVirtualScrollDirective!: NzTableVirtualScrollDirective;\n  @ViewChild(NzTableInnerScrollComponent) nzTableInnerScrollComponent!: NzTableInnerScrollComponent;\n  verticalScrollBarWidth = 0;\n  onPageSizeChange(size: number): void {\n    this.nzTableDataService.updatePageSize(size);\n  }\n\n  onPageIndexChange(index: number): void {\n    this.nzTableDataService.updatePageIndex(index);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private nzResizeObserver: NzResizeObserver,\n    private nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    private nzTableStyleService: NzTableStyleService,\n    private nzTableDataService: NzTableDataService\n  ) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    const { pageIndexDistinct$, pageSizeDistinct$, listOfCurrentPageData$, total$, queryParams$ } = this.nzTableDataService;\n    const { theadTemplate$, hasFixLeft$, hasFixRight$ } = this.nzTableStyleService;\n    queryParams$.pipe(takeUntil(this.destroy$)).subscribe(this.nzQueryParams);\n    pageIndexDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageIndex => {\n      if (pageIndex !== this.nzPageIndex) {\n        this.nzPageIndex = pageIndex;\n        this.nzPageIndexChange.next(pageIndex);\n      }\n    });\n    pageSizeDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageSize => {\n      if (pageSize !== this.nzPageSize) {\n        this.nzPageSize = pageSize;\n        this.nzPageSizeChange.next(pageSize);\n      }\n    });\n    total$\n      .pipe(\n        takeUntil(this.destroy$),\n        filter(() => this.nzFrontPagination)\n      )\n      .subscribe(total => {\n        if (total !== this.nzTotal) {\n          this.nzTotal = total;\n          this.cdr.markForCheck();\n        }\n      });\n    listOfCurrentPageData$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.data = data;\n      this.nzCurrentPageDataChange.next(data);\n      this.cdr.markForCheck();\n    });\n\n    theadTemplate$.pipe(takeUntil(this.destroy$)).subscribe(theadTemplate => {\n      this.theadTemplate = theadTemplate;\n      this.cdr.markForCheck();\n    });\n\n    hasFixLeft$.pipe(takeUntil(this.destroy$)).subscribe(hasFixLeft => {\n      this.hasFixLeft = hasFixLeft;\n      this.cdr.markForCheck();\n    });\n\n    hasFixRight$.pipe(takeUntil(this.destroy$)).subscribe(hasFixRight => {\n      this.hasFixRight = hasFixRight;\n      this.cdr.markForCheck();\n    });\n\n    combineLatest([total$, this.loading$, this.templateMode$])\n      .pipe(\n        map(([total, loading, templateMode]) => total === 0 && !loading && !templateMode),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(empty => {\n        this.nzTableStyleService.setShowEmpty(empty);\n      });\n\n    this.verticalScrollBarWidth = measureScrollbar('vertical');\n    this.nzTableStyleService.listOfListOfThWidthPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfAutoColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n    this.nzTableStyleService.manualWidthConfigPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfManualColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzScroll, nzPageIndex, nzPageSize, nzFrontPagination, nzData, nzWidthConfig, nzNoResult, nzLoading, nzTemplateMode } = changes;\n    if (nzPageIndex) {\n      this.nzTableDataService.updatePageIndex(this.nzPageIndex);\n    }\n    if (nzPageSize) {\n      this.nzTableDataService.updatePageSize(this.nzPageSize);\n    }\n    if (nzData) {\n      this.nzData = this.nzData || [];\n      this.nzTableDataService.updateListOfData(this.nzData);\n    }\n    if (nzFrontPagination) {\n      this.nzTableDataService.updateFrontPagination(this.nzFrontPagination);\n    }\n    if (nzScroll) {\n      this.scrollX = (this.nzScroll && this.nzScroll.x) || null;\n      this.scrollY = (this.nzScroll && this.nzScroll.y) || null;\n      this.nzTableStyleService.setScroll(this.scrollX, this.scrollY);\n    }\n    if (nzWidthConfig) {\n      this.nzTableStyleService.setTableWidthConfig(this.nzWidthConfig);\n    }\n    if (nzLoading) {\n      this.loading$.next(this.nzLoading);\n    }\n    if (nzTemplateMode) {\n      this.templateMode$.next(this.nzTemplateMode);\n    }\n    if (nzNoResult) {\n      this.nzTableStyleService.setNoResult(this.nzNoResult);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.nzResizeObserver\n      .observe(this.elementRef)\n      .pipe(\n        map(([entry]) => {\n          const { width } = entry.target.getBoundingClientRect();\n          const scrollBarWidth = this.scrollY ? this.verticalScrollBarWidth : 0;\n          return Math.floor(width - scrollBarWidth);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(this.nzTableStyleService.hostWidth$);\n    if (this.nzTableInnerScrollComponent && this.nzTableInnerScrollComponent.cdkVirtualScrollViewport) {\n      this.cdkVirtualScrollViewport = this.nzTableInnerScrollComponent.cdkVirtualScrollViewport;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport { ChangeDetectionStrategy, Component, Optional, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject } from 'rxjs';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Component({\n  selector: 'tbody',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"listOfMeasureColumn$ | async as listOfMeasureColumn\">\n      <tr\n        nz-table-measure-row\n        *ngIf=\"isInsideTable && listOfMeasureColumn.length\"\n        [listOfMeasureColumn]=\"listOfMeasureColumn\"\n        (listOfAutoWidth)=\"onListOfAutoWidthChange($event)\"\n      ></tr>\n    </ng-container>\n    <ng-content></ng-content>\n    <tr class=\"ant-table-placeholder\" nz-table-fixed-row *ngIf=\"showEmpty$ | async\">\n      <nz-embed-empty nzComponentName=\"table\" [specificContent]=\"(noResult$ | async)!\"></nz-embed-empty>\n    </tr>\n  `,\n  host: {\n    '[class.ant-table-tbody]': 'isInsideTable'\n  }\n})\nexport class NzTbodyComponent {\n  isInsideTable = false;\n  showEmpty$ = new BehaviorSubject<boolean>(false);\n  noResult$ = new BehaviorSubject<string | TemplateRef<NzSafeAny> | undefined>(undefined);\n  listOfMeasureColumn$ = new BehaviorSubject<string[]>([]);\n\n  constructor(@Optional() private nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!this.nzTableStyleService;\n    if (this.nzTableStyleService) {\n      const { showEmpty$, noResult$, listOfMeasureColumn$ } = this.nzTableStyleService;\n      noResult$.subscribe(this.noResult$);\n      listOfMeasureColumn$.subscribe(this.listOfMeasureColumn$);\n      showEmpty$.subscribe(this.showEmpty$);\n    }\n  }\n\n  onListOfAutoWidthChange(listOfAutoWidth: number[]): void {\n    this.nzTableStyleService.setListOfAutoWidth(listOfAutoWidth);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { combineLatest, merge, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { flatMap, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzCellFixedDirective } from '../cell/cell-fixed.directive';\nimport { NzThMeasureDirective } from '../cell/th-measure.directive';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Directive({\n  selector: 'tr:not([mat-row]):not([mat-header-row]):not([nz-table-measure-row]):not([nzExpand]):not([nz-table-fixed-row])',\n  host: {\n    '[class.ant-table-row]': 'isInsideTable'\n  }\n})\nexport class NzTrDirective implements AfterContentInit, OnDestroy {\n  @ContentChildren(NzThMeasureDirective) listOfNzThDirective!: QueryList<NzThMeasureDirective>;\n  @ContentChildren(NzCellFixedDirective) listOfCellFixedDirective!: QueryList<NzCellFixedDirective>;\n  private destroy$ = new Subject<void>();\n  private listOfFixedColumns$ = new ReplaySubject<NzCellFixedDirective[]>(1);\n  private listOfColumns$ = new ReplaySubject<NzThMeasureDirective[]>(1);\n  listOfFixedColumnsChanges$: Observable<NzCellFixedDirective[]> = this.listOfFixedColumns$.pipe(\n    switchMap(list =>\n      merge(...[this.listOfFixedColumns$, ...list.map((c: NzCellFixedDirective) => c.changes$)]).pipe(\n        flatMap(() => this.listOfFixedColumns$)\n      )\n    ),\n    takeUntil(this.destroy$)\n  );\n  listOfFixedLeftColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzLeft !== false)));\n  listOfFixedRightColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzRight !== false)));\n  listOfColumnsChanges$: Observable<NzThMeasureDirective[]> = this.listOfColumns$.pipe(\n    switchMap(list =>\n      merge(...[this.listOfColumns$, ...list.map((c: NzThMeasureDirective) => c.changes$)]).pipe(flatMap(() => this.listOfColumns$))\n    ),\n    takeUntil(this.destroy$)\n  );\n  isInsideTable = false;\n\n  constructor(@Optional() private nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!nzTableStyleService;\n  }\n\n  ngAfterContentInit(): void {\n    if (this.nzTableStyleService) {\n      this.listOfCellFixedDirective.changes\n        .pipe(startWith(this.listOfCellFixedDirective), takeUntil(this.destroy$))\n        .subscribe(this.listOfFixedColumns$);\n      this.listOfNzThDirective.changes.pipe(startWith(this.listOfNzThDirective), takeUntil(this.destroy$)).subscribe(this.listOfColumns$);\n      /** set last left and first right **/\n      this.listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeft => {\n        listOfFixedLeft.forEach(cell => cell.setIsLastLeft(cell === listOfFixedLeft[listOfFixedLeft.length - 1]));\n      });\n      this.listOfFixedRightColumnChanges$.subscribe(listOfFixedRight => {\n        listOfFixedRight.forEach(cell => cell.setIsFirstRight(cell === listOfFixedRight[0]));\n      });\n      /** calculate fixed nzLeft and nzRight **/\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedLeftColumnChanges$]).subscribe(\n        ([listOfAutoWidth, listOfLeftCell]) => {\n          listOfLeftCell.forEach((cell, index) => {\n            if (cell.isAutoLeft) {\n              const currentArray = listOfLeftCell.slice(0, index);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth.slice(0, count).reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoLeftWidth(`${width}px`);\n            }\n          });\n        }\n      );\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedRightColumnChanges$]).subscribe(\n        ([listOfAutoWidth, listOfRightCell]) => {\n          listOfRightCell.forEach((_, index) => {\n            const cell = listOfRightCell[listOfRightCell.length - index - 1];\n            if (cell.isAutoRight) {\n              const currentArray = listOfRightCell.slice(listOfRightCell.length - index, listOfRightCell.length);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth\n                .slice(listOfAutoWidth.length - count, listOfAutoWidth.length)\n                .reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoRightWidth(`${width}px`);\n            }\n          });\n        }\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { EMPTY, merge, Observable, of, Subject } from 'rxjs';\nimport { delay, map, mergeMap, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzThAddOnComponent } from '../cell/th-addon.component';\nimport { NzTableDataService } from '../table-data.service';\nimport { NzTableStyleService } from '../table-style.service';\nimport { NzTrDirective } from './tr.directive';\n\n@Component({\n  selector: 'thead:not(.ant-table-thead)',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n    <ng-container *ngIf=\"!isInsideTable\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </ng-container>\n  `\n})\nexport class NzTheadComponent implements AfterContentInit, OnDestroy, AfterViewInit, OnInit {\n  private destroy$ = new Subject<void>();\n  isInsideTable = false;\n  @ViewChild('contentTemplate', { static: true }) templateRef!: TemplateRef<NzSafeAny>;\n  @ContentChildren(NzTrDirective, { descendants: true }) listOfNzTrDirective!: QueryList<NzTrDirective>;\n  @ContentChildren(NzThAddOnComponent, { descendants: true }) listOfNzThAddOnComponent!: QueryList<NzThAddOnComponent>;\n  @Output() readonly nzSortOrderChange = new EventEmitter<{ key: NzSafeAny; value: string | null }>();\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Optional() private nzTableStyleService: NzTableStyleService,\n    @Optional() private nzTableDataService: NzTableDataService\n  ) {\n    this.isInsideTable = !!this.nzTableStyleService;\n  }\n\n  ngOnInit(): void {\n    if (this.nzTableStyleService) {\n      this.nzTableStyleService.setTheadTemplate(this.templateRef);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (this.nzTableStyleService) {\n      const firstTableRow$ = this.listOfNzTrDirective.changes.pipe(\n        startWith(this.listOfNzTrDirective),\n        map(item => item && item.first)\n      ) as Observable<NzTrDirective>;\n      const listOfColumnsChanges$ = firstTableRow$.pipe(\n        switchMap(firstTableRow => (firstTableRow ? firstTableRow.listOfColumnsChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      listOfColumnsChanges$.subscribe(data => this.nzTableStyleService.setListOfTh(data));\n      /** TODO: need reset the measure row when scrollX change **/\n      this.nzTableStyleService.enableAutoMeasure$\n        .pipe(switchMap(enable => (enable ? listOfColumnsChanges$ : of([]))))\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(data => this.nzTableStyleService.setListOfMeasureColumn(data));\n      const listOfFixedLeftColumnChanges$ = firstTableRow$.pipe(\n        switchMap(firstTr => (firstTr ? firstTr.listOfFixedLeftColumnChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      const listOfFixedRightColumnChanges$ = firstTableRow$.pipe(\n        switchMap(firstTr => (firstTr ? firstTr.listOfFixedRightColumnChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeftColumn => {\n        this.nzTableStyleService.setHasFixLeft(listOfFixedLeftColumn.length !== 0);\n      });\n      listOfFixedRightColumnChanges$.subscribe(listOfFixedRightColumn => {\n        this.nzTableStyleService.setHasFixRight(listOfFixedRightColumn.length !== 0);\n      });\n    }\n    if (this.nzTableDataService) {\n      const listOfColumn$ = this.listOfNzThAddOnComponent.changes.pipe(startWith(this.listOfNzThAddOnComponent)) as Observable<\n        QueryList<NzThAddOnComponent>\n      >;\n      const manualSort$ = listOfColumn$.pipe(\n        switchMap(() => merge(...this.listOfNzThAddOnComponent.map(th => th.manualClickOrder$))),\n        takeUntil(this.destroy$)\n      );\n      manualSort$.subscribe((data: NzThAddOnComponent) => {\n        const emitValue = { key: data.nzColumnKey, value: data.sortOrder };\n        this.nzSortOrderChange.emit(emitValue);\n        if (data.nzSortFn && data.nzSortPriority === false) {\n          this.listOfNzThAddOnComponent.filter(th => th !== data).forEach(th => th.clearSortOrder());\n        }\n      });\n      const listOfCalcOperator$ = listOfColumn$.pipe(\n        switchMap(list =>\n          merge(...[listOfColumn$, ...list.map((c: NzThAddOnComponent) => c.calcOperatorChange$)]).pipe(mergeMap(() => listOfColumn$))\n        ),\n        map(list =>\n          list\n            .filter(item => !!item.nzSortFn || !!item.nzFilterFn)\n            .map(item => {\n              const { nzSortFn, sortOrder, nzFilterFn, nzFilterValue, nzSortPriority, nzColumnKey } = item;\n              return {\n                key: nzColumnKey,\n                sortFn: nzSortFn,\n                sortPriority: nzSortPriority,\n                sortOrder: sortOrder!,\n                filterFn: nzFilterFn!,\n                filterValue: nzFilterValue\n              };\n            })\n        ),\n        // TODO: after checked error here\n        delay(0)\n      );\n      listOfCalcOperator$.subscribe(list => {\n        this.nzTableDataService.listOfCalcOperator$.next(list);\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzTableStyleService) {\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-table-title-footer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\n    <ng-container *nzStringTemplateOutlet=\"footer\">{{ footer }}</ng-container>\n  `,\n  host: {\n    '[class.ant-table-title]': `title !== null`,\n    '[class.ant-table-footer]': `footer !== null`\n  }\n})\nexport class NzTableTitleFooterComponent {\n  @Input() title: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() footer: string | TemplateRef<NzSafeAny> | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'tr[nzExpand]',\n  host: {\n    '[class.ant-table-expanded-row]': 'true',\n    '[hidden]': `!nzExpand`\n  }\n})\nexport class NzTrExpandDirective {\n  @Input() nzExpand = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'tr[nz-table-measure-row]',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <td\n      #tdElement\n      class=\"nz-disable-td\"\n      style=\"padding: 0px; border: 0px; height: 0px;\"\n      *ngFor=\"let th of listOfMeasureColumn; trackBy: trackByFunc\"\n    ></td>\n  `,\n  host: {\n    '[class.ant-table-measure-now]': 'true'\n  }\n})\nexport class NzTrMeasureComponent implements AfterViewInit, OnDestroy {\n  @Input() listOfMeasureColumn: string[] = [];\n  @Output() readonly listOfAutoWidth = new EventEmitter<number[]>();\n  @ViewChildren('tdElement') listOfTdElement!: QueryList<ElementRef>;\n  private destroy$ = new Subject();\n  constructor(private nzResizeObserver: NzResizeObserver, private ngZone: NgZone) {}\n  trackByFunc(_: number, key: string): string {\n    return key;\n  }\n  ngAfterViewInit(): void {\n    this.listOfTdElement.changes\n      .pipe(startWith(this.listOfTdElement))\n      .pipe(\n        switchMap(list => {\n          return combineLatest(\n            list.toArray().map((item: ElementRef) => {\n              return this.nzResizeObserver.observe(item).pipe(\n                map(([entry]) => {\n                  const { width } = entry.target.getBoundingClientRect();\n                  return Math.floor(width);\n                })\n              );\n            })\n          ) as Observable<number[]>;\n        }),\n        debounceTime(16),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(data => {\n        this.ngZone.run(() => {\n          this.listOfAutoWidth.next(data);\n        });\n      });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzResizeObserversModule } from 'ng-zorro-antd/core/resize-observers';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { NzFilterTriggerComponent } from './addon/filter-trigger.component';\nimport { NzTableFilterComponent } from './addon/filter.component';\nimport { NzRowExpandButtonDirective } from './addon/row-expand-button.directive';\nimport { NzRowIndentDirective } from './addon/row-indent.directive';\nimport { NzTableSelectionComponent } from './addon/selection.component';\nimport { NzTableSortersComponent } from './addon/sorters.component';\nimport { NzCellFixedDirective } from './cell/cell-fixed.directive';\nimport { NzTableCellDirective } from './cell/cell.directive';\nimport { NzTdAddOnComponent } from './cell/td-addon.component';\nimport { NzThAddOnComponent } from './cell/th-addon.component';\nimport { NzThMeasureDirective } from './cell/th-measure.directive';\nimport { NzThSelectionComponent } from './cell/th-selection.component';\nimport { NzCellAlignDirective } from './styled/align.directive';\nimport { NzCellEllipsisDirective } from './styled/ellipsis.directive';\nimport { NzCellBreakWordDirective } from './styled/word-break.directive';\nimport { NzTableContentComponent } from './table/table-content.component';\nimport { NzTableFixedRowComponent } from './table/table-fixed-row.component';\nimport { NzTableInnerDefaultComponent } from './table/table-inner-default.component';\nimport { NzTableInnerScrollComponent } from './table/table-inner-scroll.component';\nimport { NzTableVirtualScrollDirective } from './table/table-virtual-scroll.directive';\nimport { NzTableComponent } from './table/table.component';\nimport { NzTbodyComponent } from './table/tbody.component';\nimport { NzTheadComponent } from './table/thead.component';\nimport { NzTableTitleFooterComponent } from './table/title-footer.component';\nimport { NzTrExpandDirective } from './table/tr-expand.directive';\nimport { NzTrMeasureComponent } from './table/tr-measure.component';\nimport { NzTrDirective } from './table/tr.directive';\n\n@NgModule({\n  declarations: [\n    NzTableComponent,\n    NzThAddOnComponent,\n    NzTableCellDirective,\n    NzThMeasureDirective,\n    NzTdAddOnComponent,\n    NzTheadComponent,\n    NzTbodyComponent,\n    NzTrDirective,\n    NzTrExpandDirective,\n    NzTableVirtualScrollDirective,\n    NzCellFixedDirective,\n    NzTableContentComponent,\n    NzTableTitleFooterComponent,\n    NzTableInnerDefaultComponent,\n    NzTableInnerScrollComponent,\n    NzTrMeasureComponent,\n    NzRowIndentDirective,\n    NzRowExpandButtonDirective,\n    NzCellBreakWordDirective,\n    NzCellAlignDirective,\n    NzTableSortersComponent,\n    NzTableFilterComponent,\n    NzTableSelectionComponent,\n    NzCellEllipsisDirective,\n    NzFilterTriggerComponent,\n    NzTableFixedRowComponent,\n    NzThSelectionComponent\n  ],\n  exports: [\n    NzTableComponent,\n    NzThAddOnComponent,\n    NzTableCellDirective,\n    NzThMeasureDirective,\n    NzTdAddOnComponent,\n    NzTheadComponent,\n    NzTbodyComponent,\n    NzTrDirective,\n    NzTableVirtualScrollDirective,\n    NzCellFixedDirective,\n    NzFilterTriggerComponent,\n    NzTrExpandDirective,\n    NzCellBreakWordDirective,\n    NzCellAlignDirective,\n    NzCellEllipsisDirective,\n    NzTableFixedRowComponent,\n    NzThSelectionComponent\n  ],\n  imports: [\n    NzMenuModule,\n    FormsModule,\n    NzOutletModule,\n    NzRadioModule,\n    NzCheckboxModule,\n    NzDropDownModule,\n    NzButtonModule,\n    CommonModule,\n    PlatformModule,\n    NzPaginationModule,\n    NzResizeObserversModule,\n    NzSpinModule,\n    NzI18nModule,\n    NzIconModule,\n    NzEmptyModule,\n    ScrollingModule\n  ]\n})\nexport class NzTableModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport type NzTableData =\n  | NzSafeAny\n  | {\n      [key: string]: NzTableData;\n    };\nexport type NzTableLayout = 'fixed' | 'auto';\nexport type NzTablePaginationPosition = 'top' | 'bottom' | 'both';\nexport type NzTableSize = 'middle' | 'default' | 'small';\nexport type NzTableFilterList = Array<{ text: string; value: NzSafeAny; byDefault?: boolean }>;\nexport type NzTableSortOrder = string | 'ascend' | 'descend' | null;\nexport type NzTableSortFn = (a: NzTableData, b: NzTableData, sortOrder?: NzTableSortOrder) => number;\nexport type NzTableFilterValue = NzSafeAny[] | NzSafeAny;\nexport type NzTableFilterFn = (value: NzTableFilterValue, data: NzTableData) => boolean;\n\nexport interface NzTableQueryParams {\n  pageIndex: number;\n  pageSize: number;\n  sort: Array<{ key: string; value: NzTableSortOrder }>;\n  filter: Array<{ key: string; value: NzTableFilterValue }>;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './src/table.module';\nexport * from './src/table.types';\nexport * from './src/table-data.service';\nexport * from './src/table-style.service';\nexport * from './src/table/table.component';\nexport * from './src/table/table-content.component';\nexport * from './src/table/table-fixed-row.component';\nexport * from './src/table/table-inner-default.component';\nexport * from './src/table/table-inner-scroll.component';\nexport * from './src/table/table-virtual-scroll.directive';\nexport * from './src/table/table-fixed-row.component';\nexport * from './src/table/tbody.component';\nexport * from './src/table/thead.component';\nexport * from './src/table/tr.directive';\nexport * from './src/table/tr-expand.directive';\nexport * from './src/table/title-footer.component';\nexport * from './src/table/tr-measure.component';\nexport * from './src/cell/cell-fixed.directive';\nexport * from './src/cell/cell.directive';\nexport * from './src/cell/th-measure.directive';\nexport * from './src/cell/td-addon.component';\nexport * from './src/cell/th-selection.component';\nexport * from './src/cell/th-addon.component';\nexport * from './src/addon/filter.component';\nexport * from './src/addon/row-expand-button.directive';\nexport * from './src/addon/row-indent.directive';\nexport * from './src/addon/selection.component';\nexport * from './src/addon/sorters.component';\nexport * from './src/addon/filter-trigger.component';\nexport * from './src/styled/align.directive';\nexport * from './src/styled/ellipsis.directive';\nexport * from './src/styled/word-break.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}