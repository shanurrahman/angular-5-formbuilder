{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { InjectionToken, Directive, NgZone, ElementRef, Optional, Inject, PLATFORM_ID, Input, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nvar NzWaveRenderer = /*#__PURE__*/function () {\n  function NzWaveRenderer(triggerElement, ngZone, insertExtraNode, platformId) {\n    var _this = this;\n\n    _classCallCheck(this, NzWaveRenderer);\n\n    this.triggerElement = triggerElement;\n    this.ngZone = ngZone;\n    this.insertExtraNode = insertExtraNode;\n    this.platformId = platformId;\n    this.waveTransitionDuration = 400;\n    this.styleForPseudo = null;\n    this.extraNode = null;\n    this.lastTime = 0;\n\n    this.onClick = function (event) {\n      if (!_this.triggerElement || !_this.triggerElement.getAttribute || _this.triggerElement.getAttribute('disabled') || event.target.tagName === 'INPUT' || _this.triggerElement.className.indexOf('disabled') >= 0) {\n        return;\n      }\n\n      _this.fadeOutWave();\n    };\n\n    this.platform = new Platform(this.platformId);\n    this.clickHandler = this.onClick.bind(this);\n    this.bindTriggerEvent();\n  }\n\n  _createClass(NzWaveRenderer, [{\n    key: \"bindTriggerEvent\",\n    value: function bindTriggerEvent() {\n      var _this2 = this;\n\n      if (this.platform.isBrowser) {\n        this.ngZone.runOutsideAngular(function () {\n          _this2.removeTriggerEvent();\n\n          if (_this2.triggerElement) {\n            _this2.triggerElement.addEventListener('click', _this2.clickHandler, true);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"removeTriggerEvent\",\n    value: function removeTriggerEvent() {\n      if (this.triggerElement) {\n        this.triggerElement.removeEventListener('click', this.clickHandler, true);\n      }\n    }\n  }, {\n    key: \"removeStyleAndExtraNode\",\n    value: function removeStyleAndExtraNode() {\n      if (this.styleForPseudo && document.body.contains(this.styleForPseudo)) {\n        document.body.removeChild(this.styleForPseudo);\n        this.styleForPseudo = null;\n      }\n\n      if (this.insertExtraNode && this.triggerElement.contains(this.extraNode)) {\n        this.triggerElement.removeChild(this.extraNode);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.removeTriggerEvent();\n      this.removeStyleAndExtraNode();\n    }\n  }, {\n    key: \"fadeOutWave\",\n    value: function fadeOutWave() {\n      var _this3 = this;\n\n      var node = this.triggerElement;\n      var waveColor = this.getWaveColor(node);\n      node.setAttribute(this.waveAttributeName, 'true');\n\n      if (Date.now() < this.lastTime + this.waveTransitionDuration) {\n        return;\n      }\n\n      if (this.isValidColor(waveColor)) {\n        if (!this.styleForPseudo) {\n          this.styleForPseudo = document.createElement('style');\n        }\n\n        this.styleForPseudo.innerHTML = \"\\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\\n        --antd-wave-shadow-color: \".concat(waveColor, \";\\n      }\");\n        document.body.appendChild(this.styleForPseudo);\n      }\n\n      if (this.insertExtraNode) {\n        if (!this.extraNode) {\n          this.extraNode = document.createElement('div');\n        }\n\n        this.extraNode.className = 'ant-click-animating-node';\n        node.appendChild(this.extraNode);\n      }\n\n      this.lastTime = Date.now();\n      this.runTimeoutOutsideZone(function () {\n        node.removeAttribute(_this3.waveAttributeName);\n\n        _this3.removeStyleAndExtraNode();\n      }, this.waveTransitionDuration);\n    }\n  }, {\n    key: \"isValidColor\",\n    value: function isValidColor(color) {\n      return !!color && color !== '#ffffff' && color !== 'rgb(255, 255, 255)' && this.isNotGrey(color) && !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(color) && color !== 'transparent';\n    }\n  }, {\n    key: \"isNotGrey\",\n    value: function isNotGrey(color) {\n      var match = color.match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n\n      if (match && match[1] && match[2] && match[3]) {\n        return !(match[1] === match[2] && match[2] === match[3]);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getWaveColor\",\n    value: function getWaveColor(node) {\n      var nodeStyle = getComputedStyle(node);\n      return nodeStyle.getPropertyValue('border-top-color') || // Firefox Compatible\n      nodeStyle.getPropertyValue('border-color') || nodeStyle.getPropertyValue('background-color');\n    }\n  }, {\n    key: \"runTimeoutOutsideZone\",\n    value: function runTimeoutOutsideZone(fn, delay) {\n      this.ngZone.runOutsideAngular(function () {\n        return setTimeout(fn, delay);\n      });\n    }\n  }, {\n    key: \"waveAttributeName\",\n    get: function get() {\n      return this.insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n  }]);\n\n  return NzWaveRenderer;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_WAVE_GLOBAL_DEFAULT_CONFIG = {\n  disabled: false\n};\nvar NZ_WAVE_GLOBAL_CONFIG = new InjectionToken('nz-wave-global-options', {\n  providedIn: 'root',\n  factory: NZ_WAVE_GLOBAL_CONFIG_FACTORY\n});\n\nfunction NZ_WAVE_GLOBAL_CONFIG_FACTORY() {\n  return NZ_WAVE_GLOBAL_DEFAULT_CONFIG;\n}\n\nvar NzWaveDirective = /*#__PURE__*/function () {\n  function NzWaveDirective(ngZone, elementRef, config, animationType, platformId) {\n    _classCallCheck(this, NzWaveDirective);\n\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.config = config;\n    this.animationType = animationType;\n    this.platformId = platformId;\n    this.nzWaveExtraNode = false;\n    this.waveDisabled = false;\n    this.waveDisabled = this.isConfigDisabled();\n  }\n\n  _createClass(NzWaveDirective, [{\n    key: \"isConfigDisabled\",\n    value: function isConfigDisabled() {\n      var disabled = false;\n\n      if (this.config && typeof this.config.disabled === 'boolean') {\n        disabled = this.config.disabled;\n      }\n\n      if (this.animationType === 'NoopAnimations') {\n        disabled = true;\n      }\n\n      return disabled;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.waveRenderer) {\n        this.waveRenderer.destroy();\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.renderWaveIfEnabled();\n    }\n  }, {\n    key: \"renderWaveIfEnabled\",\n    value: function renderWaveIfEnabled() {\n      if (!this.waveDisabled && this.elementRef.nativeElement) {\n        this.waveRenderer = new NzWaveRenderer(this.elementRef.nativeElement, this.ngZone, this.nzWaveExtraNode, this.platformId);\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.waveDisabled = true;\n\n      if (this.waveRenderer) {\n        this.waveRenderer.removeTriggerEvent();\n        this.waveRenderer.removeStyleAndExtraNode();\n      }\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      // config priority\n      this.waveDisabled = this.isConfigDisabled() || false;\n\n      if (this.waveRenderer) {\n        this.waveRenderer.bindTriggerEvent();\n      }\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.waveDisabled;\n    }\n  }, {\n    key: \"rendererRef\",\n    get: function get() {\n      return this.waveRenderer;\n    }\n  }]);\n\n  return NzWaveDirective;\n}();\n\nNzWaveDirective.ɵfac = function NzWaveDirective_Factory(t) {\n  return new (t || NzWaveDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NZ_WAVE_GLOBAL_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nNzWaveDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzWaveDirective,\n  selectors: [[\"\", \"nz-wave\", \"\"], [\"button\", \"nz-button\", \"\", 3, \"nzType\", \"link\", 3, \"nzType\", \"text\"]],\n  inputs: {\n    nzWaveExtraNode: \"nzWaveExtraNode\"\n  },\n  exportAs: [\"nzWave\"]\n});\n\nNzWaveDirective.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NZ_WAVE_GLOBAL_CONFIG]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\nNzWaveDirective.propDecorators = {\n  nzWaveExtraNode: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzWaveDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-wave],button[nz-button]:not([nzType=\"link\"]):not([nzType=\"text\"])',\n      exportAs: 'nzWave'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NZ_WAVE_GLOBAL_CONFIG]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    nzWaveExtraNode: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzWaveModule = function NzWaveModule() {\n  _classCallCheck(this, NzWaveModule);\n};\n\nNzWaveModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzWaveModule\n});\nNzWaveModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzWaveModule_Factory(t) {\n    return new (t || NzWaveModule)();\n  },\n  imports: [[PlatformModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzWaveModule, {\n    declarations: function declarations() {\n      return [NzWaveDirective];\n    },\n    imports: function imports() {\n      return [PlatformModule];\n    },\n    exports: function exports() {\n      return [NzWaveDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzWaveModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      exports: [NzWaveDirective],\n      declarations: [NzWaveDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NZ_WAVE_GLOBAL_CONFIG, NZ_WAVE_GLOBAL_CONFIG_FACTORY, NZ_WAVE_GLOBAL_DEFAULT_CONFIG, NzWaveDirective, NzWaveModule, NzWaveRenderer };","map":{"version":3,"sources":["../../components/core/wave/nz-wave-renderer.ts","../../components/core/wave/nz-wave.directive.ts","../../components/core/wave/nz-wave.module.ts","../../components/core/wave/public-api.ts","../../components/core/wave/ng-zorro-antd-core-wave.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { NgZone } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport class NzWaveRenderer {\n  private waveTransitionDuration = 400;\n  private styleForPseudo: HTMLStyleElement | null = null;\n  private extraNode: HTMLDivElement | null = null;\n  private lastTime = 0;\n  private platform!: Platform;\n  clickHandler: () => void;\n  get waveAttributeName(): string {\n    return this.insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n  }\n\n  constructor(\n    private triggerElement: HTMLElement,\n    private ngZone: NgZone,\n    private insertExtraNode: boolean,\n    private platformId: NzSafeAny\n  ) {\n    this.platform = new Platform(this.platformId);\n    this.clickHandler = this.onClick.bind(this);\n    this.bindTriggerEvent();\n  }\n\n  onClick = (event: MouseEvent) => {\n    if (\n      !this.triggerElement ||\n      !this.triggerElement.getAttribute ||\n      this.triggerElement.getAttribute('disabled') ||\n      (event.target as HTMLElement).tagName === 'INPUT' ||\n      this.triggerElement.className.indexOf('disabled') >= 0\n    ) {\n      return;\n    }\n    this.fadeOutWave();\n  };\n\n  bindTriggerEvent(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.removeTriggerEvent();\n        if (this.triggerElement) {\n          this.triggerElement.addEventListener('click', this.clickHandler, true);\n        }\n      });\n    }\n  }\n\n  removeTriggerEvent(): void {\n    if (this.triggerElement) {\n      this.triggerElement.removeEventListener('click', this.clickHandler, true);\n    }\n  }\n\n  removeStyleAndExtraNode(): void {\n    if (this.styleForPseudo && document.body.contains(this.styleForPseudo)) {\n      document.body.removeChild(this.styleForPseudo);\n      this.styleForPseudo = null;\n    }\n    if (this.insertExtraNode && this.triggerElement.contains(this.extraNode)) {\n      this.triggerElement.removeChild(this.extraNode as Node);\n    }\n  }\n\n  destroy(): void {\n    this.removeTriggerEvent();\n    this.removeStyleAndExtraNode();\n  }\n\n  private fadeOutWave(): void {\n    const node = this.triggerElement;\n    const waveColor = this.getWaveColor(node);\n    node.setAttribute(this.waveAttributeName, 'true');\n    if (Date.now() < this.lastTime + this.waveTransitionDuration) {\n      return;\n    }\n\n    if (this.isValidColor(waveColor)) {\n      if (!this.styleForPseudo) {\n        this.styleForPseudo = document.createElement('style');\n      }\n\n      this.styleForPseudo.innerHTML = `\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n        --antd-wave-shadow-color: ${waveColor};\n      }`;\n      document.body.appendChild(this.styleForPseudo);\n    }\n\n    if (this.insertExtraNode) {\n      if (!this.extraNode) {\n        this.extraNode = document.createElement('div');\n      }\n      this.extraNode.className = 'ant-click-animating-node';\n      node.appendChild(this.extraNode);\n    }\n\n    this.lastTime = Date.now();\n\n    this.runTimeoutOutsideZone(() => {\n      node.removeAttribute(this.waveAttributeName);\n      this.removeStyleAndExtraNode();\n    }, this.waveTransitionDuration);\n  }\n\n  private isValidColor(color: string): boolean {\n    return (\n      !!color &&\n      color !== '#ffffff' &&\n      color !== 'rgb(255, 255, 255)' &&\n      this.isNotGrey(color) &&\n      !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(color) &&\n      color !== 'transparent'\n    );\n  }\n\n  private isNotGrey(color: string): boolean {\n    const match = color.match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n    if (match && match[1] && match[2] && match[3]) {\n      return !(match[1] === match[2] && match[2] === match[3]);\n    }\n    return true;\n  }\n\n  private getWaveColor(node: HTMLElement): string {\n    const nodeStyle = getComputedStyle(node);\n    return (\n      nodeStyle.getPropertyValue('border-top-color') || // Firefox Compatible\n      nodeStyle.getPropertyValue('border-color') ||\n      nodeStyle.getPropertyValue('background-color')\n    );\n  }\n\n  private runTimeoutOutsideZone(fn: () => void, delay: number): void {\n    this.ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Inject, InjectionToken, Input, NgZone, OnDestroy, OnInit, Optional, PLATFORM_ID } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzWaveRenderer } from './nz-wave-renderer';\n\nexport interface NzWaveConfig {\n  disabled?: boolean;\n}\n\nexport const NZ_WAVE_GLOBAL_DEFAULT_CONFIG: NzWaveConfig = {\n  disabled: false\n};\n\nexport const NZ_WAVE_GLOBAL_CONFIG = new InjectionToken<NzWaveConfig>('nz-wave-global-options', {\n  providedIn: 'root',\n  factory: NZ_WAVE_GLOBAL_CONFIG_FACTORY\n});\n\nexport function NZ_WAVE_GLOBAL_CONFIG_FACTORY(): NzWaveConfig {\n  return NZ_WAVE_GLOBAL_DEFAULT_CONFIG;\n}\n\n@Directive({\n  selector: '[nz-wave],button[nz-button]:not([nzType=\"link\"]):not([nzType=\"text\"])',\n  exportAs: 'nzWave'\n})\nexport class NzWaveDirective implements OnInit, OnDestroy {\n  @Input() nzWaveExtraNode = false;\n\n  private waveRenderer?: NzWaveRenderer;\n  private waveDisabled: boolean = false;\n\n  get disabled(): boolean {\n    return this.waveDisabled;\n  }\n\n  get rendererRef(): NzWaveRenderer | undefined {\n    return this.waveRenderer;\n  }\n\n  constructor(\n    private ngZone: NgZone,\n    private elementRef: ElementRef,\n    @Optional() @Inject(NZ_WAVE_GLOBAL_CONFIG) private config: NzWaveConfig,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) private animationType: string,\n    @Inject(PLATFORM_ID) private platformId: NzSafeAny\n  ) {\n    this.waveDisabled = this.isConfigDisabled();\n  }\n\n  isConfigDisabled(): boolean {\n    let disabled = false;\n    if (this.config && typeof this.config.disabled === 'boolean') {\n      disabled = this.config.disabled;\n    }\n    if (this.animationType === 'NoopAnimations') {\n      disabled = true;\n    }\n    return disabled;\n  }\n\n  ngOnDestroy(): void {\n    if (this.waveRenderer) {\n      this.waveRenderer.destroy();\n    }\n  }\n\n  ngOnInit(): void {\n    this.renderWaveIfEnabled();\n  }\n\n  renderWaveIfEnabled(): void {\n    if (!this.waveDisabled && this.elementRef.nativeElement) {\n      this.waveRenderer = new NzWaveRenderer(this.elementRef.nativeElement, this.ngZone, this.nzWaveExtraNode, this.platformId);\n    }\n  }\n\n  disable(): void {\n    this.waveDisabled = true;\n    if (this.waveRenderer) {\n      this.waveRenderer.removeTriggerEvent();\n      this.waveRenderer.removeStyleAndExtraNode();\n    }\n  }\n\n  enable(): void {\n    // config priority\n    this.waveDisabled = this.isConfigDisabled() || false;\n    if (this.waveRenderer) {\n      this.waveRenderer.bindTriggerEvent();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { NgModule } from '@angular/core';\nimport { NzWaveDirective } from './nz-wave.directive';\n\n@NgModule({\n  imports: [PlatformModule],\n  exports: [NzWaveDirective],\n  declarations: [NzWaveDirective]\n})\nexport class NzWaveModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './nz-wave-renderer';\nexport * from './nz-wave.directive';\nexport * from './nz-wave.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}