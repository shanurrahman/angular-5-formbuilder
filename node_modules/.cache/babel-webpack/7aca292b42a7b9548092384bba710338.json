{"ast":null,"code":"import _toConsumableArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, NgZone, Renderer2, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzScrollService } from 'ng-zorro-antd/core/services';\nimport { shallowEqual, getStyleAsText, InputNumber } from 'ng-zorro-antd/core/util';\nimport { Subscription, ReplaySubject, Subject, merge, fromEvent } from 'rxjs';\nimport { takeUntil, map, auditTime } from 'rxjs/operators';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/services';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nvar _c0 = [\"fixedEl\"];\nvar _c1 = [\"*\"];\nvar AffixRespondEvents;\n\n(function (AffixRespondEvents) {\n  AffixRespondEvents[\"resize\"] = \"resize\";\n  AffixRespondEvents[\"scroll\"] = \"scroll\";\n  AffixRespondEvents[\"touchstart\"] = \"touchstart\";\n  AffixRespondEvents[\"touchmove\"] = \"touchmove\";\n  AffixRespondEvents[\"touchend\"] = \"touchend\";\n  AffixRespondEvents[\"pageshow\"] = \"pageshow\";\n  AffixRespondEvents[\"load\"] = \"LOAD\";\n})(AffixRespondEvents || (AffixRespondEvents = {}));\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nfunction isTargetWindow(target) {\n  return typeof window !== 'undefined' && target === window;\n}\n\nfunction getTargetRect(target) {\n  return !isTargetWindow(target) ? target.getBoundingClientRect() : {\n    top: 0,\n    left: 0,\n    bottom: 0\n  };\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_CONFIG_MODULE_NAME = 'affix';\nvar NZ_AFFIX_CLS_PREFIX = 'ant-affix';\nvar NZ_AFFIX_DEFAULT_SCROLL_TIME = 20;\n\nvar NzAffixComponent = /*#__PURE__*/function () {\n  function NzAffixComponent(el, doc, nzConfigService, scrollSrv, ngZone, platform, renderer) {\n    _classCallCheck(this, NzAffixComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.scrollSrv = scrollSrv;\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.renderer = renderer;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzChange = new EventEmitter();\n    this.positionChangeSubscription = Subscription.EMPTY;\n    this.offsetChanged$ = new ReplaySubject(1);\n    this.destroy$ = new Subject(); // The wrapper would stay at the original position as a placeholder.\n\n    this.placeholderNode = el.nativeElement;\n    this.document = doc;\n  }\n\n  _createClass(NzAffixComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzOffsetBottom = changes.nzOffsetBottom,\n          nzOffsetTop = changes.nzOffsetTop,\n          nzTarget = changes.nzTarget;\n\n      if (nzOffsetBottom || nzOffsetTop) {\n        this.offsetChanged$.next();\n      }\n\n      if (nzTarget) {\n        this.registerListeners();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.registerListeners();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this = this;\n\n      if (!this.platform.isBrowser) {\n        return;\n      }\n\n      this.removeListeners();\n      this.positionChangeSubscription = this.ngZone.runOutsideAngular(function () {\n        return merge.apply(void 0, _toConsumableArray(Object.keys(AffixRespondEvents).map(function (evName) {\n          return fromEvent(_this.target, evName);\n        })).concat([_this.offsetChanged$.pipe(takeUntil(_this.destroy$), map(function () {\n          return {};\n        }))])).pipe(auditTime(NZ_AFFIX_DEFAULT_SCROLL_TIME)).subscribe(function (e) {\n          return _this.updatePosition(e);\n        });\n      });\n      this.timeout = setTimeout(function () {\n        return _this.updatePosition({});\n      });\n    }\n  }, {\n    key: \"removeListeners\",\n    value: function removeListeners() {\n      clearTimeout(this.timeout);\n      this.positionChangeSubscription.unsubscribe();\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"getOffset\",\n    value: function getOffset(element, target) {\n      var elemRect = element.getBoundingClientRect();\n      var targetRect = getTargetRect(target);\n      var scrollTop = this.scrollSrv.getScroll(target, true);\n      var scrollLeft = this.scrollSrv.getScroll(target, false);\n      var docElem = this.document.body;\n      var clientTop = docElem.clientTop || 0;\n      var clientLeft = docElem.clientLeft || 0;\n      return {\n        top: elemRect.top - targetRect.top + scrollTop - clientTop,\n        left: elemRect.left - targetRect.left + scrollLeft - clientLeft,\n        width: elemRect.width,\n        height: elemRect.height\n      };\n    }\n  }, {\n    key: \"setAffixStyle\",\n    value: function setAffixStyle(e, affixStyle) {\n      var originalAffixStyle = this.affixStyle;\n      var isWindow = this.target === window;\n\n      if (e.type === 'scroll' && originalAffixStyle && affixStyle && isWindow) {\n        return;\n      }\n\n      if (shallowEqual(originalAffixStyle, affixStyle)) {\n        return;\n      }\n\n      var fixed = !!affixStyle;\n      var wrapEl = this.fixedEl.nativeElement;\n      this.renderer.setStyle(wrapEl, 'cssText', getStyleAsText(affixStyle));\n      this.affixStyle = affixStyle;\n\n      if (fixed) {\n        wrapEl.classList.add(NZ_AFFIX_CLS_PREFIX);\n      } else {\n        wrapEl.classList.remove(NZ_AFFIX_CLS_PREFIX);\n      }\n\n      if (affixStyle && !originalAffixStyle || !affixStyle && originalAffixStyle) {\n        this.nzChange.emit(fixed);\n      }\n    }\n  }, {\n    key: \"setPlaceholderStyle\",\n    value: function setPlaceholderStyle(placeholderStyle) {\n      var originalPlaceholderStyle = this.placeholderStyle;\n\n      if (shallowEqual(placeholderStyle, originalPlaceholderStyle)) {\n        return;\n      }\n\n      this.renderer.setStyle(this.placeholderNode, 'cssText', getStyleAsText(placeholderStyle));\n      this.placeholderStyle = placeholderStyle;\n    }\n  }, {\n    key: \"syncPlaceholderStyle\",\n    value: function syncPlaceholderStyle(e) {\n      if (!this.affixStyle) {\n        return;\n      }\n\n      this.renderer.setStyle(this.placeholderNode, 'cssText', '');\n      this.placeholderStyle = undefined;\n      var styleObj = {\n        width: this.placeholderNode.offsetWidth,\n        height: this.fixedEl.nativeElement.offsetHeight\n      };\n      this.setAffixStyle(e, Object.assign(Object.assign({}, this.affixStyle), styleObj));\n      this.setPlaceholderStyle(styleObj);\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(e) {\n      if (!this.platform.isBrowser) {\n        return;\n      }\n\n      var targetNode = this.target;\n      var offsetTop = this.nzOffsetTop;\n      var scrollTop = this.scrollSrv.getScroll(targetNode, true);\n      var elemOffset = this.getOffset(this.placeholderNode, targetNode);\n      var fixedNode = this.fixedEl.nativeElement;\n      var elemSize = {\n        width: fixedNode.offsetWidth,\n        height: fixedNode.offsetHeight\n      };\n      var offsetMode = {\n        top: false,\n        bottom: false\n      }; // Default to `offsetTop=0`.\n\n      if (typeof offsetTop !== 'number' && typeof this.nzOffsetBottom !== 'number') {\n        offsetMode.top = true;\n        offsetTop = 0;\n      } else {\n        offsetMode.top = typeof offsetTop === 'number';\n        offsetMode.bottom = typeof this.nzOffsetBottom === 'number';\n      }\n\n      var targetRect = getTargetRect(targetNode);\n      var targetInnerHeight = targetNode.innerHeight || targetNode.clientHeight;\n\n      if (scrollTop >= elemOffset.top - offsetTop && offsetMode.top) {\n        var width = elemOffset.width;\n        var top = targetRect.top + offsetTop;\n        this.setAffixStyle(e, {\n          position: 'fixed',\n          top: top,\n          left: targetRect.left + elemOffset.left,\n          width: width\n        });\n        this.setPlaceholderStyle({\n          width: width,\n          height: elemSize.height\n        });\n      } else if (scrollTop <= elemOffset.top + elemSize.height + this.nzOffsetBottom - targetInnerHeight && offsetMode.bottom) {\n        var targetBottomOffset = targetNode === window ? 0 : window.innerHeight - targetRect.bottom;\n        var _width = elemOffset.width;\n        this.setAffixStyle(e, {\n          position: 'fixed',\n          bottom: targetBottomOffset + this.nzOffsetBottom,\n          left: targetRect.left + elemOffset.left,\n          width: _width\n        });\n        this.setPlaceholderStyle({\n          width: _width,\n          height: elemOffset.height\n        });\n      } else {\n        if (e.type === AffixRespondEvents.resize && this.affixStyle && this.affixStyle.position === 'fixed' && this.placeholderNode.offsetWidth) {\n          this.setAffixStyle(e, Object.assign(Object.assign({}, this.affixStyle), {\n            width: this.placeholderNode.offsetWidth\n          }));\n        } else {\n          this.setAffixStyle(e);\n        }\n\n        this.setPlaceholderStyle();\n      }\n\n      if (e.type === 'resize') {\n        this.syncPlaceholderStyle(e);\n      }\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      var el = this.nzTarget;\n      return (typeof el === 'string' ? this.document.querySelector(el) : el) || window;\n    }\n  }]);\n\n  return NzAffixComponent;\n}();\n\nNzAffixComponent.ɵfac = function NzAffixComponent_Factory(t) {\n  return new (t || NzAffixComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzScrollService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNzAffixComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzAffixComponent,\n  selectors: [[\"nz-affix\"]],\n  viewQuery: function NzAffixComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fixedEl = _t.first);\n    }\n  },\n  inputs: {\n    nzTarget: \"nzTarget\",\n    nzOffsetTop: \"nzOffsetTop\",\n    nzOffsetBottom: \"nzOffsetBottom\"\n  },\n  outputs: {\n    nzChange: \"nzChange\"\n  },\n  exportAs: [\"nzAffix\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 0,\n  consts: [[\"fixedEl\", \"\"]],\n  template: function NzAffixComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", null, 0);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzAffixComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: NzConfigService\n  }, {\n    type: NzScrollService\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: Renderer2\n  }];\n};\n\nNzAffixComponent.propDecorators = {\n  fixedEl: [{\n    type: ViewChild,\n    args: ['fixedEl', {\n      static: true\n    }]\n  }],\n  nzTarget: [{\n    type: Input\n  }],\n  nzOffsetTop: [{\n    type: Input\n  }],\n  nzOffsetBottom: [{\n    type: Input\n  }],\n  nzChange: [{\n    type: Output\n  }]\n};\n\n__decorate([WithConfig(), InputNumber(undefined), __metadata(\"design:type\", Object)], NzAffixComponent.prototype, \"nzOffsetTop\", void 0);\n\n__decorate([WithConfig(), InputNumber(undefined), __metadata(\"design:type\", Object)], NzAffixComponent.prototype, \"nzOffsetBottom\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAffixComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-affix',\n      exportAs: 'nzAffix',\n      template: \"\\n    <div #fixedEl>\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc2.NzScrollService\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc3.Platform\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    nzChange: [{\n      type: Output\n    }],\n    fixedEl: [{\n      type: ViewChild,\n      args: ['fixedEl', {\n        static: true\n      }]\n    }],\n    nzTarget: [{\n      type: Input\n    }],\n    nzOffsetTop: [{\n      type: Input\n    }],\n    nzOffsetBottom: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzAffixModule = function NzAffixModule() {\n  _classCallCheck(this, NzAffixModule);\n};\n\nNzAffixModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzAffixModule\n});\nNzAffixModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzAffixModule_Factory(t) {\n    return new (t || NzAffixModule)();\n  },\n  imports: [[CommonModule, PlatformModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzAffixModule, {\n    declarations: function declarations() {\n      return [NzAffixComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, PlatformModule];\n    },\n    exports: function exports() {\n      return [NzAffixComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAffixModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzAffixComponent],\n      exports: [NzAffixComponent],\n      imports: [CommonModule, PlatformModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzAffixComponent, NzAffixModule };","map":{"version":3,"sources":["../../components/affix/respond-events.ts","../../components/affix/utils.ts","../../components/affix/affix.component.ts","../../components/affix/affix.module.ts","../../components/affix/public-api.ts","../../components/affix/ng-zorro-antd-affix.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport enum AffixRespondEvents {\n  resize = 'resize',\n  scroll = 'scroll',\n  touchstart = 'touchstart',\n  touchmove = 'touchmove',\n  touchend = 'touchend',\n  pageshow = 'pageshow',\n  load = 'LOAD'\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport interface SimpleRect {\n  top: number;\n  left: number;\n  width?: number;\n  height?: number;\n  bottom?: number;\n}\n\nexport function isTargetWindow(target: Element | Window): target is Window {\n  return typeof window !== 'undefined' && target === window;\n}\n\nexport function getTargetRect(target: Element | Window): SimpleRect {\n  return !isTargetWindow(target)\n    ? target.getBoundingClientRect()\n    : {\n        top: 0,\n        left: 0,\n        bottom: 0\n      };\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzScrollService } from 'ng-zorro-antd/core/services';\nimport { NgStyleInterface, NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { getStyleAsText, InputNumber, shallowEqual } from 'ng-zorro-antd/core/util';\n\nimport { fromEvent, merge, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { auditTime, map, takeUntil } from 'rxjs/operators';\n\nimport { AffixRespondEvents } from './respond-events';\nimport { getTargetRect, SimpleRect } from './utils';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'affix';\nconst NZ_AFFIX_CLS_PREFIX = 'ant-affix';\nconst NZ_AFFIX_DEFAULT_SCROLL_TIME = 20;\n\n@Component({\n  selector: 'nz-affix',\n  exportAs: 'nzAffix',\n  template: `\n    <div #fixedEl>\n      <ng-content></ng-content>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NzAffixComponent implements AfterViewInit, OnChanges, OnDestroy {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzOffsetTop: NumberInput;\n  static ngAcceptInputType_nzOffsetBottom: NumberInput;\n\n  @ViewChild('fixedEl', { static: true }) private fixedEl!: ElementRef<HTMLDivElement>;\n\n  @Input() nzTarget?: string | Element | Window;\n\n  @Input()\n  @WithConfig<number | null>()\n  @InputNumber(undefined)\n  nzOffsetTop?: null | number;\n\n  @Input()\n  @WithConfig<number | null>()\n  @InputNumber(undefined)\n  nzOffsetBottom?: null | number;\n\n  @Output() readonly nzChange = new EventEmitter<boolean>();\n\n  private readonly placeholderNode: HTMLElement;\n\n  private affixStyle?: NgStyleInterface;\n  private placeholderStyle?: NgStyleInterface;\n  private positionChangeSubscription: Subscription = Subscription.EMPTY;\n  private offsetChanged$ = new ReplaySubject(1);\n  private destroy$ = new Subject<void>();\n  private timeout?: number;\n  private document: Document;\n\n  private get target(): Element | Window {\n    const el = this.nzTarget;\n    return (typeof el === 'string' ? this.document.querySelector(el) : el) || window;\n  }\n\n  constructor(\n    el: ElementRef,\n    @Inject(DOCUMENT) doc: NzSafeAny,\n    public nzConfigService: NzConfigService,\n    private scrollSrv: NzScrollService,\n    private ngZone: NgZone,\n    private platform: Platform,\n    private renderer: Renderer2\n  ) {\n    // The wrapper would stay at the original position as a placeholder.\n    this.placeholderNode = el.nativeElement;\n    this.document = doc;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzOffsetBottom, nzOffsetTop, nzTarget } = changes;\n\n    if (nzOffsetBottom || nzOffsetTop) {\n      this.offsetChanged$.next();\n    }\n    if (nzTarget) {\n      this.registerListeners();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.registerListeners();\n  }\n\n  ngOnDestroy(): void {\n    this.removeListeners();\n  }\n\n  private registerListeners(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n\n    this.removeListeners();\n    this.positionChangeSubscription = this.ngZone.runOutsideAngular(() => {\n      return merge(\n        ...Object.keys(AffixRespondEvents).map(evName => fromEvent(this.target, evName)),\n        this.offsetChanged$.pipe(\n          takeUntil(this.destroy$),\n          map(() => ({}))\n        )\n      )\n        .pipe(auditTime(NZ_AFFIX_DEFAULT_SCROLL_TIME))\n        .subscribe(e => this.updatePosition(e as Event));\n    });\n    this.timeout = setTimeout(() => this.updatePosition({} as Event));\n  }\n\n  private removeListeners(): void {\n    clearTimeout(this.timeout);\n    this.positionChangeSubscription.unsubscribe();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getOffset(element: Element, target: Element | Window | undefined): SimpleRect {\n    const elemRect = element.getBoundingClientRect();\n    const targetRect = getTargetRect(target!);\n\n    const scrollTop = this.scrollSrv.getScroll(target, true);\n    const scrollLeft = this.scrollSrv.getScroll(target, false);\n\n    const docElem = this.document.body;\n    const clientTop = docElem.clientTop || 0;\n    const clientLeft = docElem.clientLeft || 0;\n\n    return {\n      top: elemRect.top - targetRect.top + scrollTop - clientTop,\n      left: elemRect.left - targetRect.left + scrollLeft - clientLeft,\n      width: elemRect.width,\n      height: elemRect.height\n    };\n  }\n\n  private setAffixStyle(e: Event, affixStyle?: NgStyleInterface): void {\n    const originalAffixStyle = this.affixStyle;\n    const isWindow = this.target === window;\n    if (e.type === 'scroll' && originalAffixStyle && affixStyle && isWindow) {\n      return;\n    }\n    if (shallowEqual(originalAffixStyle, affixStyle)) {\n      return;\n    }\n\n    const fixed = !!affixStyle;\n    const wrapEl = this.fixedEl.nativeElement;\n    this.renderer.setStyle(wrapEl, 'cssText', getStyleAsText(affixStyle));\n    this.affixStyle = affixStyle;\n    if (fixed) {\n      wrapEl.classList.add(NZ_AFFIX_CLS_PREFIX);\n    } else {\n      wrapEl.classList.remove(NZ_AFFIX_CLS_PREFIX);\n    }\n\n    if ((affixStyle && !originalAffixStyle) || (!affixStyle && originalAffixStyle)) {\n      this.nzChange.emit(fixed);\n    }\n  }\n\n  private setPlaceholderStyle(placeholderStyle?: NgStyleInterface): void {\n    const originalPlaceholderStyle = this.placeholderStyle;\n    if (shallowEqual(placeholderStyle, originalPlaceholderStyle)) {\n      return;\n    }\n    this.renderer.setStyle(this.placeholderNode, 'cssText', getStyleAsText(placeholderStyle));\n    this.placeholderStyle = placeholderStyle;\n  }\n\n  private syncPlaceholderStyle(e: Event): void {\n    if (!this.affixStyle) {\n      return;\n    }\n    this.renderer.setStyle(this.placeholderNode, 'cssText', '');\n    this.placeholderStyle = undefined;\n    const styleObj = {\n      width: this.placeholderNode.offsetWidth,\n      height: this.fixedEl.nativeElement.offsetHeight\n    };\n    this.setAffixStyle(e, {\n      ...this.affixStyle,\n      ...styleObj\n    });\n    this.setPlaceholderStyle(styleObj);\n  }\n\n  updatePosition(e: Event): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n\n    const targetNode = this.target;\n    let offsetTop = this.nzOffsetTop;\n    const scrollTop = this.scrollSrv.getScroll(targetNode, true);\n    const elemOffset = this.getOffset(this.placeholderNode, targetNode!);\n    const fixedNode = this.fixedEl.nativeElement;\n    const elemSize = {\n      width: fixedNode.offsetWidth,\n      height: fixedNode.offsetHeight\n    };\n    const offsetMode = {\n      top: false,\n      bottom: false\n    };\n    // Default to `offsetTop=0`.\n    if (typeof offsetTop !== 'number' && typeof this.nzOffsetBottom !== 'number') {\n      offsetMode.top = true;\n      offsetTop = 0;\n    } else {\n      offsetMode.top = typeof offsetTop === 'number';\n      offsetMode.bottom = typeof this.nzOffsetBottom === 'number';\n    }\n    const targetRect = getTargetRect(targetNode as Window);\n    const targetInnerHeight = (targetNode as Window).innerHeight || (targetNode as HTMLElement).clientHeight;\n    if (scrollTop >= elemOffset.top - (offsetTop as number) && offsetMode.top) {\n      const width = elemOffset.width;\n      const top = targetRect.top + (offsetTop as number);\n      this.setAffixStyle(e, {\n        position: 'fixed',\n        top,\n        left: targetRect.left + elemOffset.left,\n        width\n      });\n      this.setPlaceholderStyle({\n        width,\n        height: elemSize.height\n      });\n    } else if (scrollTop <= elemOffset.top + elemSize.height + (this.nzOffsetBottom as number) - targetInnerHeight && offsetMode.bottom) {\n      const targetBottomOffset = targetNode === window ? 0 : window.innerHeight - targetRect.bottom!;\n      const width = elemOffset.width;\n      this.setAffixStyle(e, {\n        position: 'fixed',\n        bottom: targetBottomOffset + (this.nzOffsetBottom as number),\n        left: targetRect.left + elemOffset.left,\n        width\n      });\n      this.setPlaceholderStyle({\n        width,\n        height: elemOffset.height\n      });\n    } else {\n      if (\n        e.type === AffixRespondEvents.resize &&\n        this.affixStyle &&\n        this.affixStyle.position === 'fixed' &&\n        this.placeholderNode.offsetWidth\n      ) {\n        this.setAffixStyle(e, {\n          ...this.affixStyle,\n          width: this.placeholderNode.offsetWidth\n        });\n      } else {\n        this.setAffixStyle(e);\n      }\n      this.setPlaceholderStyle();\n    }\n\n    if (e.type === 'resize') {\n      this.syncPlaceholderStyle(e);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAffixComponent } from './affix.component';\n\n@NgModule({\n  declarations: [NzAffixComponent],\n  exports: [NzAffixComponent],\n  imports: [CommonModule, PlatformModule]\n})\nexport class NzAffixModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './affix.component';\nexport * from './affix.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}