{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, RendererFactory2, Injectable, Inject } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { auditTime, finalize, map, filter, startWith, distinctUntilChanged } from 'rxjs/operators';\nimport { environment } from 'ng-zorro-antd/core/environments';\nimport { getEventPosition, isTouchEvent } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { MediaMatcher } from '@angular/cdk/layout';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/layout';\n\nvar NOOP = function NOOP() {};\n\nvar ɵ0 = NOOP;\n\nvar NzResizeService = /*#__PURE__*/function () {\n  function NzResizeService(ngZone, rendererFactory2) {\n    var _this = this;\n\n    _classCallCheck(this, NzResizeService);\n\n    this.ngZone = ngZone;\n    this.rendererFactory2 = rendererFactory2;\n    this.resizeSource$ = new Subject();\n    this.listeners = 0;\n    this.disposeHandle = NOOP;\n\n    this.handler = function () {\n      _this.ngZone.run(function () {\n        _this.resizeSource$.next();\n      });\n    };\n\n    this.renderer = this.rendererFactory2.createRenderer(null, null);\n  }\n\n  _createClass(NzResizeService, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      var _this2 = this;\n\n      this.registerListener();\n      return this.resizeSource$.pipe(auditTime(16), finalize(function () {\n        return _this2.unregisterListener();\n      }));\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unregisterListener();\n    }\n  }, {\n    key: \"registerListener\",\n    value: function registerListener() {\n      var _this3 = this;\n\n      if (this.listeners === 0) {\n        this.ngZone.runOutsideAngular(function () {\n          _this3.disposeHandle = _this3.renderer.listen('window', 'resize', _this3.handler);\n        });\n      }\n\n      this.listeners += 1;\n    }\n  }, {\n    key: \"unregisterListener\",\n    value: function unregisterListener() {\n      this.listeners -= 1;\n\n      if (this.listeners === 0) {\n        this.disposeHandle();\n        this.disposeHandle = NOOP;\n      }\n    }\n  }]);\n\n  return NzResizeService;\n}();\n\nNzResizeService.ɵfac = function NzResizeService_Factory(t) {\n  return new (t || NzResizeService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2));\n};\n\nNzResizeService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzResizeService_Factory() {\n    return new NzResizeService(ɵɵinject(NgZone), ɵɵinject(RendererFactory2));\n  },\n  token: NzResizeService,\n  providedIn: \"root\"\n});\n\nNzResizeService.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: RendererFactory2\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzResizeService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.RendererFactory2\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * When running in test, singletons should not be destroyed. So we keep references of singletons\n * in this global variable.\n */\n\n\nvar testSingleRegistry = new Map();\n/**\n * Some singletons should have life cycle that is same to Angular's. This service make sure that\n * those singletons get destroyed in HMR.\n */\n\nvar NzSingletonService = /*#__PURE__*/function () {\n  function NzSingletonService() {\n    _classCallCheck(this, NzSingletonService);\n\n    /**\n     * This registry is used to register singleton in dev mode.\n     * So that singletons get destroyed when hot module reload happens.\n     *\n     * This works in prod mode too but with no specific effect.\n     */\n    this._singletonRegistry = new Map();\n  }\n\n  _createClass(NzSingletonService, [{\n    key: \"registerSingletonWithKey\",\n    value: function registerSingletonWithKey(key, target) {\n      var alreadyHave = this.singletonRegistry.has(key);\n      var item = alreadyHave ? this.singletonRegistry.get(key) : this.withNewTarget(target);\n\n      if (!alreadyHave) {\n        this.singletonRegistry.set(key, item);\n      }\n    }\n  }, {\n    key: \"getSingletonWithKey\",\n    value: function getSingletonWithKey(key) {\n      return this.singletonRegistry.has(key) ? this.singletonRegistry.get(key).target : null;\n    }\n  }, {\n    key: \"withNewTarget\",\n    value: function withNewTarget(target) {\n      return {\n        target: target\n      };\n    }\n  }, {\n    key: \"singletonRegistry\",\n    get: function get() {\n      return environment.isTestMode ? testSingleRegistry : this._singletonRegistry;\n    }\n  }]);\n\n  return NzSingletonService;\n}();\n\nNzSingletonService.ɵfac = function NzSingletonService_Factory(t) {\n  return new (t || NzSingletonService)();\n};\n\nNzSingletonService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzSingletonService_Factory() {\n    return new NzSingletonService();\n  },\n  token: NzSingletonService,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSingletonService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nfunction getPagePosition(event) {\n  var e = getEventPosition(event);\n  return {\n    x: e.pageX,\n    y: e.pageY\n  };\n}\n/**\n * This module provide a global dragging service to other components.\n */\n\n\nvar NzDragService = /*#__PURE__*/function () {\n  function NzDragService(rendererFactory2) {\n    _classCallCheck(this, NzDragService);\n\n    this.draggingThreshold = 5;\n    this.currentDraggingSequence = null;\n    this.currentStartingPoint = null;\n    this.handleRegistry = new Set();\n    this.renderer = rendererFactory2.createRenderer(null, null);\n  }\n\n  _createClass(NzDragService, [{\n    key: \"requestDraggingSequence\",\n    value: function requestDraggingSequence(event) {\n      var _this4 = this;\n\n      if (!this.handleRegistry.size) {\n        this.registerDraggingHandler(isTouchEvent(event));\n      } // Complete last dragging sequence if a new target is dragged.\n\n\n      if (this.currentDraggingSequence) {\n        this.currentDraggingSequence.complete();\n      }\n\n      this.currentStartingPoint = getPagePosition(event);\n      this.currentDraggingSequence = new Subject();\n      return this.currentDraggingSequence.pipe(map(function (e) {\n        return {\n          x: e.pageX - _this4.currentStartingPoint.x,\n          y: e.pageY - _this4.currentStartingPoint.y\n        };\n      }), filter(function (e) {\n        return Math.abs(e.x) > _this4.draggingThreshold || Math.abs(e.y) > _this4.draggingThreshold;\n      }), finalize(function () {\n        return _this4.teardownDraggingSequence();\n      }));\n    }\n  }, {\n    key: \"registerDraggingHandler\",\n    value: function registerDraggingHandler(isTouch) {\n      var _this5 = this;\n\n      if (isTouch) {\n        this.handleRegistry.add({\n          teardown: this.renderer.listen('document', 'touchmove', function (e) {\n            if (_this5.currentDraggingSequence) {\n              _this5.currentDraggingSequence.next(e.touches[0] || e.changedTouches[0]);\n            }\n          })\n        });\n        this.handleRegistry.add({\n          teardown: this.renderer.listen('document', 'touchend', function () {\n            if (_this5.currentDraggingSequence) {\n              _this5.currentDraggingSequence.complete();\n            }\n          })\n        });\n      } else {\n        this.handleRegistry.add({\n          teardown: this.renderer.listen('document', 'mousemove', function (e) {\n            if (_this5.currentDraggingSequence) {\n              _this5.currentDraggingSequence.next(e);\n            }\n          })\n        });\n        this.handleRegistry.add({\n          teardown: this.renderer.listen('document', 'mouseup', function () {\n            if (_this5.currentDraggingSequence) {\n              _this5.currentDraggingSequence.complete();\n            }\n          })\n        });\n      }\n    }\n  }, {\n    key: \"teardownDraggingSequence\",\n    value: function teardownDraggingSequence() {\n      this.currentDraggingSequence = null;\n    }\n  }]);\n\n  return NzDragService;\n}();\n\nNzDragService.ɵfac = function NzDragService_Factory(t) {\n  return new (t || NzDragService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2));\n};\n\nNzDragService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzDragService_Factory() {\n    return new NzDragService(ɵɵinject(RendererFactory2));\n  },\n  token: NzDragService,\n  providedIn: \"root\"\n});\n\nNzDragService.ctorParameters = function () {\n  return [{\n    type: RendererFactory2\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDragService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.RendererFactory2\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nfunction easeInOutCubic(t, b, c, d) {\n  var cc = c - b;\n  var tt = t / (d / 2);\n\n  if (tt < 1) {\n    return cc / 2 * tt * tt * tt + b;\n  } else {\n    return cc / 2 * ((tt -= 2) * tt * tt + 2) + b;\n  }\n}\n\nvar NzScrollService = /*#__PURE__*/function () {\n  function NzScrollService(doc) {\n    _classCallCheck(this, NzScrollService);\n\n    this.doc = doc;\n  }\n  /** Set the position of the scroll bar of `el`. */\n\n\n  _createClass(NzScrollService, [{\n    key: \"setScrollTop\",\n    value: function setScrollTop(el) {\n      var topValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (el === window) {\n        this.doc.body.scrollTop = topValue;\n        this.doc.documentElement.scrollTop = topValue;\n      } else {\n        el.scrollTop = topValue;\n      }\n    }\n    /** Get position of `el` against window. */\n\n  }, {\n    key: \"getOffset\",\n    value: function getOffset(el) {\n      var ret = {\n        top: 0,\n        left: 0\n      };\n\n      if (!el || !el.getClientRects().length) {\n        return ret;\n      }\n\n      var rect = el.getBoundingClientRect();\n\n      if (rect.width || rect.height) {\n        var doc = el.ownerDocument.documentElement;\n        ret.top = rect.top - doc.clientTop;\n        ret.left = rect.left - doc.clientLeft;\n      } else {\n        ret.top = rect.top;\n        ret.left = rect.left;\n      }\n\n      return ret;\n    }\n    /** Get the position of the scoll bar of `el`. */\n    // TODO: remove '| Window' as the fallback already happens here\n\n  }, {\n    key: \"getScroll\",\n    value: function getScroll(el) {\n      var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var target = el ? el : window;\n      var prop = top ? 'pageYOffset' : 'pageXOffset';\n      var method = top ? 'scrollTop' : 'scrollLeft';\n      var isWindow = target === window; // @ts-ignore\n\n      var ret = isWindow ? target[prop] : target[method];\n\n      if (isWindow && typeof ret !== 'number') {\n        ret = this.doc.documentElement[method];\n      }\n\n      return ret;\n    }\n    /**\n     * Scroll `el` to some position with animation.\n     *\n     * @param containerEl container, `window` by default\n     * @param targetTopValue Scroll to `top`, 0 by default\n     * @param easing Transition curve, `easeInOutCubic` by default\n     * @param callback callback invoked when transition is done\n     */\n\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(containerEl) {\n      var _this6 = this;\n\n      var targetTopValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var easing = arguments.length > 2 ? arguments[2] : undefined;\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n      var target = containerEl ? containerEl : window;\n      var scrollTop = this.getScroll(target);\n      var startTime = Date.now();\n\n      var frameFunc = function frameFunc() {\n        var timestamp = Date.now();\n        var time = timestamp - startTime;\n\n        _this6.setScrollTop(target, (easing || easeInOutCubic)(time, scrollTop, targetTopValue, 450));\n\n        if (time < 450) {\n          reqAnimFrame(frameFunc);\n        } else {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n\n      reqAnimFrame(frameFunc);\n    }\n  }]);\n\n  return NzScrollService;\n}();\n\nNzScrollService.ɵfac = function NzScrollService_Factory(t) {\n  return new (t || NzScrollService)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nNzScrollService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzScrollService_Factory() {\n    return new NzScrollService(ɵɵinject(DOCUMENT));\n  },\n  token: NzScrollService,\n  providedIn: \"root\"\n});\n\nNzScrollService.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzScrollService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzBreakpointEnum;\n\n(function (NzBreakpointEnum) {\n  NzBreakpointEnum[\"xxl\"] = \"xxl\";\n  NzBreakpointEnum[\"xl\"] = \"xl\";\n  NzBreakpointEnum[\"lg\"] = \"lg\";\n  NzBreakpointEnum[\"md\"] = \"md\";\n  NzBreakpointEnum[\"sm\"] = \"sm\";\n  NzBreakpointEnum[\"xs\"] = \"xs\";\n})(NzBreakpointEnum || (NzBreakpointEnum = {}));\n\nvar gridResponsiveMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1600px)'\n};\nvar siderResponsiveMap = {\n  xs: '(max-width: 479.98px)',\n  sm: '(max-width: 575.98px)',\n  md: '(max-width: 767.98px)',\n  lg: '(max-width: 991.98px)',\n  xl: '(max-width: 1199.98px)',\n  xxl: '(max-width: 1599.98px)'\n};\n\nvar NzBreakpointService = /*#__PURE__*/function () {\n  function NzBreakpointService(resizeService, mediaMatcher) {\n    _classCallCheck(this, NzBreakpointService);\n\n    this.resizeService = resizeService;\n    this.mediaMatcher = mediaMatcher;\n    this.resizeService.subscribe().subscribe(function () {});\n  }\n\n  _createClass(NzBreakpointService, [{\n    key: \"subscribe\",\n    value: function subscribe(breakpointMap, fullMap) {\n      var _this7 = this;\n\n      if (fullMap) {\n        var get = function get() {\n          return _this7.matchMedia(breakpointMap, true);\n        };\n\n        return this.resizeService.subscribe().pipe(map(get), startWith(get()), distinctUntilChanged(function (x, y) {\n          return x[0] === y[0];\n        }), map(function (x) {\n          return x[1];\n        }));\n      } else {\n        var _get = function _get() {\n          return _this7.matchMedia(breakpointMap);\n        };\n\n        return this.resizeService.subscribe().pipe(map(_get), startWith(_get()), distinctUntilChanged());\n      }\n    }\n  }, {\n    key: \"matchMedia\",\n    value: function matchMedia(breakpointMap, fullMap) {\n      var _this8 = this;\n\n      var bp = NzBreakpointEnum.md;\n      var breakpointBooleanMap = {};\n      Object.keys(breakpointMap).map(function (breakpoint) {\n        var castBP = breakpoint;\n\n        var matched = _this8.mediaMatcher.matchMedia(gridResponsiveMap[castBP]).matches;\n\n        breakpointBooleanMap[breakpoint] = matched;\n\n        if (matched) {\n          bp = castBP;\n        }\n      });\n\n      if (fullMap) {\n        return [bp, breakpointBooleanMap];\n      } else {\n        return bp;\n      }\n    }\n  }]);\n\n  return NzBreakpointService;\n}();\n\nNzBreakpointService.ɵfac = function NzBreakpointService_Factory(t) {\n  return new (t || NzBreakpointService)(ɵngcc0.ɵɵinject(NzResizeService), ɵngcc0.ɵɵinject(ɵngcc1.MediaMatcher));\n};\n\nNzBreakpointService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzBreakpointService_Factory() {\n    return new NzBreakpointService(ɵɵinject(NzResizeService), ɵɵinject(MediaMatcher));\n  },\n  token: NzBreakpointService,\n  providedIn: \"root\"\n});\n\nNzBreakpointService.ctorParameters = function () {\n  return [{\n    type: NzResizeService\n  }, {\n    type: MediaMatcher\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzBreakpointService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NzResizeService\n    }, {\n      type: ɵngcc1.MediaMatcher\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzBreakpointEnum, NzBreakpointService, NzDragService, NzResizeService, NzScrollService, NzSingletonService, gridResponsiveMap, siderResponsiveMap, ɵ0 };","map":{"version":3,"sources":["../../components/core/services/resize.ts","../../components/core/services/singleton.ts","../../components/core/services/drag.ts","../../components/core/services/scroll.ts","../../components/core/services/breakpoint.ts","../../components/core/services/public-api.ts","../../components/core/services/ng-zorro-antd-core-services.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, NgZone, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { auditTime, finalize } from 'rxjs/operators';\n\nconst NOOP = (): void => {};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzResizeService {\n  private readonly resizeSource$ = new Subject<void>();\n\n  private listeners = 0;\n\n  private renderer: Renderer2;\n\n  private disposeHandle = NOOP;\n\n  private handler = (): void => {\n    this.ngZone.run(() => {\n      this.resizeSource$.next();\n    });\n  };\n\n  constructor(private ngZone: NgZone, private rendererFactory2: RendererFactory2) {\n    this.renderer = this.rendererFactory2.createRenderer(null, null);\n  }\n\n  subscribe(): Observable<void> {\n    this.registerListener();\n\n    return this.resizeSource$.pipe(\n      auditTime(16),\n      finalize(() => this.unregisterListener())\n    );\n  }\n\n  unsubscribe(): void {\n    this.unregisterListener();\n  }\n\n  private registerListener(): void {\n    if (this.listeners === 0) {\n      this.ngZone.runOutsideAngular(() => {\n        this.disposeHandle = this.renderer.listen('window', 'resize', this.handler);\n      });\n    }\n\n    this.listeners += 1;\n  }\n\n  private unregisterListener(): void {\n    this.listeners -= 1;\n\n    if (this.listeners === 0) {\n      this.disposeHandle();\n      this.disposeHandle = NOOP;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { environment } from 'ng-zorro-antd/core/environments';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\ninterface SingletonRegistryItem {\n  target: NzSafeAny;\n}\n\n/**\n * When running in test, singletons should not be destroyed. So we keep references of singletons\n * in this global variable.\n */\nconst testSingleRegistry = new Map<string, SingletonRegistryItem>();\n\n/**\n * Some singletons should have life cycle that is same to Angular's. This service make sure that\n * those singletons get destroyed in HMR.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzSingletonService {\n  private get singletonRegistry(): Map<string, SingletonRegistryItem> {\n    return environment.isTestMode ? testSingleRegistry : this._singletonRegistry;\n  }\n\n  /**\n   * This registry is used to register singleton in dev mode.\n   * So that singletons get destroyed when hot module reload happens.\n   *\n   * This works in prod mode too but with no specific effect.\n   */\n  private _singletonRegistry = new Map<string, SingletonRegistryItem>();\n\n  registerSingletonWithKey(key: string, target: NzSafeAny): void {\n    const alreadyHave = this.singletonRegistry.has(key);\n    const item: SingletonRegistryItem = alreadyHave ? this.singletonRegistry.get(key)! : this.withNewTarget(target);\n\n    if (!alreadyHave) {\n      this.singletonRegistry.set(key, item);\n    }\n  }\n\n  getSingletonWithKey<T>(key: string): T | null {\n    return this.singletonRegistry.has(key) ? (this.singletonRegistry.get(key)!.target as T) : null;\n  }\n\n  private withNewTarget(target: NzSafeAny): SingletonRegistryItem {\n    return {\n      target\n    };\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, finalize, map } from 'rxjs/operators';\n\nimport { getEventPosition, isTouchEvent } from 'ng-zorro-antd/core/util';\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ntype Delta = Point;\n\ninterface HandlerItem {\n  handler?(e: Event): void;\n\n  teardown(): void;\n}\n\nfunction getPagePosition(event: MouseEvent | TouchEvent): Point {\n  const e = getEventPosition(event);\n  return {\n    x: e.pageX,\n    y: e.pageY\n  };\n}\n\n/**\n * This module provide a global dragging service to other components.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzDragService {\n  private draggingThreshold = 5;\n  private currentDraggingSequence: Subject<MouseEvent | Touch> | null = null;\n  private currentStartingPoint: Point | null = null;\n  private handleRegistry = new Set<HandlerItem>();\n  private renderer: Renderer2;\n\n  constructor(rendererFactory2: RendererFactory2) {\n    this.renderer = rendererFactory2.createRenderer(null, null);\n  }\n\n  requestDraggingSequence(event: MouseEvent | TouchEvent): Observable<Delta> {\n    if (!this.handleRegistry.size) {\n      this.registerDraggingHandler(isTouchEvent(event));\n    }\n\n    // Complete last dragging sequence if a new target is dragged.\n    if (this.currentDraggingSequence) {\n      this.currentDraggingSequence.complete();\n    }\n\n    this.currentStartingPoint = getPagePosition(event);\n    this.currentDraggingSequence = new Subject<MouseEvent | Touch>();\n\n    return this.currentDraggingSequence.pipe(\n      map((e: MouseEvent | Touch) => {\n        return {\n          x: e.pageX - this.currentStartingPoint!.x,\n          y: e.pageY - this.currentStartingPoint!.y\n        };\n      }),\n      filter((e: Delta) => Math.abs(e.x) > this.draggingThreshold || Math.abs(e.y) > this.draggingThreshold),\n      finalize(() => this.teardownDraggingSequence())\n    );\n  }\n\n  private registerDraggingHandler(isTouch: boolean): void {\n    if (isTouch) {\n      this.handleRegistry.add({\n        teardown: this.renderer.listen('document', 'touchmove', (e: TouchEvent) => {\n          if (this.currentDraggingSequence) {\n            this.currentDraggingSequence.next(e.touches[0] || e.changedTouches[0]);\n          }\n        })\n      });\n      this.handleRegistry.add({\n        teardown: this.renderer.listen('document', 'touchend', () => {\n          if (this.currentDraggingSequence) {\n            this.currentDraggingSequence.complete();\n          }\n        })\n      });\n    } else {\n      this.handleRegistry.add({\n        teardown: this.renderer.listen('document', 'mousemove', e => {\n          if (this.currentDraggingSequence) {\n            this.currentDraggingSequence.next(e);\n          }\n        })\n      });\n      this.handleRegistry.add({\n        teardown: this.renderer.listen('document', 'mouseup', () => {\n          if (this.currentDraggingSequence) {\n            this.currentDraggingSequence.complete();\n          }\n        })\n      });\n    }\n  }\n\n  private teardownDraggingSequence(): void {\n    this.currentDraggingSequence = null;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport type EasyingFn = (t: number, b: number, c: number, d: number) => number;\n\nfunction easeInOutCubic(t: number, b: number, c: number, d: number): number {\n  const cc = c - b;\n  let tt = t / (d / 2);\n  if (tt < 1) {\n    return (cc / 2) * tt * tt * tt + b;\n  } else {\n    return (cc / 2) * ((tt -= 2) * tt * tt + 2) + b;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzScrollService {\n  private doc: Document;\n\n  constructor(@Inject(DOCUMENT) doc: NzSafeAny) {\n    this.doc = doc;\n  }\n\n  /** Set the position of the scroll bar of `el`. */\n  setScrollTop(el: Element | Window, topValue: number = 0): void {\n    if (el === window) {\n      this.doc.body.scrollTop = topValue;\n      this.doc.documentElement!.scrollTop = topValue;\n    } else {\n      (el as Element).scrollTop = topValue;\n    }\n  }\n\n  /** Get position of `el` against window. */\n  getOffset(el: Element): { top: number; left: number } {\n    const ret = {\n      top: 0,\n      left: 0\n    };\n    if (!el || !el.getClientRects().length) {\n      return ret;\n    }\n\n    const rect = el.getBoundingClientRect();\n    if (rect.width || rect.height) {\n      const doc = el.ownerDocument!.documentElement;\n      ret.top = rect.top - doc!.clientTop;\n      ret.left = rect.left - doc!.clientLeft;\n    } else {\n      ret.top = rect.top;\n      ret.left = rect.left;\n    }\n\n    return ret;\n  }\n\n  /** Get the position of the scoll bar of `el`. */\n  // TODO: remove '| Window' as the fallback already happens here\n  getScroll(el?: Element | Window, top: boolean = true): number {\n    const target = el ? el : window;\n    const prop = top ? 'pageYOffset' : 'pageXOffset';\n    const method = top ? 'scrollTop' : 'scrollLeft';\n    const isWindow = target === window;\n    // @ts-ignore\n    let ret = isWindow ? target[prop] : target[method];\n    if (isWindow && typeof ret !== 'number') {\n      ret = this.doc.documentElement![method];\n    }\n    return ret;\n  }\n\n  /**\n   * Scroll `el` to some position with animation.\n   *\n   * @param containerEl container, `window` by default\n   * @param targetTopValue Scroll to `top`, 0 by default\n   * @param easing Transition curve, `easeInOutCubic` by default\n   * @param callback callback invoked when transition is done\n   */\n  scrollTo(containerEl: Element | Window, targetTopValue: number = 0, easing?: EasyingFn, callback?: () => void): void {\n    const target = containerEl ? containerEl : window;\n    const scrollTop = this.getScroll(target);\n    const startTime = Date.now();\n    const frameFunc = () => {\n      const timestamp = Date.now();\n      const time = timestamp - startTime;\n      this.setScrollTop(target, (easing || easeInOutCubic)(time, scrollTop, targetTopValue, 450));\n      if (time < 450) {\n        reqAnimFrame(frameFunc);\n      } else {\n        if (callback) {\n          callback();\n        }\n      }\n    };\n    reqAnimFrame(frameFunc);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\n\nimport { NzResizeService } from './resize';\n\nexport enum NzBreakpointEnum {\n  xxl = 'xxl',\n  xl = 'xl',\n  lg = 'lg',\n  md = 'md',\n  sm = 'sm',\n  xs = 'xs'\n}\n\nexport type BreakpointMap = { [key in NzBreakpointEnum]: string };\nexport type BreakpointBooleanMap = { [key in NzBreakpointEnum]: boolean };\nexport type NzBreakpointKey = keyof typeof NzBreakpointEnum;\n\nexport const gridResponsiveMap: BreakpointMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1600px)'\n};\n\nexport const siderResponsiveMap: BreakpointMap = {\n  xs: '(max-width: 479.98px)',\n  sm: '(max-width: 575.98px)',\n  md: '(max-width: 767.98px)',\n  lg: '(max-width: 991.98px)',\n  xl: '(max-width: 1199.98px)',\n  xxl: '(max-width: 1599.98px)'\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzBreakpointService {\n  constructor(private resizeService: NzResizeService, private mediaMatcher: MediaMatcher) {\n    this.resizeService.subscribe().subscribe(() => {});\n  }\n\n  subscribe(breakpointMap: BreakpointMap): Observable<NzBreakpointEnum>;\n  subscribe(breakpointMap: BreakpointMap, fullMap: true): Observable<BreakpointBooleanMap>;\n  subscribe(breakpointMap: BreakpointMap, fullMap?: true): Observable<NzBreakpointEnum | BreakpointBooleanMap> {\n    if (fullMap) {\n      const get = () => this.matchMedia(breakpointMap, true);\n      return this.resizeService.subscribe().pipe(\n        map(get),\n        startWith(get()),\n        distinctUntilChanged((x: [NzBreakpointEnum, BreakpointBooleanMap], y: [NzBreakpointEnum, BreakpointBooleanMap]) => x[0] === y[0]),\n        map(x => x[1])\n      );\n    } else {\n      const get = () => this.matchMedia(breakpointMap);\n      return this.resizeService.subscribe().pipe(map(get), startWith(get()), distinctUntilChanged());\n    }\n  }\n\n  private matchMedia(breakpointMap: BreakpointMap): NzBreakpointEnum;\n  private matchMedia(breakpointMap: BreakpointMap, fullMap: true): [NzBreakpointEnum, BreakpointBooleanMap];\n  private matchMedia(breakpointMap: BreakpointMap, fullMap?: true): NzBreakpointEnum | [NzBreakpointEnum, BreakpointBooleanMap] {\n    let bp = NzBreakpointEnum.md;\n\n    const breakpointBooleanMap: Partial<BreakpointBooleanMap> = {};\n\n    Object.keys(breakpointMap).map(breakpoint => {\n      const castBP = breakpoint as NzBreakpointEnum;\n      const matched = this.mediaMatcher.matchMedia(gridResponsiveMap[castBP]).matches;\n\n      breakpointBooleanMap[breakpoint as NzBreakpointEnum] = matched;\n\n      if (matched) {\n        bp = castBP;\n      }\n    });\n\n    if (fullMap) {\n      return [bp, breakpointBooleanMap as BreakpointBooleanMap];\n    } else {\n      return bp;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './resize';\nexport * from './singleton';\nexport * from './drag';\nexport * from './scroll';\nexport * from './breakpoint';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}