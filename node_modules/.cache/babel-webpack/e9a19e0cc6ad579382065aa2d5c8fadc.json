{"ast":null,"code":"import _toConsumableArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { OverlayConfig, ConnectionPositionPair, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, EventEmitter, ChangeDetectorRef, ElementRef, Optional, Output, NgZone, Host, ContentChildren, ViewChildren, ViewChild, TemplateRef, forwardRef, Directive, ViewContainerRef, Inject, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzInputGroupWhitSuffixOrPrefixDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport { __decorate, __metadata } from 'tslib';\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, TAB, ENTER } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subscription, defer, merge, Subject, fromEvent } from 'rxjs';\nimport { take, switchMap, filter, tap, delay, takeUntil } from 'rxjs/operators';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from 'ng-zorro-antd/input';\n\nfunction NzAutocompleteOptgroupComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.nzLabel);\n  }\n}\n\nvar _c0 = [[[\"nz-auto-option\"]]];\nvar _c1 = [\"nz-auto-option\"];\nvar _c2 = [\"*\"];\nvar _c3 = [\"panel\"];\nvar _c4 = [\"content\"];\n\nfunction NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template(rf, ctx) {}\n\nfunction NzAutocompleteComponent_ng_template_0_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nfunction NzAutocompleteComponent_ng_template_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nz-auto-option\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r9 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"nzValue\", option_r9)(\"nzLabel\", option_r9 && option_r9.label ? option_r9.label : option_r9);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", option_r9 && option_r9.label ? option_r9.label : option_r9, \" \");\n  }\n}\n\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template, 2, 3, \"nz-auto-option\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r6.nzDataSource);\n  }\n}\n\nfunction NzAutocompleteComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(4, NzAutocompleteComponent_ng_template_0_4_Template, 1, 0, undefined, 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, NzAutocompleteComponent_ng_template_0_ng_template_5_Template, 1, 0, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(7, NzAutocompleteComponent_ng_template_0_ng_template_7_Template, 1, 1, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    var _r3 = ɵngcc0.ɵɵreference(6);\n\n    var _r5 = ɵngcc0.ɵɵreference(8);\n\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-select-dropdown-hidden\", !ctx_r0.showPanel);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.nzOverlayClassName)(\"ngStyle\", ctx_r0.nzOverlayStyle)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"@slideMotion\", \"enter\")(\"@.disabled\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzDataSource ? _r5 : _r3);\n  }\n}\n\nvar NzAutocompleteOptgroupComponent = function NzAutocompleteOptgroupComponent() {\n  _classCallCheck(this, NzAutocompleteOptgroupComponent);\n};\n\nNzAutocompleteOptgroupComponent.ɵfac = function NzAutocompleteOptgroupComponent_Factory(t) {\n  return new (t || NzAutocompleteOptgroupComponent)();\n};\n\nNzAutocompleteOptgroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzAutocompleteOptgroupComponent,\n  selectors: [[\"nz-auto-optgroup\"]],\n  inputs: {\n    nzLabel: \"nzLabel\"\n  },\n  exportAs: [\"nzAutoOptgroup\"],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"ant-select-item\", \"ant-select-item-group\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzAutocompleteOptgroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzAutocompleteOptgroupComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzLabel);\n    }\n  },\n  directives: [ɵngcc1.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzAutocompleteOptgroupComponent.ctorParameters = function () {\n  return [];\n};\n\nNzAutocompleteOptgroupComponent.propDecorators = {\n  nzLabel: [{\n    type: Input\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzOptionSelectionChange = function NzOptionSelectionChange(source) {\n  var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  _classCallCheck(this, NzOptionSelectionChange);\n\n  this.source = source;\n  this.isUserInput = isUserInput;\n};\n\nvar NzAutocompleteOptionComponent = /*#__PURE__*/function () {\n  function NzAutocompleteOptionComponent(changeDetectorRef, element, nzAutocompleteOptgroupComponent) {\n    _classCallCheck(this, NzAutocompleteOptionComponent);\n\n    this.changeDetectorRef = changeDetectorRef;\n    this.element = element;\n    this.nzAutocompleteOptgroupComponent = nzAutocompleteOptgroupComponent;\n    this.nzDisabled = false;\n    this.selectionChange = new EventEmitter();\n    this.mouseEntered = new EventEmitter();\n    this.active = false;\n    this.selected = false;\n  }\n\n  _createClass(NzAutocompleteOptionComponent, [{\n    key: \"select\",\n    value: function select() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.selected = true;\n      this.changeDetectorRef.markForCheck();\n\n      if (emit) {\n        this.emitSelectionChangeEvent();\n      }\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.mouseEntered.emit(this);\n    }\n  }, {\n    key: \"deselect\",\n    value: function deselect() {\n      this.selected = false;\n      this.changeDetectorRef.markForCheck();\n      this.emitSelectionChangeEvent();\n    }\n    /** Git display label */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.nzLabel || this.nzValue.toString();\n    }\n    /** Set active (only styles) */\n\n  }, {\n    key: \"setActiveStyles\",\n    value: function setActiveStyles() {\n      if (!this.active) {\n        this.active = true;\n        this.changeDetectorRef.markForCheck();\n      }\n    }\n    /** Unset active (only styles) */\n\n  }, {\n    key: \"setInactiveStyles\",\n    value: function setInactiveStyles() {\n      if (this.active) {\n        this.active = false;\n        this.changeDetectorRef.markForCheck();\n      }\n    }\n  }, {\n    key: \"scrollIntoViewIfNeeded\",\n    value: function scrollIntoViewIfNeeded() {\n      scrollIntoView(this.element.nativeElement);\n    }\n  }, {\n    key: \"selectViaInteraction\",\n    value: function selectViaInteraction() {\n      if (!this.nzDisabled) {\n        this.selected = !this.selected;\n\n        if (this.selected) {\n          this.setActiveStyles();\n        } else {\n          this.setInactiveStyles();\n        }\n\n        this.emitSelectionChangeEvent(true);\n        this.changeDetectorRef.markForCheck();\n      }\n    }\n  }, {\n    key: \"emitSelectionChangeEvent\",\n    value: function emitSelectionChangeEvent() {\n      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n    }\n  }]);\n\n  return NzAutocompleteOptionComponent;\n}();\n\nNzAutocompleteOptionComponent.ɵfac = function NzAutocompleteOptionComponent_Factory(t) {\n  return new (t || NzAutocompleteOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzAutocompleteOptgroupComponent, 8));\n};\n\nNzAutocompleteOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzAutocompleteOptionComponent,\n  selectors: [[\"nz-auto-option\"]],\n  hostAttrs: [\"role\", \"menuitem\", 1, \"ant-select-item\", \"ant-select-item-option\"],\n  hostVars: 10,\n  hostBindings: function NzAutocompleteOptionComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NzAutocompleteOptionComponent_click_HostBindingHandler() {\n        return ctx.selectViaInteraction();\n      })(\"mouseenter\", function NzAutocompleteOptionComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mousedown\", function NzAutocompleteOptionComponent_mousedown_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.nzDisabled.toString());\n      ɵngcc0.ɵɵclassProp(\"ant-select-item-option-grouped\", ctx.nzAutocompleteOptgroupComponent)(\"ant-select-item-option-selected\", ctx.selected)(\"ant-select-item-option-active\", ctx.active)(\"ant-select-item-option-disabled\", ctx.nzDisabled);\n    }\n  },\n  inputs: {\n    nzDisabled: \"nzDisabled\",\n    nzValue: \"nzValue\",\n    nzLabel: \"nzLabel\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\",\n    mouseEntered: \"mouseEntered\"\n  },\n  exportAs: [\"nzAutoOption\"],\n  ngContentSelectors: _c2,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"ant-select-item-option-content\"]],\n  template: function NzAutocompleteOptionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzAutocompleteOptionComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: NzAutocompleteOptgroupComponent,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nNzAutocompleteOptionComponent.propDecorators = {\n  nzValue: [{\n    type: Input\n  }],\n  nzLabel: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  selectionChange: [{\n    type: Output\n  }],\n  mouseEntered: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzAutocompleteOptionComponent.prototype, \"nzDisabled\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzAutocompleteComponent = /*#__PURE__*/function () {\n  function NzAutocompleteComponent(changeDetectorRef, ngZone, noAnimation) {\n    var _this = this;\n\n    _classCallCheck(this, NzAutocompleteComponent);\n\n    this.changeDetectorRef = changeDetectorRef;\n    this.ngZone = ngZone;\n    this.noAnimation = noAnimation;\n    this.nzOverlayClassName = '';\n    this.nzOverlayStyle = {};\n    this.nzDefaultActiveFirstOption = true;\n    this.nzBackfill = false;\n\n    this.compareWith = function (o1, o2) {\n      return o1 === o2;\n    };\n\n    this.selectionChange = new EventEmitter();\n    this.showPanel = true;\n    this.isOpen = false;\n    this.activeItemIndex = -1;\n    this.selectionChangeSubscription = Subscription.EMPTY;\n    this.optionMouseEnterSubscription = Subscription.EMPTY;\n    this.dataSourceChangeSubscription = Subscription.EMPTY;\n    /** Options changes listener */\n\n    this.optionSelectionChanges = defer(function () {\n      if (_this.options) {\n        return merge.apply(void 0, _toConsumableArray(_this.options.map(function (option) {\n          return option.selectionChange;\n        })));\n      }\n\n      return _this.ngZone.onStable.asObservable().pipe(take(1), switchMap(function () {\n        return _this.optionSelectionChanges;\n      }));\n    });\n    this.optionMouseEnter = defer(function () {\n      if (_this.options) {\n        return merge.apply(void 0, _toConsumableArray(_this.options.map(function (option) {\n          return option.mouseEntered;\n        })));\n      }\n\n      return _this.ngZone.onStable.asObservable().pipe(take(1), switchMap(function () {\n        return _this.optionMouseEnter;\n      }));\n    });\n  }\n  /**\n   * Options accessor, its source may be content or dataSource\n   */\n\n\n  _createClass(NzAutocompleteComponent, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      if (!this.nzDataSource) {\n        this.optionsInit();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.nzDataSource) {\n        this.optionsInit();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.dataSourceChangeSubscription.unsubscribe();\n      this.selectionChangeSubscription.unsubscribe();\n      this.optionMouseEnterSubscription.unsubscribe();\n    }\n  }, {\n    key: \"setVisibility\",\n    value: function setVisibility() {\n      this.showPanel = !!this.options.length;\n      this.changeDetectorRef.markForCheck();\n    }\n  }, {\n    key: \"setActiveItem\",\n    value: function setActiveItem(index) {\n      var activeItem = this.options.toArray()[index];\n\n      if (activeItem && !activeItem.active) {\n        this.activeItem = activeItem;\n        this.activeItemIndex = index;\n        this.clearSelectedOptions(this.activeItem);\n        this.activeItem.setActiveStyles();\n        this.changeDetectorRef.markForCheck();\n      }\n    }\n  }, {\n    key: \"setNextItemActive\",\n    value: function setNextItemActive() {\n      var nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n      this.setActiveItem(nextIndex);\n    }\n  }, {\n    key: \"setPreviousItemActive\",\n    value: function setPreviousItemActive() {\n      var previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n      this.setActiveItem(previousIndex);\n    }\n  }, {\n    key: \"getOptionIndex\",\n    value: function getOptionIndex(value) {\n      var _this2 = this;\n\n      return this.options.reduce(function (result, current, index) {\n        return result === -1 ? _this2.compareWith(value, current.nzValue) ? index : -1 : result;\n      }, -1);\n    }\n  }, {\n    key: \"getOption\",\n    value: function getOption(value) {\n      var _this3 = this;\n\n      return this.options.find(function (item) {\n        return _this3.compareWith(value, item.nzValue);\n      }) || null;\n    }\n  }, {\n    key: \"optionsInit\",\n    value: function optionsInit() {\n      var _this4 = this;\n\n      this.setVisibility();\n      this.subscribeOptionChanges();\n      var changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes; // async\n\n      this.dataSourceChangeSubscription = changes.subscribe(function (e) {\n        if (!e.dirty && _this4.isOpen) {\n          setTimeout(function () {\n            return _this4.setVisibility();\n          });\n        }\n\n        _this4.subscribeOptionChanges();\n      });\n    }\n    /**\n     * Clear the status of options\n     */\n\n  }, {\n    key: \"clearSelectedOptions\",\n    value: function clearSelectedOptions(skip) {\n      var deselect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.options.forEach(function (option) {\n        if (option !== skip) {\n          if (deselect) {\n            option.deselect();\n          }\n\n          option.setInactiveStyles();\n        }\n      });\n    }\n  }, {\n    key: \"subscribeOptionChanges\",\n    value: function subscribeOptionChanges() {\n      var _this5 = this;\n\n      this.selectionChangeSubscription.unsubscribe();\n      this.selectionChangeSubscription = this.optionSelectionChanges.pipe(filter(function (event) {\n        return event.isUserInput;\n      })).subscribe(function (event) {\n        event.source.select();\n        event.source.setActiveStyles();\n        _this5.activeItem = event.source;\n        _this5.activeItemIndex = _this5.getOptionIndex(_this5.activeItem.nzValue);\n\n        _this5.clearSelectedOptions(event.source, true);\n\n        _this5.selectionChange.emit(event.source);\n      });\n      this.optionMouseEnterSubscription.unsubscribe();\n      this.optionMouseEnterSubscription = this.optionMouseEnter.subscribe(function (event) {\n        event.setActiveStyles();\n        _this5.activeItem = event;\n        _this5.activeItemIndex = _this5.getOptionIndex(_this5.activeItem.nzValue);\n\n        _this5.clearSelectedOptions(event);\n      });\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      // first dataSource\n      if (this.nzDataSource) {\n        return this.fromDataSourceOptions;\n      } else {\n        return this.fromContentOptions;\n      }\n    }\n  }]);\n\n  return NzAutocompleteComponent;\n}();\n\nNzAutocompleteComponent.ɵfac = function NzAutocompleteComponent_Factory(t) {\n  return new (t || NzAutocompleteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzNoAnimationDirective, 9));\n};\n\nNzAutocompleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzAutocompleteComponent,\n  selectors: [[\"nz-autocomplete\"]],\n  contentQueries: function NzAutocompleteComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzAutocompleteOptionComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fromContentOptions = _t);\n    }\n  },\n  viewQuery: function NzAutocompleteComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n      ɵngcc0.ɵɵviewQuery(_c3, true);\n      ɵngcc0.ɵɵviewQuery(_c4, true);\n      ɵngcc0.ɵɵviewQuery(NzAutocompleteOptionComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fromDataSourceOptions = _t);\n    }\n  },\n  inputs: {\n    nzOverlayClassName: \"nzOverlayClassName\",\n    nzOverlayStyle: \"nzOverlayStyle\",\n    nzDefaultActiveFirstOption: \"nzDefaultActiveFirstOption\",\n    nzBackfill: \"nzBackfill\",\n    compareWith: \"compareWith\",\n    nzWidth: \"nzWidth\",\n    nzDataSource: \"nzDataSource\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  exportAs: [\"nzAutocomplete\"],\n  ngContentSelectors: _c2,\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"ant-select-dropdown\", \"ant-select-dropdown-placement-bottomLeft\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\"], [\"panel\", \"\"], [2, \"max-height\", \"256px\", \"overflow-y\", \"auto\", \"overflow-anchor\", \"none\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [4, \"ngTemplateOutlet\"], [\"contentTemplate\", \"\"], [\"optionsTemplate\", \"\"], [3, \"nzValue\", \"nzLabel\", 4, \"ngFor\", \"ngForOf\"], [3, \"nzValue\", \"nzLabel\"]],\n  template: function NzAutocompleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_Template, 9, 8, \"ng-template\");\n    }\n  },\n  directives: [ɵngcc3.NgClass, ɵngcc3.NgStyle, ɵngcc2.NzNoAnimationDirective, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgForOf, NzAutocompleteOptionComponent],\n  encapsulation: 2,\n  data: {\n    animation: [slideMotion]\n  },\n  changeDetection: 0\n});\n\nNzAutocompleteComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NgZone\n  }, {\n    type: NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nNzAutocompleteComponent.propDecorators = {\n  nzWidth: [{\n    type: Input\n  }],\n  nzOverlayClassName: [{\n    type: Input\n  }],\n  nzOverlayStyle: [{\n    type: Input\n  }],\n  nzDefaultActiveFirstOption: [{\n    type: Input\n  }],\n  nzBackfill: [{\n    type: Input\n  }],\n  compareWith: [{\n    type: Input\n  }],\n  nzDataSource: [{\n    type: Input\n  }],\n  selectionChange: [{\n    type: Output\n  }],\n  fromContentOptions: [{\n    type: ContentChildren,\n    args: [NzAutocompleteOptionComponent, {\n      descendants: true\n    }]\n  }],\n  fromDataSourceOptions: [{\n    type: ViewChildren,\n    args: [NzAutocompleteOptionComponent]\n  }],\n  template: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: false\n    }]\n  }],\n  panel: [{\n    type: ViewChild,\n    args: ['panel', {\n      static: false\n    }]\n  }],\n  content: [{\n    type: ViewChild,\n    args: ['content', {\n      static: false\n    }]\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzAutocompleteComponent.prototype, \"nzDefaultActiveFirstOption\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzAutocompleteComponent.prototype, \"nzBackfill\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAutocompleteOptgroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-auto-optgroup',\n      exportAs: 'nzAutoOptgroup',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div class=\\\"ant-select-item ant-select-item-group\\\">\\n      <ng-container *nzStringTemplateOutlet=\\\"nzLabel\\\">{{ nzLabel }}</ng-container>\\n    </div>\\n    <ng-content select=\\\"nz-auto-option\\\"></ng-content>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzLabel: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAutocompleteOptionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-auto-option',\n      exportAs: 'nzAutoOption',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div class=\\\"ant-select-item-option-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n      host: {\n        role: 'menuitem',\n        class: 'ant-select-item ant-select-item-option',\n        '[class.ant-select-item-option-grouped]': 'nzAutocompleteOptgroupComponent',\n        '[class.ant-select-item-option-selected]': 'selected',\n        '[class.ant-select-item-option-active]': 'active',\n        '[class.ant-select-item-option-disabled]': 'nzDisabled',\n        '[attr.aria-selected]': 'selected.toString()',\n        '[attr.aria-disabled]': 'nzDisabled.toString()',\n        '(click)': 'selectViaInteraction()',\n        '(mouseenter)': 'onMouseEnter()',\n        '(mousedown)': '$event.preventDefault()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NzAutocompleteOptgroupComponent,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzDisabled: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    mouseEntered: [{\n      type: Output\n    }],\n    nzValue: [{\n      type: Input\n    }],\n    nzLabel: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAutocompleteComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-autocomplete',\n      exportAs: 'nzAutocomplete',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-template>\\n      <div\\n        #panel\\n        class=\\\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\\\"\\n        [class.ant-select-dropdown-hidden]=\\\"!showPanel\\\"\\n        [ngClass]=\\\"nzOverlayClassName\\\"\\n        [ngStyle]=\\\"nzOverlayStyle\\\"\\n        [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [@slideMotion]=\\\"'enter'\\\"\\n        [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n      >\\n        <div style=\\\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\\\">\\n          <div style=\\\"display: flex; flex-direction: column;\\\">\\n            <ng-template *ngTemplateOutlet=\\\"nzDataSource ? optionsTemplate : contentTemplate\\\"></ng-template>\\n          </div>\\n        </div>\\n      </div>\\n      <ng-template #contentTemplate>\\n        <ng-content></ng-content>\\n      </ng-template>\\n      <ng-template #optionsTemplate>\\n        <nz-auto-option\\n          *ngFor=\\\"let option of nzDataSource!\\\"\\n          [nzValue]=\\\"option\\\"\\n          [nzLabel]=\\\"option && $any(option).label ? $any(option).label : $any(option)\\\"\\n        >\\n          {{ option && $any(option).label ? $any(option).label : $any(option) }}\\n        </nz-auto-option>\\n      </ng-template>\\n    </ng-template>\\n  \",\n      animations: [slideMotion]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc2.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzOverlayClassName: [{\n      type: Input\n    }],\n    nzOverlayStyle: [{\n      type: Input\n    }],\n    nzDefaultActiveFirstOption: [{\n      type: Input\n    }],\n    nzBackfill: [{\n      type: Input\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    nzWidth: [{\n      type: Input\n    }],\n    nzDataSource: [{\n      type: Input\n    }],\n    fromContentOptions: [{\n      type: ContentChildren,\n      args: [NzAutocompleteOptionComponent, {\n        descendants: true\n      }]\n    }],\n    fromDataSourceOptions: [{\n      type: ViewChildren,\n      args: [NzAutocompleteOptionComponent]\n    }],\n    template: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }],\n    panel: [{\n      type: ViewChild,\n      args: ['panel', {\n        static: false\n      }]\n    }],\n    content: [{\n      type: ViewChild,\n      args: ['content', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NzAutocompleteTriggerDirective;\n  }),\n  multi: true\n};\n\nfunction getNzAutocompleteMissingPanelError() {\n  return Error('Attempting to open an undefined instance of `nz-autocomplete`. ' + 'Make sure that the id passed to the `nzAutocomplete` is correct and that ' + \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n\nvar NzAutocompleteTriggerDirective = /*#__PURE__*/function () {\n  function NzAutocompleteTriggerDirective(elementRef, overlay, viewContainerRef, nzInputGroupWhitSuffixOrPrefixDirective, document) {\n    _classCallCheck(this, NzAutocompleteTriggerDirective);\n\n    this.elementRef = elementRef;\n    this.overlay = overlay;\n    this.viewContainerRef = viewContainerRef;\n    this.nzInputGroupWhitSuffixOrPrefixDirective = nzInputGroupWhitSuffixOrPrefixDirective;\n    this.document = document;\n\n    this.onChange = function () {};\n\n    this.onTouched = function () {};\n\n    this.panelOpen = false;\n    this.destroy$ = new Subject();\n    this.overlayRef = null;\n    this.portal = null;\n    this.previousValue = null;\n  }\n  /** Current active option */\n\n\n  _createClass(NzAutocompleteTriggerDirective, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyPanel();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      var _this6 = this;\n\n      Promise.resolve(null).then(function () {\n        return _this6.setTriggerValue(value);\n      });\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      var element = this.elementRef.nativeElement;\n      element.disabled = isDisabled;\n      this.closePanel();\n    }\n  }, {\n    key: \"openPanel\",\n    value: function openPanel() {\n      this.previousValue = this.elementRef.nativeElement.value;\n      this.attachOverlay();\n      this.updateStatus();\n    }\n  }, {\n    key: \"closePanel\",\n    value: function closePanel() {\n      if (this.panelOpen) {\n        this.nzAutocomplete.isOpen = this.panelOpen = false;\n\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n          this.selectionChangeSubscription.unsubscribe();\n          this.overlayBackdropClickSubscription.unsubscribe();\n          this.optionsChangeSubscription.unsubscribe();\n          this.overlayRef.dispose();\n          this.overlayRef = null;\n          this.portal = null;\n        }\n      }\n    }\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(event) {\n      var keyCode = event.keyCode;\n      var isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n      if (keyCode === ESCAPE) {\n        event.preventDefault();\n      }\n\n      if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n        // Reset value when tab / ESC close\n        if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n          this.setTriggerValue(this.previousValue);\n        }\n\n        this.closePanel();\n      } else if (this.panelOpen && keyCode === ENTER) {\n        if (this.nzAutocomplete.showPanel && this.activeOption) {\n          event.preventDefault();\n          this.activeOption.selectViaInteraction();\n        }\n      } else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (keyCode === UP_ARROW) {\n          this.nzAutocomplete.setPreviousItemActive();\n        } else {\n          this.nzAutocomplete.setNextItemActive();\n        }\n\n        if (this.activeOption) {\n          this.activeOption.scrollIntoViewIfNeeded();\n        }\n\n        this.doBackfill();\n      }\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(event) {\n      var target = event.target;\n      var document = this.document;\n      var value = target.value;\n\n      if (target.type === 'number') {\n        value = value === '' ? null : parseFloat(value);\n      }\n\n      if (this.previousValue !== value) {\n        this.previousValue = value;\n        this.onChange(value);\n\n        if (this.canOpen() && document.activeElement === event.target) {\n          this.openPanel();\n        }\n      }\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      if (this.canOpen()) {\n        this.openPanel();\n      }\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this.onTouched();\n    }\n    /**\n     * Subscription data source changes event\n     */\n\n  }, {\n    key: \"subscribeOptionsChange\",\n    value: function subscribeOptionsChange() {\n      var _this7 = this;\n\n      var optionChanges = this.nzAutocomplete.options.changes.pipe(tap(function () {\n        return _this7.positionStrategy.reapplyLastPosition();\n      }), delay(0));\n      return optionChanges.subscribe(function () {\n        _this7.resetActiveItem();\n\n        if (_this7.panelOpen) {\n          _this7.overlayRef.updatePosition();\n        }\n      });\n    }\n    /**\n     * Subscription option changes event and set the value\n     */\n\n  }, {\n    key: \"subscribeSelectionChange\",\n    value: function subscribeSelectionChange() {\n      var _this8 = this;\n\n      return this.nzAutocomplete.selectionChange.subscribe(function (option) {\n        _this8.setValueAndClose(option);\n      });\n    }\n    /**\n     * Subscription external click and close panel\n     */\n\n  }, {\n    key: \"subscribeOverlayBackdropClick\",\n    value: function subscribeOverlayBackdropClick() {\n      var _this9 = this;\n\n      return merge(fromEvent(this.document, 'click'), fromEvent(this.document, 'touchend')).subscribe(function (event) {\n        var clickTarget = event.target; // Make sure is not self\n\n        if (clickTarget !== _this9.elementRef.nativeElement && !_this9.overlayRef.overlayElement.contains(clickTarget) && _this9.panelOpen) {\n          _this9.closePanel();\n        }\n      });\n    }\n  }, {\n    key: \"attachOverlay\",\n    value: function attachOverlay() {\n      var _this10 = this;\n\n      if (!this.nzAutocomplete) {\n        throw getNzAutocompleteMissingPanelError();\n      }\n\n      if (!this.portal && this.nzAutocomplete.template) {\n        this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n      }\n\n      if (!this.overlayRef) {\n        this.overlayRef = this.overlay.create(this.getOverlayConfig());\n      }\n\n      if (this.overlayRef && !this.overlayRef.hasAttached()) {\n        this.overlayRef.attach(this.portal);\n        this.selectionChangeSubscription = this.subscribeSelectionChange();\n        this.overlayBackdropClickSubscription = this.subscribeOverlayBackdropClick();\n        this.optionsChangeSubscription = this.subscribeOptionsChange();\n        this.overlayRef.detachments().pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this10.closePanel();\n        });\n      }\n\n      this.nzAutocomplete.isOpen = this.panelOpen = true;\n    }\n  }, {\n    key: \"updateStatus\",\n    value: function updateStatus() {\n      if (this.overlayRef) {\n        this.overlayRef.updateSize({\n          width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n        });\n      }\n\n      this.nzAutocomplete.setVisibility();\n      this.resetActiveItem();\n\n      if (this.activeOption) {\n        this.activeOption.scrollIntoViewIfNeeded();\n      }\n    }\n  }, {\n    key: \"destroyPanel\",\n    value: function destroyPanel() {\n      if (this.overlayRef) {\n        this.closePanel();\n      }\n    }\n  }, {\n    key: \"getOverlayConfig\",\n    value: function getOverlayConfig() {\n      return new OverlayConfig({\n        positionStrategy: this.getOverlayPosition(),\n        disposeOnNavigation: true,\n        scrollStrategy: this.overlay.scrollStrategies.reposition(),\n        // default host element width\n        width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n      });\n    }\n  }, {\n    key: \"getConnectedElement\",\n    value: function getConnectedElement() {\n      return this.nzInputGroupWhitSuffixOrPrefixDirective ? this.nzInputGroupWhitSuffixOrPrefixDirective.elementRef : this.elementRef;\n    }\n  }, {\n    key: \"getHostWidth\",\n    value: function getHostWidth() {\n      return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n  }, {\n    key: \"getOverlayPosition\",\n    value: function getOverlayPosition() {\n      var positions = [new ConnectionPositionPair({\n        originX: 'start',\n        originY: 'bottom'\n      }, {\n        overlayX: 'start',\n        overlayY: 'top'\n      }), new ConnectionPositionPair({\n        originX: 'start',\n        originY: 'top'\n      }, {\n        overlayX: 'start',\n        overlayY: 'bottom'\n      })];\n      this.positionStrategy = this.overlay.position().flexibleConnectedTo(this.getConnectedElement()).withFlexibleDimensions(false).withPush(false).withPositions(positions).withTransformOriginOn('.ant-select-dropdown');\n      return this.positionStrategy;\n    }\n  }, {\n    key: \"resetActiveItem\",\n    value: function resetActiveItem() {\n      var index = this.nzAutocomplete.getOptionIndex(this.previousValue);\n      this.nzAutocomplete.clearSelectedOptions(null, true);\n\n      if (index !== -1) {\n        this.nzAutocomplete.setActiveItem(index);\n        this.nzAutocomplete.activeItem.select(false);\n      } else {\n        this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n      }\n    }\n  }, {\n    key: \"setValueAndClose\",\n    value: function setValueAndClose(option) {\n      var value = option.nzValue;\n      this.setTriggerValue(option.getLabel());\n      this.onChange(value);\n      this.elementRef.nativeElement.focus();\n      this.closePanel();\n    }\n  }, {\n    key: \"setTriggerValue\",\n    value: function setTriggerValue(value) {\n      var option = this.nzAutocomplete.getOption(value);\n      var displayValue = option ? option.getLabel() : value;\n      this.elementRef.nativeElement.value = displayValue != null ? displayValue : '';\n\n      if (!this.nzAutocomplete.nzBackfill) {\n        this.previousValue = displayValue;\n      }\n    }\n  }, {\n    key: \"doBackfill\",\n    value: function doBackfill() {\n      if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n        this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n      }\n    }\n  }, {\n    key: \"canOpen\",\n    value: function canOpen() {\n      var element = this.elementRef.nativeElement;\n      return !element.readOnly && !element.disabled;\n    }\n  }, {\n    key: \"activeOption\",\n    get: function get() {\n      if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n        return this.nzAutocomplete.activeItem;\n      }\n    }\n  }]);\n\n  return NzAutocompleteTriggerDirective;\n}();\n\nNzAutocompleteTriggerDirective.ɵfac = function NzAutocompleteTriggerDirective_Factory(t) {\n  return new (t || NzAutocompleteTriggerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.NzInputGroupWhitSuffixOrPrefixDirective, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8));\n};\n\nNzAutocompleteTriggerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzAutocompleteTriggerDirective,\n  selectors: [[\"input\", \"nzAutocomplete\", \"\"], [\"textarea\", \"nzAutocomplete\", \"\"]],\n  hostAttrs: [\"autocomplete\", \"off\", \"aria-autocomplete\", \"list\"],\n  hostBindings: function NzAutocompleteTriggerDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focusin\", function NzAutocompleteTriggerDirective_focusin_HostBindingHandler() {\n        return ctx.handleFocus();\n      })(\"blur\", function NzAutocompleteTriggerDirective_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"input\", function NzAutocompleteTriggerDirective_input_HostBindingHandler($event) {\n        return ctx.handleInput($event);\n      })(\"keydown\", function NzAutocompleteTriggerDirective_keydown_HostBindingHandler($event) {\n        return ctx.handleKeydown($event);\n      });\n    }\n  },\n  inputs: {\n    nzAutocomplete: \"nzAutocomplete\"\n  },\n  exportAs: [\"nzAutocompleteTrigger\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NZ_AUTOCOMPLETE_VALUE_ACCESSOR])]\n});\n\nNzAutocompleteTriggerDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Overlay\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: NzInputGroupWhitSuffixOrPrefixDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nNzAutocompleteTriggerDirective.propDecorators = {\n  nzAutocomplete: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAutocompleteTriggerDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"input[nzAutocomplete], textarea[nzAutocomplete]\",\n      exportAs: 'nzAutocompleteTrigger',\n      providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n      host: {\n        autocomplete: 'off',\n        'aria-autocomplete': 'list',\n        '(focusin)': 'handleFocus()',\n        '(blur)': 'handleBlur()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc4.Overlay\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc5.NzInputGroupWhitSuffixOrPrefixDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    nzAutocomplete: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzAutocompleteModule = function NzAutocompleteModule() {\n  _classCallCheck(this, NzAutocompleteModule);\n};\n\nNzAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzAutocompleteModule\n});\nNzAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzAutocompleteModule_Factory(t) {\n    return new (t || NzAutocompleteModule)();\n  },\n  imports: [[CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzAutocompleteModule, {\n    declarations: function declarations() {\n      return [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule];\n    },\n    exports: function exports() {\n      return [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAutocompleteModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\n      exports: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\n      imports: [CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NZ_AUTOCOMPLETE_VALUE_ACCESSOR, NzAutocompleteComponent, NzAutocompleteModule, NzAutocompleteOptgroupComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzOptionSelectionChange, getNzAutocompleteMissingPanelError };","map":{"version":3,"sources":["../../components/auto-complete/autocomplete-optgroup.component.ts","../../components/auto-complete/autocomplete-option.component.ts","../../components/auto-complete/autocomplete.component.ts","../../components/auto-complete/autocomplete-trigger.directive.ts","../../components/auto-complete/autocomplete.module.ts","../../components/auto-complete/public-api.ts","../../components/auto-complete/ng-zorro-antd-auto-complete.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBa,+B,GAGX,2CAAA;AAAA;AAAgB,C;;gDAhBjB,uC,CAAU,C,EAAA;AAAA,SACT,KAAU,CAAA,IAAA,+BAAV,GADS;AAET,C;;AAAQ,+BAAkB,CAAA,IAAlB,GACR,MAAA,CAAA,iBAAA,CAA0B;AAAA,EAAA,IAAA,EAAA,+BAAA;AACT,EAAA,SAAA,EAAA,CAAA,CAAA,kBAAA,CAAA,CADS;AACqB,EAAA,MAC/C,EAAA;AAAA,IAAA,OAAA,EAAa;AAAb,GAF0B;AAEX,EAAA,QAAkB,EAAI,CAAA,gBAAA,CAFX;AAG1B,EAAA,kBAAU,EAAA,GAHgB;AAGhB,EAAA,KAAA,EAAA,CAHgB;AAGhB,EAAA,IAAA,EAAA,CAHgB;AAGhB,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,wBAAA,CAAA,CAHgB;AAGhB,EAAA,QAAA,EAAA,SAAA,wCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAKT;AACF,MAAA,MAAA,CAAA,eAAA,CAAA,GAAA;;;;;;;;;;;GAT2B;sDAAA;kBAAA;mBAUvB;AAVuB,CAA1B,CADQ;;AAWJ,+BAAA,CAAA,cAAA,GAAA;AAAA,SAAA,EAAA;AAAA,CAAA;;AACY,+BAAA,CAAA,cAAA,GAAA;AAGlB,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAHG;AAGH,GAAA;AAHkB,CAAA;ACrBlB;;;;;IAqBa,uB,GACX,iCAAmB,MAAnB,EAA6F;AAAA,MAA5B,WAA4B,uEAAL,KAAK;;AAAA;;AAA1E,OAAA,MAAA,GAAA,MAAA;AAA8C,OAAA,WAAA,GAAA,WAAA;AAAgC,C;;IA4BtF,6B;AAYX,yCACU,iBADV,EAEU,OAFV,EAIS,+BAJT,EAIyE;AAAA;;AAH/D,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,OAAA,GAAA,OAAA;AAED,SAAA,+BAAA,GAAA,+BAAA;AAXgB,SAAA,UAAA,GAAa,KAAb;AACN,SAAA,eAAA,GAAkB,IAAI,YAAJ,EAAlB;AACA,SAAA,YAAA,GAAe,IAAI,YAAJ,EAAf;AAEnB,SAAA,MAAA,GAAS,KAAT;AACA,SAAA,QAAA,GAAW,KAAX;AAOI;;;;6BAEuB;AAAA,UAApB,IAAoB,uEAAJ,IAAI;AACzB,WAAK,QAAL,GAAgB,IAAhB;AACA,WAAK,iBAAL,CAAuB,YAAvB;;AACA,UAAI,IAAJ,EAAU;AACR,aAAK,wBAAL;AACD;AACF;;;mCAEW;AACV,WAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB;AACD;;;+BAEO;AACN,WAAK,QAAL,GAAgB,KAAhB;AACA,WAAK,iBAAL,CAAuB,YAAvB;AACA,WAAK,wBAAL;AACD;AACH;;;;+BAEU;AACN,aAAO,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,QAAb,EAAvB;AACD;AACH;;;;sCAEiB;AACb,UAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,aAAK,MAAL,GAAc,IAAd;AACA,aAAK,iBAAL,CAAuB,YAAvB;AACD;AACF;AACH;;;;wCAEmB;AACf,UAAI,KAAK,MAAT,EAAiB;AACf,aAAK,MAAL,GAAc,KAAd;AACA,aAAK,iBAAL,CAAuB,YAAvB;AACD;AACF;;;6CAEqB;AACpB,MAAA,cAAc,CAAC,KAAK,OAAL,CAAa,aAAd,CAAd;AACD;;;2CAEmB;AAClB,UAAI,CAAC,KAAK,UAAV,EAAsB;AACpB,aAAK,QAAL,GAAgB,CAAC,KAAK,QAAtB;;AACA,YAAI,KAAK,QAAT,EAAmB;AACjB,eAAK,eAAL;AACD,SAFD,MAEO;AACL,eAAK,iBAAL;AACD;;AACD,aAAK,wBAAL,CAA8B,IAA9B;AACA,aAAK,iBAAL,CAAuB,YAAvB;AACD;AACF;;;+CAE4D;AAAA,UAA5B,WAA4B,uEAAL,KAAK;AAC3D,WAAK,eAAL,CAAqB,IAArB,CAA0B,IAAI,uBAAJ,CAA4B,IAA5B,EAAkC,WAAlC,CAA1B;AACD;;;;;;8CAtGF,qC,CAAU,C,EAAA;AAAA,SACT,KAAQ,CAAA,IAAE,6BAAV,EACA,MAAA,CAAA,iBAAA,CAAwB,MAAA,CAAA,iBAAxB,CADA,EAEA,MAAA,CAAA,iBAAA,CAA0B,MAAA,CAAA,UAA1B,CAFA,EAGA,MAAiB,CAAA,iBAAjB,CAAiB,+BAAjB,EACA,CADA,CAHA,CADS;AAKT,C;;AAAa,6BAAwB,CAAA,IAAxB,GAAwB,MACrC,CAAA,iBADqC,CAC3B;AAAA,EAAA,IAAA,EAAA,6BAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,gBAAA,CAAA,CAAA;AAAA,EAAA,SAAA,EAAA,CAAA,MAAA,EAIT,UAJS,EAIT,CAJS,EAKV,iBALU,EAKJ,wBALI,CAAA;AAMQ,EAAA,QAAA,EAAA,EANR;AAMQ,EAAA,YACT,EAAA,SAAA,0CAAA,CAAwC,EAAxC,EAAwC,GAAxC,EACP;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;aAAwC,U,CAAE,O,EAAA,SAAA,sDAAA,GAC1C;AAAA,eAAA,GAAA,CAAA,oBAAA,EAAA;AAAqD,O,EAAA,Y,EACrD,SAAA,2DAAA,GACA;AAAA,eAAA,GAAA,CAAA,YAAA,EAAA;AAAA,O,EAAA,W,EAA2C,SAAA,0DAAA,CACnB,MADmB,EACnB;AAAqB,eAAA,MAAA,CAAA,cAAA,EAAA;AAC7C,O;;;AAAsB,QAAE,EAAA,GAAA,CAAF,EAAE;AAAuB,MAAA,MAAA,CAAA,WAAA,CAAA,eAAA,EACtC,GAAE,CAAA,QAAF,CAAE,QAAF,EADsC,EACZ,eADY,EACZ,GAAA,CAAA,UAAA,CACnC,QADmC,EADY;AAEf,MAAA,MAAA,CAAA,WAAA,CAAA,gCAAA,EACjB,GAAA,CAAA,+BADiB,EAEjC,iCAFiC,EAGnC,GAAA,CAAA,QAHmC,EAGnC,+BAHmC,EAGnC,GAAA,CAAA,MAHmC,EAGnC,iCAHmC,EAGnC,GAAA,CAAA,UAHmC;;GAfxB;;;;;GAAA;;;;GAAA;4BAAA;yBAAA;UAAA;SAAA;iDAAA;;;;;;;;GAAA;kBAAA;mBAmBP;AAnBO,CAD2B,CAAxB;;AAoBT,6BAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACU;AAAA,IAAA,IAAA,EA5Cd;AA4Cc,GADV,EA1CJ;AAAA,IAAA,IAAA,EACA;AADA,GA0CI,EAxCJ;AAAA,IAAA,IAAA,EASO,+BATP;AASsC,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA8CnC;AA9CmC,KAAA;AATtC,GAwCI,CAAA;AAAA,CAAA;;AAgBA,6BAAA,CAAA,cAAA,GAAA;AAAiD,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAbpD;AAaoD,GAAA,CAAjD;AAbO,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAaP;AAZO,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAYP;AAXO,EAAA,eAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAWP;AAVQ,EAAA,YAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACX;AADW,GAAA;AAUR,CAAA;;AAXqB,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACR,6BAAA,CAAA,SADQ,EACR,YADQ,EACR,KAD2B,CAAnB,CAAA;ACvD3B;;;;;;IAkFa,uB;AAiEX,mCACU,iBADV,EAEU,MAFV,EAG6B,WAH7B,EAGiE;AAAA;;AAAA;;AAFvD,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACmB,SAAA,WAAA,GAAA,WAAA;AA/DpB,SAAA,kBAAA,GAAqB,EAArB;AACA,SAAA,cAAA,GAA4C,EAA5C;AACgB,SAAA,0BAAA,GAA6B,IAA7B;AACA,SAAA,UAAA,GAAa,KAAb;;AAChB,SAAA,WAAA,GAA2B,UAAC,EAAD,EAAK,EAAL;AAAA,aAAY,EAAE,KAAK,EAAnB;AAAA,KAA3B;;AAGA,SAAA,eAAA,GAA+D,IAAI,YAAJ,EAA/D;AAET,SAAA,SAAA,GAAqB,IAArB;AACA,SAAA,MAAA,GAAkB,KAAlB;AA0BQ,SAAA,eAAA,GAA0B,CAAC,CAA3B;AACA,SAAA,2BAAA,GAA8B,YAAY,CAAC,KAA3C;AACA,SAAA,4BAAA,GAA+B,YAAY,CAAC,KAA5C;AACA,SAAA,4BAAA,GAA+B,YAAY,CAAC,KAA5C;AACV;;AACW,SAAA,sBAAA,GAA8D,KAAK,CAAC,YAAA;AAC3E,UAAI,KAAI,CAAC,OAAT,EAAkB;AAChB,eAAO,KAAK,MAAL,4BAAkC,KAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,UAAA,MAAM;AAAA,iBAAI,MAAM,CAAC,eAAX;AAAA,SAAvB,CAAlC,EAAP;AACD;;AACD,aAAO,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,YAArB,GAAoC,IAApC,CACL,IAAI,CAAC,CAAD,CADC,EAEL,SAAS,CAAC;AAAA,eAAM,KAAI,CAAC,sBAAX;AAAA,OAAD,CAFJ,CAAP;AAID,KAR2E,CAAnE;AASA,SAAA,gBAAA,GAA8D,KAAK,CAAC,YAAA;AAC3E,UAAI,KAAI,CAAC,OAAT,EAAkB;AAChB,eAAO,KAAK,MAAL,4BAAwC,KAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,UAAA,MAAM;AAAA,iBAAI,MAAM,CAAC,YAAX;AAAA,SAAvB,CAAxC,EAAP;AACD;;AACD,aAAO,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,YAArB,GAAoC,IAApC,CACL,IAAI,CAAC,CAAD,CADC,EAEL,SAAS,CAAC;AAAA,eAAM,KAAI,CAAC,gBAAX;AAAA,OAAD,CAFJ,CAAP;AAID,KAR2E,CAAnE;AAcL;AACN;;;;;;;yCACoB;AAChB,UAAI,CAAC,KAAK,YAAV,EAAwB;AACtB,aAAK,WAAL;AACD;AACF;;;sCAEc;AACb,UAAI,KAAK,YAAT,EAAuB;AACrB,aAAK,WAAL;AACD;AACF;;;kCAEU;AACT,WAAK,4BAAL,CAAkC,WAAlC;AACA,WAAK,2BAAL,CAAiC,WAAjC;AACA,WAAK,4BAAL,CAAkC,WAAlC;AACD;;;oCAEY;AACX,WAAK,SAAL,GAAiB,CAAC,CAAC,KAAK,OAAL,CAAa,MAAhC;AACA,WAAK,iBAAL,CAAuB,YAAvB;AACD;;;kCAEa,K,EAAa;AACzB,UAAM,UAAU,GAAG,KAAK,OAAL,CAAa,OAAb,GAAuB,KAAvB,CAAnB;;AACA,UAAI,UAAU,IAAI,CAAC,UAAU,CAAC,MAA9B,EAAsC;AACpC,aAAK,UAAL,GAAkB,UAAlB;AACA,aAAK,eAAL,GAAuB,KAAvB;AACA,aAAK,oBAAL,CAA0B,KAAK,UAA/B;AACA,aAAK,UAAL,CAAgB,eAAhB;AACA,aAAK,iBAAL,CAAuB,YAAvB;AACD;AACF;;;wCAEgB;AACf,UAAM,SAAS,GAAG,KAAK,eAAL,GAAuB,CAAvB,IAA4B,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAlD,GAAsD,KAAK,eAAL,GAAuB,CAA7E,GAAiF,CAAnG;AACA,WAAK,aAAL,CAAmB,SAAnB;AACD;;;4CAEoB;AACnB,UAAM,aAAa,GAAG,KAAK,eAAL,GAAuB,CAAvB,GAA2B,CAA3B,GAA+B,KAAK,OAAL,CAAa,MAAb,GAAsB,CAArD,GAAyD,KAAK,eAAL,GAAuB,CAAtG;AACA,WAAK,aAAL,CAAmB,aAAnB;AACD;;;mCAEc,K,EAAgB;AAAA;;AAC7B,aAAO,KAAK,OAAL,CAAa,MAAb,CAAoB,UAAC,MAAD,EAAiB,OAAjB,EAAyD,KAAzD,EAAsE;AAC/F,eAAO,MAAM,KAAK,CAAC,CAAZ,GAAiB,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,OAAO,CAAC,OAAhC,IAA2C,KAA3C,GAAmD,CAAC,CAArE,GAA0E,MAAjF;AACD,OAFM,EAEJ,CAAC,CAFG,CAAP;AAGD;;;8BAES,K,EAAgB;AAAA;;AACxB,aAAO,KAAK,OAAL,CAAa,IAAb,CAAkB,UAAA,IAAI;AAAA,eAAI,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,IAAI,CAAC,OAA7B,CAAJ;AAAA,OAAtB,KAAoE,IAA3E;AACD;;;kCAEkB;AAAA;;AACjB,WAAK,aAAL;AACA,WAAK,sBAAL;AACA,UAAM,OAAO,GAAG,KAAK,YAAL,GAAoB,KAAK,qBAAL,CAA2B,OAA/C,GAAyD,KAAK,kBAAL,CAAwB,OAAjG,CAHiB,CAIrB;;AACI,WAAK,4BAAL,GAAoC,OAAO,CAAC,SAAR,CAAkB,UAAA,CAAC,EAAA;AACrD,YAAI,CAAC,CAAC,CAAC,KAAH,IAAY,MAAI,CAAC,MAArB,EAA6B;AAC3B,UAAA,UAAU,CAAC;AAAA,mBAAM,MAAI,CAAC,aAAL,EAAN;AAAA,WAAD,CAAV;AACD;;AACD,QAAA,MAAI,CAAC,sBAAL;AACD,OALmC,CAApC;AAMD;AACH;;;;;;yCAIuB,I,EAAsE;AAAA,UAAzB,QAAyB,uEAAL,KAAK;AACzF,WAAK,OAAL,CAAa,OAAb,CAAqB,UAAA,MAAM,EAAA;AACzB,YAAI,MAAM,KAAK,IAAf,EAAqB;AACnB,cAAI,QAAJ,EAAc;AACZ,YAAA,MAAM,CAAC,QAAP;AACD;;AACD,UAAA,MAAM,CAAC,iBAAP;AACD;AACF,OAPD;AAQD;;;6CAE6B;AAAA;;AAC5B,WAAK,2BAAL,CAAiC,WAAjC;AACA,WAAK,2BAAL,GAAmC,KAAK,sBAAL,CAChC,IADgC,CAC3B,MAAM,CAAC,UAAC,KAAD;AAAA,eAAoC,KAAK,CAAC,WAA1C;AAAA,OAAD,CADqB,EAEhC,SAFgC,CAEtB,UAAC,KAAD,EAA+B;AACxC,QAAA,KAAK,CAAC,MAAN,CAAa,MAAb;AACA,QAAA,KAAK,CAAC,MAAN,CAAa,eAAb;AACA,QAAA,MAAI,CAAC,UAAL,GAAkB,KAAK,CAAC,MAAxB;AACA,QAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,cAAL,CAAoB,MAAI,CAAC,UAAL,CAAgB,OAApC,CAAvB;;AACA,QAAA,MAAI,CAAC,oBAAL,CAA0B,KAAK,CAAC,MAAhC,EAAwC,IAAxC;;AACA,QAAA,MAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,KAAK,CAAC,MAAhC;AACD,OATgC,CAAnC;AAWA,WAAK,4BAAL,CAAkC,WAAlC;AACA,WAAK,4BAAL,GAAoC,KAAK,gBAAL,CAAsB,SAAtB,CAAgC,UAAC,KAAD,EAAqC;AACvG,QAAA,KAAK,CAAC,eAAN;AACA,QAAA,MAAI,CAAC,UAAL,GAAkB,KAAlB;AACA,QAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,cAAL,CAAoB,MAAI,CAAC,UAAL,CAAgB,OAApC,CAAvB;;AACA,QAAA,MAAI,CAAC,oBAAL,CAA0B,KAA1B;AACD,OALmC,CAApC;AAMD;;;wBAvJU;AAAK;AAEd,UAAI,KAAK,YAAT,EAAuB;AACrB,eAAO,KAAK,qBAAZ;AACD,OAFD,MAEO;AACL,eAAO,KAAK,kBAAZ;AACD;AACF;;;;;;wCApEF,+B,CAAU,C,EAAA;AAAA,SAAA,KACT,CAAA,IAAA,uBADS,EACkB,MAAA,CAAA,iBAAA,CACjB,MAAA,CAAA,iBADiB,CADlB,EAEiB,MAC1B,CAAA,iBAD0B,CACP,MAAO,CAAA,MADA,CAFjB,EAGiB,MAAA,CAAA,iBAAA,CACT,MAAA,CAAA,sBADS,EACqB,CADrB,CAHjB,CAAA;AAIsC,C;;AAC/C,uBAAa,CAAE,IAAf,GAAe,MAAA,CAAA,iBAAA,CAAsB;AAAA,EAAA,IAAA,EACrC,uBADqC;AAC3B,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAD2B;AAC3B,EAAA,cAAA,EAAA,SAAA,sCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;GAD2B;;;;;;;;;;;;;;;;;GAAA;;;;;AAgCpC,IAAA,UAAA,EAAA,Y;AACD,IAAA,WAAa,EAAA,a;AAAY,IAAA,OAAA,EAC1B,S;AAAA,IAAA,YAAA,EAAA;GAlCsC;AAkCtC,EAAA,OAAA,EAAA;AAAA,IAAA,eAAA,EAAA;AAAA,GAlCsC;AAkCtC,EAAA,QAAA,EAAA,CAAA,gBAAA,CAlCsC;AAkCtC,EAAA,kBAAA,EAAA,GAlCsC;AAkCtC,EAAA,KAAA,EAAA,CAlCsC;AAkCtC,EAAA,IAAA,EAAA,CAlCsC;AAkCtC,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,qBAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,OAAA,EAAA,YAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,MAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,CAAA,CAlCsC;AAkCtC,EAAA,QAAA,EAAA,SAAA,gCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;GAlCsC;qJAAA;kBAAA;;;GAAA;mBAmClC;AAnCkC,CAAtB,CAAf;;AAmCI,uBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAiD;AAAA,IAAA,IAAA,EAzErD;AAyEqD,GAAjD,EAxEJ;AAAA,IAAA,IAAA,EAMA;AANA,GAwEI,EAjEJ;AAAA,IAAA,IAAA,EAUO,sBAVP;AAU6B,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA2H1B;AA3H0B,KAAA,EA2HtB;AAAA,MAAA,IAAA,EAAI;AAAJ,KA3HsB;AAV7B,GAiEI,CAAA;AAAA,CAAA;;AAoEwB,uBAAA,CAAA,cAAA,GAAA;AACzB,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAjEF;AAiEE,GAAA,CADyB;AAhEjB,EAAA,kBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAgEiB;AA/DjB,EAAA,cAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA+DiB;AA9DjB,EAAA,0BAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA8DiB;AA7DjB,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA6DiB;AA5DjB,EAAA,WAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA4DiB;AA3DjB,EAAA,YAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA2DiB;AA1DjB,EAAA,eAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA0DiB;AAxD5B,EAAA,kBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAmBC,eAnBD;AAmBgB,IAAA,IAAA,EAAA,CAAC,6BAAD,EAAgC;AAAE,MAAA,WAAW,EAAE;AAAf,KAAhC;AAnBhB,GAAA,CAwD4B;AApCzB,EAAA,qBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEF,YAFE;AAEU,IAAA,IAAA,EAAA,CAAC,6BAAD;AAFV,GAAA,CAoCyB;AAlCsB,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGjD,SAHiD;AAGxC,IAAA,IAAA,EAAA,CAAC,WAAD,EAAc;AAAE,MAAA,MAAM,EAAE;AAAV,KAAd;AAHwC,GAAA,CAkCtB;AA/BoB,EAAA,KAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAC/C,SAD+C;AACtC,IAAA,IAAA,EAAA,CAAC,OAAD,EAAU;AAAE,MAAA,MAAM,EAAE;AAAV,KAAV;AADsC,GAAA,CA+BpB;AA9BgB,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAC3C,SAD2C;AAClC,IAAA,IAAA,EAAA,CAAC,SAAD,EAAY;AAAE,MAAA,MAAM,EAAE;AAAV,KAAZ;AADkC,GAAA;AA8BhB,CAAA;;AA7DH,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACvB,uBAAA,CAAA,SADuB,EACvB,4BADuB,EACvB,KADyD,CAAlC,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACR,uBAAA,CAAA,SADQ,EACR,YADQ,EACR,KAD2B,CAAnB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC3B,C;AC3FA;;;;;;AAIA,IAuBa,8BAA8B,GAAqB;AAC9D,EAAA,OAAO,EAAE,iBADqD;AAE9D,EAAA,WAAW,EAAE,UAAU,CAAC;AAAA,WAAM,8BAAN;AAAA,GAAD,CAFuC;AAG9D,EAAA,KAAK,EAAE;AAHuD,CAvBhE;;AA4BA,SACgB,kCADhB,GACkD;AAChD,SAAO,KAAK,CACV,oEACE,2EADF,GAEE,iEAHQ,CAAZ;AAKD;;IAeY,8B;AAwBX,0CACU,UADV,EAEU,OAFV,EAGU,gBAHV,EAIsB,uCAJtB,EAKwC,QALxC,EAK2D;AAAA;;AAJjD,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,gBAAA,GAAA,gBAAA;AACY,SAAA,uCAAA,GAAA,uCAAA;AACkB,SAAA,QAAA,GAAA,QAAA;;AAzBxC,SAAA,QAAA,GAAyB,YAAA,CAAQ,CAAjC;;AACA,SAAA,SAAA,GAA2B,YAAA,CAAQ,CAAnC;;AACA,SAAA,SAAA,GAAqB,KAArB;AASQ,SAAA,QAAA,GAAW,IAAI,OAAJ,EAAX;AACA,SAAA,UAAA,GAAgC,IAAhC;AACA,SAAA,MAAA,GAAoC,IAApC;AAEA,SAAA,aAAA,GAAwC,IAAxC;AAWJ;AACN;;;;;kCACa;AACT,WAAK,YAAL;AACD;;;+BAEU,K,EAAgB;AAAA;;AACzB,MAAA,OAAO,CAAC,OAAR,CAAgB,IAAhB,EAAsB,IAAtB,CAA2B;AAAA,eAAM,MAAI,CAAC,eAAL,CAAqB,KAArB,CAAN;AAAA,OAA3B;AACD;;;qCAEgB,E,EAAqB;AACpC,WAAK,QAAL,GAAgB,EAAhB;AACD;;;sCAEiB,E,EAAY;AAC5B,WAAK,SAAL,GAAiB,EAAjB;AACD;;;qCAEgB,U,EAAmB;AAClC,UAAM,OAAO,GAAqB,KAAK,UAAL,CAAgB,aAAlD;AACA,MAAA,OAAO,CAAC,QAAR,GAAmB,UAAnB;AACA,WAAK,UAAL;AACD;;;gCAEQ;AACP,WAAK,aAAL,GAAqB,KAAK,UAAL,CAAgB,aAAhB,CAA8B,KAAnD;AACA,WAAK,aAAL;AACA,WAAK,YAAL;AACD;;;iCAES;AACR,UAAI,KAAK,SAAT,EAAoB;AAClB,aAAK,cAAL,CAAoB,MAApB,GAA6B,KAAK,SAAL,GAAiB,KAA9C;;AAEA,YAAI,KAAK,UAAL,IAAmB,KAAK,UAAL,CAAgB,WAAhB,EAAvB,EAAsD;AACpD,eAAK,2BAAL,CAAiC,WAAjC;AACA,eAAK,gCAAL,CAAsC,WAAtC;AACA,eAAK,yBAAL,CAA+B,WAA/B;AACA,eAAK,UAAL,CAAgB,OAAhB;AACA,eAAK,UAAL,GAAkB,IAAlB;AACA,eAAK,MAAL,GAAc,IAAd;AACD;AACF;AACF;;;kCAEa,K,EAAoB;AAChC,UAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,UAAM,UAAU,GAAG,OAAO,KAAK,QAAZ,IAAwB,OAAO,KAAK,UAAvD;;AAEA,UAAI,OAAO,KAAK,MAAhB,EAAwB;AACtB,QAAA,KAAK,CAAC,cAAN;AACD;;AAED,UAAI,KAAK,SAAL,KAAmB,OAAO,KAAK,MAAZ,IAAsB,OAAO,KAAK,GAArD,CAAJ,EAA+D;AACnE;AACM,YAAI,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,QAAlB,OAAiC,KAAK,aAA/D,EAA8E;AAC5E,eAAK,eAAL,CAAqB,KAAK,aAA1B;AACD;;AACD,aAAK,UAAL;AACD,OAND,MAMO,IAAI,KAAK,SAAL,IAAkB,OAAO,KAAK,KAAlC,EAAyC;AAC9C,YAAI,KAAK,cAAL,CAAoB,SAApB,IAAiC,KAAK,YAA1C,EAAwD;AACtD,UAAA,KAAK,CAAC,cAAN;AACA,eAAK,YAAL,CAAkB,oBAAlB;AACD;AACF,OALM,MAKA,IAAI,KAAK,SAAL,IAAkB,UAAlB,IAAgC,KAAK,cAAL,CAAoB,SAAxD,EAAmE;AACxE,QAAA,KAAK,CAAC,eAAN;AACA,QAAA,KAAK,CAAC,cAAN;;AACA,YAAI,OAAO,KAAK,QAAhB,EAA0B;AACxB,eAAK,cAAL,CAAoB,qBAApB;AACD,SAFD,MAEO;AACL,eAAK,cAAL,CAAoB,iBAApB;AACD;;AACD,YAAI,KAAK,YAAT,EAAuB;AACrB,eAAK,YAAL,CAAkB,sBAAlB;AACD;;AACD,aAAK,UAAL;AACD;AACF;;;gCAEW,K,EAAoB;AAC9B,UAAM,MAAM,GAAG,KAAK,CAAC,MAArB;AACA,UAAM,QAAQ,GAAG,KAAK,QAAtB;AACA,UAAI,KAAK,GAA2B,MAAM,CAAC,KAA3C;;AAEA,UAAI,MAAM,CAAC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAA,KAAK,GAAG,KAAK,KAAK,EAAV,GAAe,IAAf,GAAsB,UAAU,CAAC,KAAD,CAAxC;AACD;;AACD,UAAI,KAAK,aAAL,KAAuB,KAA3B,EAAkC;AAChC,aAAK,aAAL,GAAqB,KAArB;AACA,aAAK,QAAL,CAAc,KAAd;;AAEA,YAAI,KAAK,OAAL,MAAkB,QAAQ,CAAC,aAAT,KAA2B,KAAK,CAAC,MAAvD,EAA+D;AAC7D,eAAK,SAAL;AACD;AACF;AACF;;;kCAEU;AACT,UAAI,KAAK,OAAL,EAAJ,EAAoB;AAClB,aAAK,SAAL;AACD;AACF;;;iCAES;AACR,WAAK,SAAL;AACD;AACH;;;;;;6CAIgC;AAAA;;AAC5B,UAAM,aAAa,GAAG,KAAK,cAAL,CAAoB,OAApB,CAA4B,OAA5B,CAAoC,IAApC,CACpB,GAAG,CAAC;AAAA,eAAM,MAAI,CAAC,gBAAL,CAAsB,mBAAtB,EAAN;AAAA,OAAD,CADiB,EAEpB,KAAK,CAAC,CAAD,CAFe,CAAtB;AAIA,aAAO,aAAa,CAAC,SAAd,CAAwB,YAAA;AAC7B,QAAA,MAAI,CAAC,eAAL;;AACA,YAAI,MAAI,CAAC,SAAT,EAAoB;AAClB,UAAA,MAAI,CAAC,UAAL,CAAiB,cAAjB;AACD;AACF,OALM,CAAP;AAMD;AACH;;;;;;+CAIkC;AAAA;;AAC9B,aAAO,KAAK,cAAL,CAAoB,eAApB,CAAoC,SAApC,CAA8C,UAAC,MAAD,EAAsC;AACzF,QAAA,MAAI,CAAC,gBAAL,CAAsB,MAAtB;AACD,OAFM,CAAP;AAGD;AACH;;;;;;oDAIuC;AAAA;;AACnC,aAAO,KAAK,CACV,SAAS,CAAa,KAAK,QAAlB,EAA4B,OAA5B,CADC,EAEV,SAAS,CAAa,KAAK,QAAlB,EAA4B,UAA5B,CAFC,CAAL,CAGL,SAHK,CAGK,UAAC,KAAD,EAA+B;AACzC,YAAM,WAAW,GAAG,KAAK,CAAC,MAA1B,CADyC,CAE/C;;AAEM,YAAI,WAAW,KAAK,MAAI,CAAC,UAAL,CAAgB,aAAhC,IAAiD,CAAC,MAAI,CAAC,UAAL,CAAiB,cAAjB,CAAgC,QAAhC,CAAyC,WAAzC,CAAlD,IAA2G,MAAI,CAAC,SAApH,EAA+H;AAC7H,UAAA,MAAI,CAAC,UAAL;AACD;AACF,OAVM,CAAP;AAWD;;;oCAEoB;AAAA;;AACnB,UAAI,CAAC,KAAK,cAAV,EAA0B;AACxB,cAAM,kCAAkC,EAAxC;AACD;;AAED,UAAI,CAAC,KAAK,MAAN,IAAgB,KAAK,cAAL,CAAoB,QAAxC,EAAkD;AAChD,aAAK,MAAL,GAAc,IAAI,cAAJ,CAAmB,KAAK,cAAL,CAAoB,QAAvC,EAAiD,KAAK,gBAAtD,CAAd;AACD;;AAED,UAAI,CAAC,KAAK,UAAV,EAAsB;AACpB,aAAK,UAAL,GAAkB,KAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,gBAAL,EAApB,CAAlB;AACD;;AAED,UAAI,KAAK,UAAL,IAAmB,CAAC,KAAK,UAAL,CAAgB,WAAhB,EAAxB,EAAuD;AACrD,aAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAK,MAA5B;AACA,aAAK,2BAAL,GAAmC,KAAK,wBAAL,EAAnC;AACA,aAAK,gCAAL,GAAwC,KAAK,6BAAL,EAAxC;AACA,aAAK,yBAAL,GAAiC,KAAK,sBAAL,EAAjC;AACA,aAAK,UAAL,CACG,WADH,GAEG,IAFH,CAEQ,SAAS,CAAC,KAAK,QAAN,CAFjB,EAGG,SAHH,CAGa,YAAA;AACT,UAAA,OAAI,CAAC,UAAL;AACD,SALH;AAMD;;AACD,WAAK,cAAL,CAAoB,MAApB,GAA6B,KAAK,SAAL,GAAiB,IAA9C;AACD;;;mCAEmB;AAClB,UAAI,KAAK,UAAT,EAAqB;AACnB,aAAK,UAAL,CAAgB,UAAhB,CAA2B;AAAE,UAAA,KAAK,EAAE,KAAK,cAAL,CAAoB,OAApB,IAA+B,KAAK,YAAL;AAAxC,SAA3B;AACD;;AACD,WAAK,cAAL,CAAoB,aAApB;AACA,WAAK,eAAL;;AACA,UAAI,KAAK,YAAT,EAAuB;AACrB,aAAK,YAAL,CAAkB,sBAAlB;AACD;AACF;;;mCAEmB;AAClB,UAAI,KAAK,UAAT,EAAqB;AACnB,aAAK,UAAL;AACD;AACF;;;uCAEuB;AACtB,aAAO,IAAI,aAAJ,CAAkB;AACvB,QAAA,gBAAgB,EAAE,KAAK,kBAAL,EADK;AAEvB,QAAA,mBAAmB,EAAE,IAFE;AAGvB,QAAA,cAAc,EAAE,KAAK,OAAL,CAAa,gBAAb,CAA8B,UAA9B,EAHO;AAI7B;AACM,QAAA,KAAK,EAAE,KAAK,cAAL,CAAoB,OAApB,IAA+B,KAAK,YAAL;AALf,OAAlB,CAAP;AAOD;;;0CAE0B;AACzB,aAAO,KAAK,uCAAL,GAA+C,KAAK,uCAAL,CAA6C,UAA5F,GAAyG,KAAK,UAArH;AACD;;;mCAEmB;AAClB,aAAO,KAAK,mBAAL,GAA2B,aAA3B,CAAyC,qBAAzC,GAAiE,KAAxE;AACD;;;yCAEyB;AACxB,UAAM,SAAS,GAAG,CAChB,IAAI,sBAAJ,CAA2B;AAAE,QAAA,OAAO,EAAE,OAAX;AAAoB,QAAA,OAAO,EAAE;AAA7B,OAA3B,EAAoE;AAAE,QAAA,QAAQ,EAAE,OAAZ;AAAqB,QAAA,QAAQ,EAAE;AAA/B,OAApE,CADgB,EAEhB,IAAI,sBAAJ,CAA2B;AAAE,QAAA,OAAO,EAAE,OAAX;AAAoB,QAAA,OAAO,EAAE;AAA7B,OAA3B,EAAiE;AAAE,QAAA,QAAQ,EAAE,OAAZ;AAAqB,QAAA,QAAQ,EAAE;AAA/B,OAAjE,CAFgB,CAAlB;AAIA,WAAK,gBAAL,GAAwB,KAAK,OAAL,CACrB,QADqB,GAErB,mBAFqB,CAED,KAAK,mBAAL,EAFC,EAGrB,sBAHqB,CAGE,KAHF,EAIrB,QAJqB,CAIZ,KAJY,EAKrB,aALqB,CAKP,SALO,EAMrB,qBANqB,CAMC,sBAND,CAAxB;AAOA,aAAO,KAAK,gBAAZ;AACD;;;sCAEsB;AACrB,UAAM,KAAK,GAAG,KAAK,cAAL,CAAoB,cAApB,CAAmC,KAAK,aAAxC,CAAd;AACA,WAAK,cAAL,CAAoB,oBAApB,CAAyC,IAAzC,EAA+C,IAA/C;;AACA,UAAI,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,aAAK,cAAL,CAAoB,aAApB,CAAkC,KAAlC;AACA,aAAK,cAAL,CAAoB,UAApB,CAA+B,MAA/B,CAAsC,KAAtC;AACD,OAHD,MAGO;AACL,aAAK,cAAL,CAAoB,aAApB,CAAkC,KAAK,cAAL,CAAoB,0BAApB,GAAiD,CAAjD,GAAqD,CAAC,CAAxF;AACD;AACF;;;qCAEwB,M,EAAqC;AAC5D,UAAM,KAAK,GAAG,MAAM,CAAC,OAArB;AACA,WAAK,eAAL,CAAqB,MAAM,CAAC,QAAP,EAArB;AACA,WAAK,QAAL,CAAc,KAAd;AACA,WAAK,UAAL,CAAgB,aAAhB,CAA8B,KAA9B;AACA,WAAK,UAAL;AACD;;;oCAEuB,K,EAAgB;AACtC,UAAM,MAAM,GAAG,KAAK,cAAL,CAAoB,SAApB,CAA8B,KAA9B,CAAf;AACA,UAAM,YAAY,GAAG,MAAM,GAAG,MAAM,CAAC,QAAP,EAAH,GAAuB,KAAlD;AACA,WAAK,UAAL,CAAgB,aAAhB,CAA8B,KAA9B,GAAsC,YAAY,IAAI,IAAhB,GAAuB,YAAvB,GAAsC,EAA5E;;AACA,UAAI,CAAC,KAAK,cAAL,CAAoB,UAAzB,EAAqC;AACnC,aAAK,aAAL,GAAqB,YAArB;AACD;AACF;;;iCAEiB;AAChB,UAAI,KAAK,cAAL,CAAoB,UAApB,IAAkC,KAAK,cAAL,CAAoB,UAA1D,EAAsE;AACpE,aAAK,eAAL,CAAqB,KAAK,cAAL,CAAoB,UAApB,CAA+B,QAA/B,EAArB;AACD;AACF;;;8BAEc;AACb,UAAM,OAAO,GAAqB,KAAK,UAAL,CAAgB,aAAlD;AACA,aAAO,CAAC,OAAO,CAAC,QAAT,IAAqB,CAAC,OAAO,CAAC,QAArC;AACD;;;wBA7Re;AACd,UAAI,KAAK,cAAL,IAAuB,KAAK,cAAL,CAAoB,OAApB,CAA4B,MAAvD,EAA+D;AAC7D,eAAO,KAAK,cAAL,CAAoB,UAA3B;AACD;AACF;;;;;;+CA1BF,sC,CAAU,C,EAAA;AAAA,SACT,KAAQ,CAAE,IAAA,8BAAV,EAAU,MAAA,CAAA,iBAAA,CAAiD,MAC3D,CAAA,UADU,CAAV,EACU,MAAA,CAAA,iBAAA,CAAuB,MAAA,CAAA,OAAvB,CADV,EAEA,MAAW,CAAC,iBAAZ,CAAY,MAAA,CAAA,gBAAZ,CAFA,EAE2C,MAC3C,CAAA,iBAD2C,CACrC,MAAA,CAAA,uCADqC,EAEtB,CAFsB,CAF3C,EAKE,MAAA,CAAA,iBAAA,CAA2B,QAA3B,EAA2B,CAA3B,CALF,CADS;AAMoB,C;;AAC3B,8BAAa,CAAe,IAA5B,GAA4B,MAAA,CAAA,iBAAA,CAClB;AAAA,EAAA,IAAA,EAAA,8BAAA;AACV,EAAA,SAAW,EAAA,CAAA,CAAA,OAAA,EAAA,gBAAA,EAAqB,EAArB,CAAA,EAAqB,CAAA,UAAA,EAChC,gBADgC,EACnB,EADmB,CAArB,CADD;AAEG,EAAA,SAAuB,EAAA,CAAA,cAAA,EACrC,KADqC,EACrC,mBADqC,EAEvC,MAFuC,CAF1B;AAIb,EAAA,YAAA,EAAA,SAAA,2CAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;;GAJa;;;GAAA;qCAAA;wCAKT,8B;AALS,CADkB,CAA5B;;AAME,8BAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAwD;AAAA,IAAA,IAAA,EAtC1C;AAsC0C,GAAxD,EAtC4B;AAAA,IAAA,IAAA,EAPhC;AAOgC,GAsC5B,EA5CJ;AAAA,IAAA,IAAA,EAMgG;AANhG,GA4CI,EAtCgH;AAAA,IAAA,IAAA,EAG7G,uCAH6G;AAGtE,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA+D3C;AA/D2C,KAAA;AAHsE,GAsChH,EA4Bc;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACf;AADe,KAAA,EACP;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,QAAD;AAAV,KADO;AAAA,GA5Bd,CAAA;AAAA,CAAA;;AA6BqC,8BAAA,CAAA,cAAA,GAAA;AAGpB,EAAA,cAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EA9BpB;AA8BoB,GAAA;AAHoB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3B7B,C;ACxDd;;;;;;IAwBa,oB;;;;mCALZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACa,oBAAG,CAAA,IAAH,GAAG,MAAA,CAAA,gBAAA,CAAyB;AAAA,EAAA,OAAA,EAAA,SAA+B,4BAA/B,CAA+D,CAA/D,EAA+D;AAAA,WAAA,KAAA,CAAA,IAAA,oBAAA,GAAA;AAAgC,GAA/F;AACxC,EAAA,OAAO,EAAE,CAAC,CAAA,YAAA,EAAA,aAAA,EAAyB,WAAzB,EAAyB,cAAzB,EAAwD,mBAAxD,EAAwD,aAAxD,CAAD;AAD+B,CAAzB,CAAH;;;GACqH,OAAC,SAAD,KAAC,WAAD,IACvH,S,KAAc,MAAA,CAAA,kBAAA,CAA4B,oBAA5B,EAA4C;AAAA,IAAA,YAAqB,EAAA,wBAAc;AAAA,aAAA,CAAA,uBAAA,EACxG,6BADwG,EACxG,8BADwG,EACxG,+BADwG,CAAA;AACxG,KADqE;AACrE,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,YAAA,EAAA,aAAA,EAAA,WAAA,EAAA,cAAA,EAAA,mBAAA,EAAA,aAAA,CAAA;AAAA,KADqE;AACrE,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,uBAAA,EAAA,6BAAA,EAAA,8BAAA,EAAA,+BAAA,CAAA;AAAA;AADqE,GAA5C,C;AACzB,C;;;;;;;;;;;;;AACI,C;ACxBL;;;;;ACAA;;;;;AAIA,SAAA,8BAAA,EAAA,uBAAA,EAAA,oBAAA,EAAA,+BAAA,EAAA,6BAAA,EAAA,8BAAA,EAAA,uBAAA,EAAA,kCAAA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-auto-optgroup',\n  exportAs: 'nzAutoOptgroup',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"ant-select-item ant-select-item-group\">\n      <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n    </div>\n    <ng-content select=\"nz-auto-option\"></ng-content>\n  `\n})\nexport class NzAutocompleteOptgroupComponent {\n  @Input() nzLabel?: string | TemplateRef<void>;\n\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, scrollIntoView } from 'ng-zorro-antd/core/util';\n\nimport { NzAutocompleteOptgroupComponent } from './autocomplete-optgroup.component';\n\nexport class NzOptionSelectionChange {\n  constructor(public source: NzAutocompleteOptionComponent, public isUserInput: boolean = false) {}\n}\n\n@Component({\n  selector: 'nz-auto-option',\n  exportAs: 'nzAutoOption',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    role: 'menuitem',\n    class: 'ant-select-item ant-select-item-option',\n    '[class.ant-select-item-option-grouped]': 'nzAutocompleteOptgroupComponent',\n    '[class.ant-select-item-option-selected]': 'selected',\n    '[class.ant-select-item-option-active]': 'active',\n    '[class.ant-select-item-option-disabled]': 'nzDisabled',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'nzDisabled.toString()',\n    '(click)': 'selectViaInteraction()',\n    '(mouseenter)': 'onMouseEnter()',\n    '(mousedown)': '$event.preventDefault()'\n  }\n})\nexport class NzAutocompleteOptionComponent {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  @Input() nzValue: NzSafeAny;\n  @Input() nzLabel?: string;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Output() readonly selectionChange = new EventEmitter<NzOptionSelectionChange>();\n  @Output() readonly mouseEntered = new EventEmitter<NzAutocompleteOptionComponent>();\n\n  active = false;\n  selected = false;\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private element: ElementRef,\n    @Optional()\n    public nzAutocompleteOptgroupComponent: NzAutocompleteOptgroupComponent\n  ) {}\n\n  select(emit: boolean = true): void {\n    this.selected = true;\n    this.changeDetectorRef.markForCheck();\n    if (emit) {\n      this.emitSelectionChangeEvent();\n    }\n  }\n\n  onMouseEnter(): void {\n    this.mouseEntered.emit(this);\n  }\n\n  deselect(): void {\n    this.selected = false;\n    this.changeDetectorRef.markForCheck();\n    this.emitSelectionChangeEvent();\n  }\n\n  /** Git display label */\n  getLabel(): string {\n    return this.nzLabel || this.nzValue.toString();\n  }\n\n  /** Set active (only styles) */\n  setActiveStyles(): void {\n    if (!this.active) {\n      this.active = true;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Unset active (only styles) */\n  setInactiveStyles(): void {\n    if (this.active) {\n      this.active = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  scrollIntoViewIfNeeded(): void {\n    scrollIntoView(this.element.nativeElement);\n  }\n\n  selectViaInteraction(): void {\n    if (!this.nzDisabled) {\n      this.selected = !this.selected;\n      if (this.selected) {\n        this.setActiveStyles();\n      } else {\n        this.setInactiveStyles();\n      }\n      this.emitSelectionChangeEvent(true);\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  private emitSelectionChangeEvent(isUserInput: boolean = false): void {\n    this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { BooleanInput, CompareWith, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { defer, merge, Observable, Subscription } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { NzAutocompleteOptionComponent, NzOptionSelectionChange } from './autocomplete-option.component';\n\nexport interface AutocompleteDataSourceItem {\n  value: string;\n  label: string;\n}\n\nexport type AutocompleteDataSource = Array<AutocompleteDataSourceItem | string | number>;\n\n@Component({\n  selector: 'nz-autocomplete',\n  exportAs: 'nzAutocomplete',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-template>\n      <div\n        #panel\n        class=\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-select-dropdown-hidden]=\"!showPanel\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [@slideMotion]=\"'enter'\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      >\n        <div style=\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\">\n          <div style=\"display: flex; flex-direction: column;\">\n            <ng-template *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"></ng-template>\n          </div>\n        </div>\n      </div>\n      <ng-template #contentTemplate>\n        <ng-content></ng-content>\n      </ng-template>\n      <ng-template #optionsTemplate>\n        <nz-auto-option\n          *ngFor=\"let option of nzDataSource!\"\n          [nzValue]=\"option\"\n          [nzLabel]=\"option && $any(option).label ? $any(option).label : $any(option)\"\n        >\n          {{ option && $any(option).label ? $any(option).label : $any(option) }}\n        </nz-auto-option>\n      </ng-template>\n    </ng-template>\n  `,\n  animations: [slideMotion]\n})\nexport class NzAutocompleteComponent implements AfterContentInit, AfterViewInit, OnDestroy {\n  static ngAcceptInputType_nzDefaultActiveFirstOption: BooleanInput;\n  static ngAcceptInputType_nzBackfill: BooleanInput;\n\n  @Input() nzWidth?: number;\n  @Input() nzOverlayClassName = '';\n  @Input() nzOverlayStyle: { [key: string]: string } = {};\n  @Input() @InputBoolean() nzDefaultActiveFirstOption = true;\n  @Input() @InputBoolean() nzBackfill = false;\n  @Input() compareWith: CompareWith = (o1, o2) => o1 === o2;\n  @Input() nzDataSource?: AutocompleteDataSource;\n  @Output()\n  readonly selectionChange: EventEmitter<NzAutocompleteOptionComponent> = new EventEmitter<NzAutocompleteOptionComponent>();\n\n  showPanel: boolean = true;\n  isOpen: boolean = false;\n  activeItem!: NzAutocompleteOptionComponent;\n\n  /**\n   * Options accessor, its source may be content or dataSource\n   */\n  get options(): QueryList<NzAutocompleteOptionComponent> {\n    // first dataSource\n    if (this.nzDataSource) {\n      return this.fromDataSourceOptions;\n    } else {\n      return this.fromContentOptions;\n    }\n  }\n\n  /** Provided by content */\n  @ContentChildren(NzAutocompleteOptionComponent, { descendants: true })\n  fromContentOptions!: QueryList<NzAutocompleteOptionComponent>;\n  /** Provided by dataSource */\n  @ViewChildren(NzAutocompleteOptionComponent) fromDataSourceOptions!: QueryList<NzAutocompleteOptionComponent>;\n\n  /** cdk-overlay */\n  @ViewChild(TemplateRef, { static: false }) template?: TemplateRef<{}>;\n  @ViewChild('panel', { static: false }) panel?: ElementRef;\n  @ViewChild('content', { static: false }) content?: ElementRef;\n\n  private activeItemIndex: number = -1;\n  private selectionChangeSubscription = Subscription.EMPTY;\n  private optionMouseEnterSubscription = Subscription.EMPTY;\n  private dataSourceChangeSubscription = Subscription.EMPTY;\n  /** Options changes listener */\n  readonly optionSelectionChanges: Observable<NzOptionSelectionChange> = defer(() => {\n    if (this.options) {\n      return merge<NzOptionSelectionChange>(...this.options.map(option => option.selectionChange));\n    }\n    return this.ngZone.onStable.asObservable().pipe(\n      take(1),\n      switchMap(() => this.optionSelectionChanges)\n    );\n  });\n  readonly optionMouseEnter: Observable<NzAutocompleteOptionComponent> = defer(() => {\n    if (this.options) {\n      return merge<NzAutocompleteOptionComponent>(...this.options.map(option => option.mouseEntered));\n    }\n    return this.ngZone.onStable.asObservable().pipe(\n      take(1),\n      switchMap(() => this.optionMouseEnter)\n    );\n  });\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngAfterContentInit(): void {\n    if (!this.nzDataSource) {\n      this.optionsInit();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzDataSource) {\n      this.optionsInit();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.dataSourceChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription.unsubscribe();\n    this.optionMouseEnterSubscription.unsubscribe();\n  }\n\n  setVisibility(): void {\n    this.showPanel = !!this.options.length;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  setActiveItem(index: number): void {\n    const activeItem = this.options.toArray()[index];\n    if (activeItem && !activeItem.active) {\n      this.activeItem = activeItem;\n      this.activeItemIndex = index;\n      this.clearSelectedOptions(this.activeItem);\n      this.activeItem.setActiveStyles();\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  setNextItemActive(): void {\n    const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n    this.setActiveItem(nextIndex);\n  }\n\n  setPreviousItemActive(): void {\n    const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n    this.setActiveItem(previousIndex);\n  }\n\n  getOptionIndex(value: NzSafeAny): number {\n    return this.options.reduce((result: number, current: NzAutocompleteOptionComponent, index: number) => {\n      return result === -1 ? (this.compareWith(value, current.nzValue) ? index : -1) : result;\n    }, -1)!;\n  }\n\n  getOption(value: NzSafeAny): NzAutocompleteOptionComponent | null {\n    return this.options.find(item => this.compareWith(value, item.nzValue)) || null;\n  }\n\n  private optionsInit(): void {\n    this.setVisibility();\n    this.subscribeOptionChanges();\n    const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\n    // async\n    this.dataSourceChangeSubscription = changes.subscribe(e => {\n      if (!e.dirty && this.isOpen) {\n        setTimeout(() => this.setVisibility());\n      }\n      this.subscribeOptionChanges();\n    });\n  }\n\n  /**\n   * Clear the status of options\n   */\n  clearSelectedOptions(skip?: NzAutocompleteOptionComponent | null, deselect: boolean = false): void {\n    this.options.forEach(option => {\n      if (option !== skip) {\n        if (deselect) {\n          option.deselect();\n        }\n        option.setInactiveStyles();\n      }\n    });\n  }\n\n  private subscribeOptionChanges(): void {\n    this.selectionChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription = this.optionSelectionChanges\n      .pipe(filter((event: NzOptionSelectionChange) => event.isUserInput))\n      .subscribe((event: NzOptionSelectionChange) => {\n        event.source.select();\n        event.source.setActiveStyles();\n        this.activeItem = event.source;\n        this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n        this.clearSelectedOptions(event.source, true);\n        this.selectionChange.emit(event.source);\n      });\n\n    this.optionMouseEnterSubscription.unsubscribe();\n    this.optionMouseEnterSubscription = this.optionMouseEnter.subscribe((event: NzAutocompleteOptionComponent) => {\n      event.setActiveStyles();\n      this.activeItem = event;\n      this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n      this.clearSelectedOptions(event);\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, ExistingProvider, forwardRef, Inject, Input, OnDestroy, Optional, ViewContainerRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { NzInputGroupWhitSuffixOrPrefixDirective } from 'ng-zorro-antd/input';\n\nimport { fromEvent, merge, Subject, Subscription } from 'rxjs';\nimport { delay, takeUntil, tap } from 'rxjs/operators';\n\nimport { NzAutocompleteOptionComponent } from './autocomplete-option.component';\nimport { NzAutocompleteComponent } from './autocomplete.component';\n\nexport const NZ_AUTOCOMPLETE_VALUE_ACCESSOR: ExistingProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\n  multi: true\n};\n\nexport function getNzAutocompleteMissingPanelError(): Error {\n  return Error(\n    'Attempting to open an undefined instance of `nz-autocomplete`. ' +\n      'Make sure that the id passed to the `nzAutocomplete` is correct and that ' +\n      \"you're attempting to open it after the ngAfterContentInit hook.\"\n  );\n}\n\n@Directive({\n  selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\n  exportAs: 'nzAutocompleteTrigger',\n  providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n  host: {\n    autocomplete: 'off',\n    'aria-autocomplete': 'list',\n    '(focusin)': 'handleFocus()',\n    '(blur)': 'handleBlur()',\n    '(input)': 'handleInput($event)',\n    '(keydown)': 'handleKeydown($event)'\n  }\n})\nexport class NzAutocompleteTriggerDirective implements ControlValueAccessor, OnDestroy {\n  /** Bind nzAutocomplete component */\n  @Input() nzAutocomplete!: NzAutocompleteComponent;\n\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  panelOpen: boolean = false;\n\n  /** Current active option */\n  get activeOption(): NzAutocompleteOptionComponent | void {\n    if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n      return this.nzAutocomplete.activeItem;\n    }\n  }\n\n  private destroy$ = new Subject<void>();\n  private overlayRef: OverlayRef | null = null;\n  private portal: TemplatePortal<{}> | null = null;\n  private positionStrategy!: FlexibleConnectedPositionStrategy;\n  private previousValue: string | number | null = null;\n  private selectionChangeSubscription!: Subscription;\n  private optionsChangeSubscription!: Subscription;\n  private overlayBackdropClickSubscription!: Subscription;\n\n  constructor(\n    private elementRef: ElementRef,\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef,\n    @Optional() private nzInputGroupWhitSuffixOrPrefixDirective: NzInputGroupWhitSuffixOrPrefixDirective,\n    @Optional() @Inject(DOCUMENT) private document: NzSafeAny\n  ) {}\n\n  ngOnDestroy(): void {\n    this.destroyPanel();\n  }\n\n  writeValue(value: NzSafeAny): void {\n    Promise.resolve(null).then(() => this.setTriggerValue(value));\n  }\n\n  registerOnChange(fn: (value: {}) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    const element: HTMLInputElement = this.elementRef.nativeElement;\n    element.disabled = isDisabled;\n    this.closePanel();\n  }\n\n  openPanel(): void {\n    this.previousValue = this.elementRef.nativeElement.value;\n    this.attachOverlay();\n    this.updateStatus();\n  }\n\n  closePanel(): void {\n    if (this.panelOpen) {\n      this.nzAutocomplete.isOpen = this.panelOpen = false;\n\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.selectionChangeSubscription.unsubscribe();\n        this.overlayBackdropClickSubscription.unsubscribe();\n        this.optionsChangeSubscription.unsubscribe();\n        this.overlayRef.dispose();\n        this.overlayRef = null;\n        this.portal = null;\n      }\n    }\n  }\n\n  handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n\n    if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n      // Reset value when tab / ESC close\n      if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n        this.setTriggerValue(this.previousValue);\n      }\n      this.closePanel();\n    } else if (this.panelOpen && keyCode === ENTER) {\n      if (this.nzAutocomplete.showPanel && this.activeOption) {\n        event.preventDefault();\n        this.activeOption.selectViaInteraction();\n      }\n    } else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n      event.stopPropagation();\n      event.preventDefault();\n      if (keyCode === UP_ARROW) {\n        this.nzAutocomplete.setPreviousItemActive();\n      } else {\n        this.nzAutocomplete.setNextItemActive();\n      }\n      if (this.activeOption) {\n        this.activeOption.scrollIntoViewIfNeeded();\n      }\n      this.doBackfill();\n    }\n  }\n\n  handleInput(event: KeyboardEvent): void {\n    const target = event.target as HTMLInputElement;\n    const document = this.document as Document;\n    let value: number | string | null = target.value;\n\n    if (target.type === 'number') {\n      value = value === '' ? null : parseFloat(value);\n    }\n    if (this.previousValue !== value) {\n      this.previousValue = value;\n      this.onChange(value);\n\n      if (this.canOpen() && document.activeElement === event.target) {\n        this.openPanel();\n      }\n    }\n  }\n\n  handleFocus(): void {\n    if (this.canOpen()) {\n      this.openPanel();\n    }\n  }\n\n  handleBlur(): void {\n    this.onTouched();\n  }\n\n  /**\n   * Subscription data source changes event\n   */\n  private subscribeOptionsChange(): Subscription {\n    const optionChanges = this.nzAutocomplete.options.changes.pipe(\n      tap(() => this.positionStrategy.reapplyLastPosition()),\n      delay(0)\n    );\n    return optionChanges.subscribe(() => {\n      this.resetActiveItem();\n      if (this.panelOpen) {\n        this.overlayRef!.updatePosition();\n      }\n    });\n  }\n\n  /**\n   * Subscription option changes event and set the value\n   */\n  private subscribeSelectionChange(): Subscription {\n    return this.nzAutocomplete.selectionChange.subscribe((option: NzAutocompleteOptionComponent) => {\n      this.setValueAndClose(option);\n    });\n  }\n\n  /**\n   * Subscription external click and close panel\n   */\n  private subscribeOverlayBackdropClick(): Subscription {\n    return merge<MouseEvent | TouchEvent>(\n      fromEvent<MouseEvent>(this.document, 'click'),\n      fromEvent<TouchEvent>(this.document, 'touchend')\n    ).subscribe((event: MouseEvent | TouchEvent) => {\n      const clickTarget = event.target as HTMLElement;\n\n      // Make sure is not self\n      if (clickTarget !== this.elementRef.nativeElement && !this.overlayRef!.overlayElement.contains(clickTarget) && this.panelOpen) {\n        this.closePanel();\n      }\n    });\n  }\n\n  private attachOverlay(): void {\n    if (!this.nzAutocomplete) {\n      throw getNzAutocompleteMissingPanelError();\n    }\n\n    if (!this.portal && this.nzAutocomplete.template) {\n      this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n    }\n\n    if (!this.overlayRef) {\n      this.overlayRef = this.overlay.create(this.getOverlayConfig());\n    }\n\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.overlayRef.attach(this.portal);\n      this.selectionChangeSubscription = this.subscribeSelectionChange();\n      this.overlayBackdropClickSubscription = this.subscribeOverlayBackdropClick();\n      this.optionsChangeSubscription = this.subscribeOptionsChange();\n      this.overlayRef\n        .detachments()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.closePanel();\n        });\n    }\n    this.nzAutocomplete.isOpen = this.panelOpen = true;\n  }\n\n  private updateStatus(): void {\n    if (this.overlayRef) {\n      this.overlayRef.updateSize({ width: this.nzAutocomplete.nzWidth || this.getHostWidth() });\n    }\n    this.nzAutocomplete.setVisibility();\n    this.resetActiveItem();\n    if (this.activeOption) {\n      this.activeOption.scrollIntoViewIfNeeded();\n    }\n  }\n\n  private destroyPanel(): void {\n    if (this.overlayRef) {\n      this.closePanel();\n    }\n  }\n\n  private getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this.getOverlayPosition(),\n      disposeOnNavigation: true,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      // default host element width\n      width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n    });\n  }\n\n  private getConnectedElement(): ElementRef {\n    return this.nzInputGroupWhitSuffixOrPrefixDirective ? this.nzInputGroupWhitSuffixOrPrefixDirective.elementRef : this.elementRef;\n  }\n\n  private getHostWidth(): number {\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n\n  private getOverlayPosition(): PositionStrategy {\n    const positions = [\n      new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n      new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n    ];\n    this.positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.getConnectedElement())\n      .withFlexibleDimensions(false)\n      .withPush(false)\n      .withPositions(positions)\n      .withTransformOriginOn('.ant-select-dropdown');\n    return this.positionStrategy;\n  }\n\n  private resetActiveItem(): void {\n    const index = this.nzAutocomplete.getOptionIndex(this.previousValue);\n    this.nzAutocomplete.clearSelectedOptions(null, true);\n    if (index !== -1) {\n      this.nzAutocomplete.setActiveItem(index);\n      this.nzAutocomplete.activeItem.select(false);\n    } else {\n      this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n    }\n  }\n\n  private setValueAndClose(option: NzAutocompleteOptionComponent): void {\n    const value = option.nzValue;\n    this.setTriggerValue(option.getLabel());\n    this.onChange(value);\n    this.elementRef.nativeElement.focus();\n    this.closePanel();\n  }\n\n  private setTriggerValue(value: NzSafeAny): void {\n    const option = this.nzAutocomplete.getOption(value);\n    const displayValue = option ? option.getLabel() : value;\n    this.elementRef.nativeElement.value = displayValue != null ? displayValue : '';\n    if (!this.nzAutocomplete.nzBackfill) {\n      this.previousValue = displayValue;\n    }\n  }\n\n  private doBackfill(): void {\n    if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n      this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n    }\n  }\n\n  private canOpen(): boolean {\n    const element: HTMLInputElement = this.elementRef.nativeElement;\n    return !element.readOnly && !element.disabled;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n\nimport { NzAutocompleteOptgroupComponent } from './autocomplete-optgroup.component';\nimport { NzAutocompleteOptionComponent } from './autocomplete-option.component';\nimport { NzAutocompleteTriggerDirective } from './autocomplete-trigger.directive';\nimport { NzAutocompleteComponent } from './autocomplete.component';\n\n@NgModule({\n  declarations: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\n  exports: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\n  imports: [CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]\n})\nexport class NzAutocompleteModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './autocomplete.module';\nexport * from './autocomplete.component';\nexport * from './autocomplete-trigger.directive';\nexport * from './autocomplete-option.component';\nexport * from './autocomplete-optgroup.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}