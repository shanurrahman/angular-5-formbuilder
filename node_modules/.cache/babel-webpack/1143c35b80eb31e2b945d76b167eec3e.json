{"ast":null,"code":"import _slicedToArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { __decorate, __metadata } from 'tslib';\nimport { RIGHT_ARROW, UP_ARROW, LEFT_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, ViewChild, Input, EventEmitter, forwardRef, ViewChildren, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputBoolean, ensureNumberInRange, silentEvent, getPrecision, getPercent, getElementOffset, InputNumber, arraysEqual } from 'ng-zorro-antd/core/util';\nimport { fromEvent, merge } from 'rxjs';\nimport { filter, tap, pluck, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { NzTooltipDirective, NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { CommonModule } from '@angular/common';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/tooltip';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nvar _c0 = [\"handle\"];\nvar _c1 = [\"slider\"];\n\nfunction NzSliderComponent_nz_slider_step_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-slider-step\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"vertical\", ctx_r1.nzVertical)(\"lowerBound\", ctx_r1.bounds.lower)(\"upperBound\", ctx_r1.bounds.upper)(\"marksArray\", ctx_r1.marksArray)(\"included\", ctx_r1.nzIncluded);\n  }\n}\n\nfunction NzSliderComponent_nz_slider_handle_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-slider-handle\", 8);\n  }\n\n  if (rf & 2) {\n    var handle_r4 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"vertical\", ctx_r2.nzVertical)(\"reverse\", ctx_r2.nzReverse)(\"offset\", handle_r4.offset)(\"value\", handle_r4.value)(\"active\", handle_r4.active)(\"tooltipFormatter\", ctx_r2.nzTipFormatter)(\"tooltipVisible\", ctx_r2.nzTooltipVisible)(\"tooltipPlacement\", ctx_r2.nzTooltipPlacement);\n  }\n}\n\nfunction NzSliderComponent_nz_slider_marks_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-slider-marks\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"vertical\", ctx_r3.nzVertical)(\"min\", ctx_r3.nzMin)(\"max\", ctx_r3.nzMax)(\"lowerBound\", ctx_r3.bounds.lower)(\"upperBound\", ctx_r3.bounds.upper)(\"marksArray\", ctx_r3.marksArray)(\"included\", ctx_r3.nzIncluded);\n  }\n}\n\nfunction NzSliderMarksComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    var attr_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"ant-slider-mark-active\", attr_r1.active);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", attr_r1.style)(\"innerHTML\", attr_r1.label, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzSliderStepComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    var mark_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"ant-slider-dot-active\", mark_r1.active);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", mark_r1.style);\n  }\n}\n\nvar NzSliderService = function NzSliderService() {\n  _classCallCheck(this, NzSliderService);\n\n  this.isDragging = false;\n};\n\nNzSliderService.ɵfac = function NzSliderService_Factory(t) {\n  return new (t || NzSliderService)();\n};\n\nNzSliderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NzSliderService,\n  factory: NzSliderService.ɵfac\n});\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzSliderHandleComponent = /*#__PURE__*/function () {\n  function NzSliderHandleComponent(sliderService, cdr) {\n    var _this = this;\n\n    _classCallCheck(this, NzSliderHandleComponent);\n\n    this.sliderService = sliderService;\n    this.cdr = cdr;\n    this.tooltipVisible = 'default';\n    this.active = false;\n    this.style = {};\n\n    this.enterHandle = function () {\n      if (!_this.sliderService.isDragging) {\n        _this.toggleTooltip(true);\n\n        _this.updateTooltipPosition();\n\n        _this.cdr.detectChanges();\n      }\n    };\n\n    this.leaveHandle = function () {\n      if (!_this.sliderService.isDragging) {\n        _this.toggleTooltip(false);\n\n        _this.cdr.detectChanges();\n      }\n    };\n  }\n\n  _createClass(NzSliderHandleComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this2 = this;\n\n      var offset = changes.offset,\n          value = changes.value,\n          active = changes.active,\n          tooltipVisible = changes.tooltipVisible,\n          reverse = changes.reverse;\n\n      if (offset || reverse) {\n        this.updateStyle();\n      }\n\n      if (value) {\n        this.updateTooltipTitle();\n        this.updateTooltipPosition();\n      }\n\n      if (active) {\n        if (active.currentValue) {\n          this.toggleTooltip(true);\n        } else {\n          this.toggleTooltip(false);\n        }\n      }\n\n      if ((tooltipVisible === null || tooltipVisible === void 0 ? void 0 : tooltipVisible.currentValue) === 'always') {\n        Promise.resolve().then(function () {\n          return _this2.toggleTooltip(true, true);\n        });\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _a;\n\n      (_a = this.handleEl) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n    }\n  }, {\n    key: \"toggleTooltip\",\n    value: function toggleTooltip(show) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var _a, _b;\n\n      if (!force && (this.tooltipVisible !== 'default' || !this.tooltip)) {\n        return;\n      }\n\n      if (show) {\n        (_a = this.tooltip) === null || _a === void 0 ? void 0 : _a.show();\n      } else {\n        (_b = this.tooltip) === null || _b === void 0 ? void 0 : _b.hide();\n      }\n    }\n  }, {\n    key: \"updateTooltipTitle\",\n    value: function updateTooltipTitle() {\n      this.tooltipTitle = this.tooltipFormatter ? this.tooltipFormatter(this.value) : \"\".concat(this.value);\n    }\n  }, {\n    key: \"updateTooltipPosition\",\n    value: function updateTooltipPosition() {\n      var _this3 = this;\n\n      if (this.tooltip) {\n        Promise.resolve().then(function () {\n          var _a;\n\n          return (_a = _this3.tooltip) === null || _a === void 0 ? void 0 : _a.updatePosition();\n        });\n      }\n    }\n  }, {\n    key: \"updateStyle\",\n    value: function updateStyle() {\n      var _ref, _ref2;\n\n      var vertical = this.vertical;\n      var reverse = this.reverse;\n      var offset = this.offset;\n      var positionStyle = vertical ? (_ref = {}, _defineProperty(_ref, reverse ? 'top' : 'bottom', \"\".concat(offset, \"%\")), _defineProperty(_ref, reverse ? 'bottom' : 'top', 'auto'), _defineProperty(_ref, \"transform\", reverse ? null : \"translateY(+50%)\"), _ref) : (_ref2 = {}, _defineProperty(_ref2, reverse ? 'right' : 'left', \"\".concat(offset, \"%\")), _defineProperty(_ref2, reverse ? 'left' : 'right', 'auto'), _defineProperty(_ref2, \"transform\", \"translateX(\".concat(reverse ? '+' : '-', \"50%)\")), _ref2);\n      this.style = positionStyle;\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzSliderHandleComponent;\n}();\n\nNzSliderHandleComponent.ɵfac = function NzSliderHandleComponent_Factory(t) {\n  return new (t || NzSliderHandleComponent)(ɵngcc0.ɵɵdirectiveInject(NzSliderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzSliderHandleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzSliderHandleComponent,\n  selectors: [[\"nz-slider-handle\"]],\n  viewQuery: function NzSliderHandleComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n      ɵngcc0.ɵɵviewQuery(NzTooltipDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.handleEl = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tooltip = _t.first);\n    }\n  },\n  hostBindings: function NzSliderHandleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mouseenter\", function NzSliderHandleComponent_mouseenter_HostBindingHandler() {\n        return ctx.enterHandle();\n      })(\"mouseleave\", function NzSliderHandleComponent_mouseleave_HostBindingHandler() {\n        return ctx.leaveHandle();\n      });\n    }\n  },\n  inputs: {\n    tooltipVisible: \"tooltipVisible\",\n    active: \"active\",\n    vertical: \"vertical\",\n    reverse: \"reverse\",\n    offset: \"offset\",\n    value: \"value\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipFormatter: \"tooltipFormatter\"\n  },\n  exportAs: [\"nzSliderHandle\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 4,\n  consts: [[\"tabindex\", \"0\", \"nz-tooltip\", \"\", 1, \"ant-slider-handle\", 3, \"ngStyle\", \"nzTooltipTitle\", \"nzTooltipTrigger\", \"nzTooltipPlacement\"], [\"handle\", \"\"]],\n  template: function NzSliderHandleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"nzTooltipTitle\", ctx.tooltipFormatter === null || ctx.tooltipVisible === \"never\" ? null : ctx.tooltipTitle)(\"nzTooltipTrigger\", null)(\"nzTooltipPlacement\", ctx.tooltipPlacement);\n    }\n  },\n  directives: [ɵngcc1.NzTooltipDirective, ɵngcc2.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzSliderHandleComponent.ctorParameters = function () {\n  return [{\n    type: NzSliderService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNzSliderHandleComponent.propDecorators = {\n  handleEl: [{\n    type: ViewChild,\n    args: ['handle', {\n      static: false\n    }]\n  }],\n  tooltip: [{\n    type: ViewChild,\n    args: [NzTooltipDirective, {\n      static: false\n    }]\n  }],\n  vertical: [{\n    type: Input\n  }],\n  reverse: [{\n    type: Input\n  }],\n  offset: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  tooltipVisible: [{\n    type: Input\n  }],\n  tooltipPlacement: [{\n    type: Input\n  }],\n  tooltipFormatter: [{\n    type: Input\n  }],\n  active: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSliderHandleComponent.prototype, \"active\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSliderComponent = /*#__PURE__*/function () {\n  function NzSliderComponent(sliderService, cdr, platform) {\n    _classCallCheck(this, NzSliderComponent);\n\n    this.sliderService = sliderService;\n    this.cdr = cdr;\n    this.platform = platform;\n    this.nzDisabled = false;\n    this.nzDots = false;\n    this.nzIncluded = true;\n    this.nzRange = false;\n    this.nzVertical = false;\n    this.nzReverse = false;\n    this.nzMarks = null;\n    this.nzMax = 100;\n    this.nzMin = 0;\n    this.nzStep = 1;\n    this.nzTooltipVisible = 'default';\n    this.nzTooltipPlacement = 'top';\n    this.nzOnAfterChange = new EventEmitter();\n    this.value = null;\n    this.cacheSliderStart = null;\n    this.cacheSliderLength = null;\n    this.activeValueIndex = undefined; // Current activated handle's index ONLY for range=true\n\n    this.track = {\n      offset: null,\n      length: null\n    }; // Track's offset and length\n\n    this.handles = []; // Handles' offset\n\n    this.marksArray = null; // \"steps\" in array type with more data & FILTER out the invalid mark\n\n    this.bounds = {\n      lower: null,\n      upper: null\n    }; // now for nz-slider-step\n  }\n\n  _createClass(NzSliderComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.handles = generateHandlers(this.nzRange ? 2 : 1);\n      this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n      this.bindDraggingHandlers();\n      this.toggleDragDisabled(this.nzDisabled);\n\n      if (this.getValue() === null) {\n        this.setValue(this.formatValue(null));\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzDisabled = changes.nzDisabled,\n          nzMarks = changes.nzMarks,\n          nzRange = changes.nzRange;\n\n      if (nzDisabled && !nzDisabled.firstChange) {\n        this.toggleDragDisabled(nzDisabled.currentValue);\n      } else if (nzMarks && !nzMarks.firstChange) {\n        this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n      } else if (nzRange && !nzRange.firstChange) {\n        this.setValue(this.formatValue(null));\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unsubscribeDrag();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(val) {\n      this.setValue(val, true);\n    }\n  }, {\n    key: \"onValueChange\",\n    value: function onValueChange(_value) {}\n  }, {\n    key: \"onTouched\",\n    value: function onTouched() {}\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onValueChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.nzDisabled = isDisabled;\n      this.toggleDragDisabled(isDisabled);\n    }\n    /**\n     * Event handler is only triggered when a slider handler is focused.\n     */\n\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {\n      var code = e.keyCode;\n      var isIncrease = code === RIGHT_ARROW || code === UP_ARROW;\n      var isDecrease = code === LEFT_ARROW || code === DOWN_ARROW;\n\n      if (!(isIncrease || isDecrease)) {\n        return;\n      }\n\n      e.preventDefault();\n      var step = (isDecrease ? -this.nzStep : this.nzStep) * (this.nzReverse ? -1 : 1);\n      var newVal = this.nzRange ? this.value[this.activeValueIndex] + step : this.value + step;\n      this.setActiveValue(ensureNumberInRange(newVal, this.nzMin, this.nzMax));\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var isWriteValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (isWriteValue) {\n        this.value = this.formatValue(value);\n        this.updateTrackAndHandles();\n      } else if (!valuesEqual(this.value, value)) {\n        this.value = value;\n        this.updateTrackAndHandles();\n        this.onValueChange(this.getValue(true));\n      }\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      var cloneAndSort = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (cloneAndSort && this.value && isValueRange(this.value)) {\n        return _toConsumableArray(this.value).sort(function (a, b) {\n          return a - b;\n        });\n      }\n\n      return this.value;\n    }\n    /**\n     * Clone & sort current value and convert them to offsets, then return the new one.\n     */\n\n  }, {\n    key: \"getValueToOffset\",\n    value: function getValueToOffset(value) {\n      var _this4 = this;\n\n      var normalizedValue = value;\n\n      if (typeof normalizedValue === 'undefined') {\n        normalizedValue = this.getValue(true);\n      }\n\n      return isValueRange(normalizedValue) ? normalizedValue.map(function (val) {\n        return _this4.valueToOffset(val);\n      }) : this.valueToOffset(normalizedValue);\n    }\n    /**\n     * Find the closest value to be activated.\n     */\n\n  }, {\n    key: \"setActiveValueIndex\",\n    value: function setActiveValueIndex(pointerValue) {\n      var value = this.getValue();\n\n      if (isValueRange(value)) {\n        var minimal = null;\n        var gap;\n        var activeIndex = -1;\n        value.forEach(function (val, index) {\n          gap = Math.abs(pointerValue - val);\n\n          if (minimal === null || gap < minimal) {\n            minimal = gap;\n            activeIndex = index;\n          }\n        });\n        this.activeValueIndex = activeIndex;\n        this.handlerComponents.toArray()[activeIndex].focus();\n      } else {\n        this.handlerComponents.toArray()[0].focus();\n      }\n    }\n  }, {\n    key: \"setActiveValue\",\n    value: function setActiveValue(pointerValue) {\n      if (isValueRange(this.value)) {\n        var newValue = _toConsumableArray(this.value);\n\n        newValue[this.activeValueIndex] = pointerValue;\n        this.setValue(newValue);\n      } else {\n        this.setValue(pointerValue);\n      }\n    }\n    /**\n     * Update track and handles' position and length.\n     */\n\n  }, {\n    key: \"updateTrackAndHandles\",\n    value: function updateTrackAndHandles() {\n      var value = this.getValue();\n      var offset = this.getValueToOffset(value);\n      var valueSorted = this.getValue(true);\n      var offsetSorted = this.getValueToOffset(valueSorted);\n      var boundParts = isValueRange(valueSorted) ? valueSorted : [0, valueSorted];\n      var trackParts = isValueRange(offsetSorted) ? [offsetSorted[0], offsetSorted[1] - offsetSorted[0]] : [0, offsetSorted];\n      this.handles.forEach(function (handle, index) {\n        handle.offset = isValueRange(offset) ? offset[index] : offset;\n        handle.value = isValueRange(value) ? value[index] : value || 0;\n      });\n\n      var _boundParts = _slicedToArray(boundParts, 2);\n\n      this.bounds.lower = _boundParts[0];\n      this.bounds.upper = _boundParts[1];\n      this.track.offset = trackParts[0];\n      this.track.length = trackParts[1];\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(value) {\n      this.toggleDragMoving(true);\n      this.cacheSliderProperty();\n      this.setActiveValueIndex(this.getLogicalValue(value));\n      this.setActiveValue(this.getLogicalValue(value));\n      this.showHandleTooltip(this.nzRange ? this.activeValueIndex : 0);\n    }\n  }, {\n    key: \"onDragMove\",\n    value: function onDragMove(value) {\n      this.setActiveValue(this.getLogicalValue(value));\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"getLogicalValue\",\n    value: function getLogicalValue(value) {\n      return this.nzReverse ? this.nzMax - value + this.nzMin : value;\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd() {\n      this.nzOnAfterChange.emit(this.getValue(true));\n      this.toggleDragMoving(false);\n      this.cacheSliderProperty(true);\n      this.hideAllHandleTooltip();\n      this.cdr.markForCheck();\n    }\n    /**\n     * Create user interactions handles.\n     */\n\n  }, {\n    key: \"bindDraggingHandlers\",\n    value: function bindDraggingHandlers() {\n      var _this5 = this;\n\n      if (!this.platform.isBrowser) {\n        return;\n      }\n\n      var sliderDOM = this.slider.nativeElement;\n      var orientField = this.nzVertical ? 'pageY' : 'pageX';\n      var mouse = {\n        start: 'mousedown',\n        move: 'mousemove',\n        end: 'mouseup',\n        pluckKey: [orientField]\n      };\n      var touch = {\n        start: 'touchstart',\n        move: 'touchmove',\n        end: 'touchend',\n        pluckKey: ['touches', '0', orientField],\n        filter: function filter(e) {\n          return e instanceof TouchEvent;\n        }\n      };\n      [mouse, touch].forEach(function (source) {\n        var start = source.start,\n            move = source.move,\n            end = source.end,\n            pluckKey = source.pluckKey,\n            _source$filter = source.filter,\n            filterFunc = _source$filter === void 0 ? function () {\n          return true;\n        } : _source$filter;\n        source.startPlucked$ = fromEvent(sliderDOM, start).pipe(filter(filterFunc), tap(silentEvent), pluck.apply(void 0, _toConsumableArray(pluckKey)), map(function (position) {\n          return _this5.findClosestValue(position);\n        }));\n        source.end$ = fromEvent(document, end);\n        source.moveResolved$ = fromEvent(document, move).pipe(filter(filterFunc), tap(silentEvent), pluck.apply(void 0, _toConsumableArray(pluckKey)), distinctUntilChanged(), map(function (position) {\n          return _this5.findClosestValue(position);\n        }), distinctUntilChanged(), takeUntil(source.end$));\n      });\n      this.dragStart$ = merge(mouse.startPlucked$, touch.startPlucked$);\n      this.dragMove$ = merge(mouse.moveResolved$, touch.moveResolved$);\n      this.dragEnd$ = merge(mouse.end$, touch.end$);\n    }\n  }, {\n    key: \"subscribeDrag\",\n    value: function subscribeDrag() {\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['start', 'move', 'end'];\n\n      if (periods.indexOf('start') !== -1 && this.dragStart$ && !this.dragStart_) {\n        this.dragStart_ = this.dragStart$.subscribe(this.onDragStart.bind(this));\n      }\n\n      if (periods.indexOf('move') !== -1 && this.dragMove$ && !this.dragMove_) {\n        this.dragMove_ = this.dragMove$.subscribe(this.onDragMove.bind(this));\n      }\n\n      if (periods.indexOf('end') !== -1 && this.dragEnd$ && !this.dragEnd_) {\n        this.dragEnd_ = this.dragEnd$.subscribe(this.onDragEnd.bind(this));\n      }\n    }\n  }, {\n    key: \"unsubscribeDrag\",\n    value: function unsubscribeDrag() {\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['start', 'move', 'end'];\n\n      if (periods.indexOf('start') !== -1 && this.dragStart_) {\n        this.dragStart_.unsubscribe();\n        this.dragStart_ = null;\n      }\n\n      if (periods.indexOf('move') !== -1 && this.dragMove_) {\n        this.dragMove_.unsubscribe();\n        this.dragMove_ = null;\n      }\n\n      if (periods.indexOf('end') !== -1 && this.dragEnd_) {\n        this.dragEnd_.unsubscribe();\n        this.dragEnd_ = null;\n      }\n    }\n  }, {\n    key: \"toggleDragMoving\",\n    value: function toggleDragMoving(movable) {\n      var periods = ['move', 'end'];\n\n      if (movable) {\n        this.sliderService.isDragging = true;\n        this.subscribeDrag(periods);\n      } else {\n        this.sliderService.isDragging = false;\n        this.unsubscribeDrag(periods);\n      }\n    }\n  }, {\n    key: \"toggleDragDisabled\",\n    value: function toggleDragDisabled(disabled) {\n      if (disabled) {\n        this.unsubscribeDrag();\n      } else {\n        this.subscribeDrag(['start']);\n      }\n    }\n  }, {\n    key: \"findClosestValue\",\n    value: function findClosestValue(position) {\n      var sliderStart = this.getSliderStartPosition();\n      var sliderLength = this.getSliderLength();\n      var ratio = ensureNumberInRange((position - sliderStart) / sliderLength, 0, 1);\n      var val = (this.nzMax - this.nzMin) * (this.nzVertical ? 1 - ratio : ratio) + this.nzMin;\n      var points = this.nzMarks === null ? [] : Object.keys(this.nzMarks).map(parseFloat).sort(function (a, b) {\n        return a - b;\n      });\n\n      if (this.nzStep !== 0 && !this.nzDots) {\n        var closestOne = Math.round(val / this.nzStep) * this.nzStep;\n        points.push(closestOne);\n      }\n\n      var gaps = points.map(function (point) {\n        return Math.abs(val - point);\n      });\n      var closest = points[gaps.indexOf(Math.min.apply(Math, _toConsumableArray(gaps)))]; // return parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n\n      return this.nzStep === 0 ? closest : parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n    }\n  }, {\n    key: \"valueToOffset\",\n    value: function valueToOffset(value) {\n      return getPercent(this.nzMin, this.nzMax, value);\n    }\n  }, {\n    key: \"getSliderStartPosition\",\n    value: function getSliderStartPosition() {\n      if (this.cacheSliderStart !== null) {\n        return this.cacheSliderStart;\n      }\n\n      var offset = getElementOffset(this.slider.nativeElement);\n      return this.nzVertical ? offset.top : offset.left;\n    }\n  }, {\n    key: \"getSliderLength\",\n    value: function getSliderLength() {\n      if (this.cacheSliderLength !== null) {\n        return this.cacheSliderLength;\n      }\n\n      var sliderDOM = this.slider.nativeElement;\n      return this.nzVertical ? sliderDOM.clientHeight : sliderDOM.clientWidth;\n    }\n    /**\n     * Cache DOM layout/reflow operations for performance (may not necessary?)\n     */\n\n  }, {\n    key: \"cacheSliderProperty\",\n    value: function cacheSliderProperty() {\n      var remove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.cacheSliderStart = remove ? null : this.getSliderStartPosition();\n      this.cacheSliderLength = remove ? null : this.getSliderLength();\n    }\n  }, {\n    key: \"formatValue\",\n    value: function formatValue(value) {\n      var _this6 = this;\n\n      if (!value) {\n        return this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n      } else if (assertValueValid(value, this.nzRange)) {\n        return isValueRange(value) ? value.map(function (val) {\n          return ensureNumberInRange(val, _this6.nzMin, _this6.nzMax);\n        }) : ensureNumberInRange(value, this.nzMin, this.nzMax);\n      } else {\n        return this.nzDefaultValue ? this.nzDefaultValue : this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n      }\n    }\n    /**\n     * Show one handle's tooltip and hide others'.\n     */\n\n  }, {\n    key: \"showHandleTooltip\",\n    value: function showHandleTooltip() {\n      var handleIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.handles.forEach(function (handle, index) {\n        handle.active = index === handleIndex;\n      });\n    }\n  }, {\n    key: \"hideAllHandleTooltip\",\n    value: function hideAllHandleTooltip() {\n      this.handles.forEach(function (handle) {\n        return handle.active = false;\n      });\n    }\n  }, {\n    key: \"generateMarkItems\",\n    value: function generateMarkItems(marks) {\n      var marksArray = [];\n\n      for (var key in marks) {\n        var mark = marks[key];\n        var val = typeof key === 'number' ? key : parseFloat(key);\n\n        if (val >= this.nzMin && val <= this.nzMax) {\n          marksArray.push({\n            value: val,\n            offset: this.valueToOffset(val),\n            config: mark\n          });\n        }\n      }\n\n      return marksArray.length ? marksArray : null;\n    }\n  }]);\n\n  return NzSliderComponent;\n}();\n\nNzSliderComponent.ɵfac = function NzSliderComponent_Factory(t) {\n  return new (t || NzSliderComponent)(ɵngcc0.ɵɵdirectiveInject(NzSliderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform));\n};\n\nNzSliderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzSliderComponent,\n  selectors: [[\"nz-slider\"]],\n  viewQuery: function NzSliderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n      ɵngcc0.ɵɵviewQuery(NzSliderHandleComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slider = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.handlerComponents = _t);\n    }\n  },\n  hostBindings: function NzSliderComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function NzSliderComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    nzDisabled: \"nzDisabled\",\n    nzDots: \"nzDots\",\n    nzIncluded: \"nzIncluded\",\n    nzRange: \"nzRange\",\n    nzVertical: \"nzVertical\",\n    nzReverse: \"nzReverse\",\n    nzMarks: \"nzMarks\",\n    nzMax: \"nzMax\",\n    nzMin: \"nzMin\",\n    nzStep: \"nzStep\",\n    nzTooltipVisible: \"nzTooltipVisible\",\n    nzTooltipPlacement: \"nzTooltipPlacement\",\n    nzDefaultValue: \"nzDefaultValue\",\n    nzTipFormatter: \"nzTipFormatter\"\n  },\n  outputs: {\n    nzOnAfterChange: \"nzOnAfterChange\"\n  },\n  exportAs: [\"nzSlider\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NzSliderComponent;\n    }),\n    multi: true\n  }, NzSliderService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 14,\n  consts: [[1, \"ant-slider\"], [\"slider\", \"\"], [1, \"ant-slider-rail\"], [3, \"vertical\", \"included\", \"offset\", \"length\", \"reverse\"], [3, \"vertical\", \"lowerBound\", \"upperBound\", \"marksArray\", \"included\", 4, \"ngIf\"], [3, \"vertical\", \"reverse\", \"offset\", \"value\", \"active\", \"tooltipFormatter\", \"tooltipVisible\", \"tooltipPlacement\", 4, \"ngFor\", \"ngForOf\"], [3, \"vertical\", \"min\", \"max\", \"lowerBound\", \"upperBound\", \"marksArray\", \"included\", 4, \"ngIf\"], [3, \"vertical\", \"lowerBound\", \"upperBound\", \"marksArray\", \"included\"], [3, \"vertical\", \"reverse\", \"offset\", \"value\", \"active\", \"tooltipFormatter\", \"tooltipVisible\", \"tooltipPlacement\"], [3, \"vertical\", \"min\", \"max\", \"lowerBound\", \"upperBound\", \"marksArray\", \"included\"]],\n  template: function NzSliderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelement(2, \"div\", 2);\n      ɵngcc0.ɵɵelement(3, \"nz-slider-track\", 3);\n      ɵngcc0.ɵɵtemplate(4, NzSliderComponent_nz_slider_step_4_Template, 1, 5, \"nz-slider-step\", 4);\n      ɵngcc0.ɵɵtemplate(5, NzSliderComponent_nz_slider_handle_5_Template, 1, 8, \"nz-slider-handle\", 5);\n      ɵngcc0.ɵɵtemplate(6, NzSliderComponent_nz_slider_marks_6_Template, 1, 7, \"nz-slider-marks\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-slider-disabled\", ctx.nzDisabled)(\"ant-slider-vertical\", ctx.nzVertical)(\"ant-slider-with-marks\", ctx.marksArray);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"vertical\", ctx.nzVertical)(\"included\", ctx.nzIncluded)(\"offset\", ctx.track.offset)(\"length\", ctx.track.length)(\"reverse\", ctx.nzReverse);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.marksArray);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.handles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.marksArray);\n    }\n  },\n  directives: function directives() {\n    return [NzSliderTrackComponent, ɵngcc2.NgIf, ɵngcc2.NgForOf, NzSliderStepComponent, NzSliderHandleComponent, NzSliderMarksComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzSliderComponent.ctorParameters = function () {\n  return [{\n    type: NzSliderService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Platform\n  }];\n};\n\nNzSliderComponent.propDecorators = {\n  slider: [{\n    type: ViewChild,\n    args: ['slider', {\n      static: true\n    }]\n  }],\n  handlerComponents: [{\n    type: ViewChildren,\n    args: [NzSliderHandleComponent]\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzDots: [{\n    type: Input\n  }],\n  nzIncluded: [{\n    type: Input\n  }],\n  nzRange: [{\n    type: Input\n  }],\n  nzVertical: [{\n    type: Input\n  }],\n  nzReverse: [{\n    type: Input\n  }],\n  nzDefaultValue: [{\n    type: Input\n  }],\n  nzMarks: [{\n    type: Input\n  }],\n  nzMax: [{\n    type: Input\n  }],\n  nzMin: [{\n    type: Input\n  }],\n  nzStep: [{\n    type: Input\n  }],\n  nzTooltipVisible: [{\n    type: Input\n  }],\n  nzTooltipPlacement: [{\n    type: Input\n  }],\n  nzTipFormatter: [{\n    type: Input\n  }],\n  nzOnAfterChange: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSliderComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzSliderComponent.prototype, \"nzDots\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzSliderComponent.prototype, \"nzIncluded\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzSliderComponent.prototype, \"nzRange\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzSliderComponent.prototype, \"nzVertical\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzSliderComponent.prototype, \"nzReverse\", void 0);\n\n__decorate([InputNumber(), __metadata(\"design:type\", Object)], NzSliderComponent.prototype, \"nzMax\", void 0);\n\n__decorate([InputNumber(), __metadata(\"design:type\", Object)], NzSliderComponent.prototype, \"nzMin\", void 0);\n\n__decorate([InputNumber(), __metadata(\"design:type\", Object)], NzSliderComponent.prototype, \"nzStep\", void 0);\n\nfunction getValueTypeNotMatchError() {\n  return new Error(\"The \\\"nzRange\\\" can't match the \\\"ngModel\\\"'s type, please check these properties: \\\"nzRange\\\", \\\"ngModel\\\", \\\"nzDefaultValue\\\".\");\n}\n\nfunction isValueRange(value) {\n  if (value instanceof Array) {\n    return value.length === 2;\n  } else {\n    return false;\n  }\n}\n\nfunction generateHandlers(amount) {\n  return Array(amount).fill(0).map(function () {\n    return {\n      offset: null,\n      value: null,\n      active: false\n    };\n  });\n}\n/**\n * Check if value is valid and throw error if value-type/range not match.\n */\n\n\nfunction assertValueValid(value, isRange) {\n  if (!isValueRange(value) && isNaN(value) || isValueRange(value) && value.some(function (v) {\n    return isNaN(v);\n  })) {\n    return false;\n  }\n\n  return assertValueTypeMatch(value, isRange);\n}\n/**\n * Assert that if `this.nzRange` is `true`, value is also a range, vice versa.\n */\n\n\nfunction assertValueTypeMatch(value) {\n  var isRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (isValueRange(value) !== isRange) {\n    throw getValueTypeNotMatchError();\n  }\n\n  return true;\n}\n\nfunction valuesEqual(valA, valB) {\n  if (typeof valA !== typeof valB) {\n    return false;\n  }\n\n  return isValueRange(valA) && isValueRange(valB) ? arraysEqual(valA, valB) : valA === valB;\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSliderMarksComponent = /*#__PURE__*/function () {\n  function NzSliderMarksComponent() {\n    _classCallCheck(this, NzSliderMarksComponent);\n\n    this.lowerBound = null;\n    this.upperBound = null;\n    this.marksArray = [];\n    this.vertical = false;\n    this.included = false;\n    this.marks = [];\n  }\n\n  _createClass(NzSliderMarksComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var marksArray = changes.marksArray,\n          lowerBound = changes.lowerBound,\n          upperBound = changes.upperBound;\n\n      if (marksArray) {\n        this.buildMarks();\n      }\n\n      if (marksArray || lowerBound || upperBound) {\n        this.togglePointActive();\n      }\n    }\n  }, {\n    key: \"trackById\",\n    value: function trackById(_index, mark) {\n      return mark.value;\n    }\n  }, {\n    key: \"buildMarks\",\n    value: function buildMarks() {\n      var _this7 = this;\n\n      var range = this.max - this.min;\n      this.marks = this.marksArray.map(function (mark) {\n        var value = mark.value,\n            offset = mark.offset,\n            config = mark.config;\n\n        var style = _this7.getMarkStyles(value, range, config);\n\n        var label = isConfigObject(config) ? config.label : config;\n        return {\n          label: label,\n          offset: offset,\n          style: style,\n          value: value,\n          config: config,\n          active: false\n        };\n      });\n    }\n  }, {\n    key: \"getMarkStyles\",\n    value: function getMarkStyles(value, range, config) {\n      var style;\n\n      if (this.vertical) {\n        style = {\n          marginBottom: '-50%',\n          bottom: \"\".concat((value - this.min) / range * 100, \"%\")\n        };\n      } else {\n        style = {\n          transform: \"translate3d(-50%, 0, 0)\",\n          left: \"\".concat((value - this.min) / range * 100, \"%\")\n        };\n      }\n\n      if (isConfigObject(config) && config.style) {\n        style = Object.assign(Object.assign({}, style), config.style);\n      }\n\n      return style;\n    }\n  }, {\n    key: \"togglePointActive\",\n    value: function togglePointActive() {\n      var _this8 = this;\n\n      if (this.marks && this.lowerBound !== null && this.upperBound !== null) {\n        this.marks.forEach(function (mark) {\n          var value = mark.value;\n          var isActive = !_this8.included && value === _this8.upperBound || _this8.included && value <= _this8.upperBound && value >= _this8.lowerBound;\n          mark.active = isActive;\n        });\n      }\n    }\n  }]);\n\n  return NzSliderMarksComponent;\n}();\n\nNzSliderMarksComponent.ɵfac = function NzSliderMarksComponent_Factory(t) {\n  return new (t || NzSliderMarksComponent)();\n};\n\nNzSliderMarksComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzSliderMarksComponent,\n  selectors: [[\"nz-slider-marks\"]],\n  inputs: {\n    lowerBound: \"lowerBound\",\n    upperBound: \"upperBound\",\n    marksArray: \"marksArray\",\n    vertical: \"vertical\",\n    included: \"included\",\n    min: \"min\",\n    max: \"max\"\n  },\n  exportAs: [\"nzSliderMarks\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ant-slider-mark\"], [\"class\", \"ant-slider-mark-text\", 3, \"ant-slider-mark-active\", \"ngStyle\", \"innerHTML\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ant-slider-mark-text\", 3, \"ngStyle\", \"innerHTML\"]],\n  template: function NzSliderMarksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzSliderMarksComponent_span_1_Template, 1, 4, \"span\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.marks)(\"ngForTrackBy\", ctx.trackById);\n    }\n  },\n  directives: [ɵngcc2.NgForOf, ɵngcc2.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzSliderMarksComponent.propDecorators = {\n  lowerBound: [{\n    type: Input\n  }],\n  upperBound: [{\n    type: Input\n  }],\n  marksArray: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  vertical: [{\n    type: Input\n  }],\n  included: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSliderMarksComponent.prototype, \"vertical\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSliderMarksComponent.prototype, \"included\", void 0);\n\nfunction isConfigObject(config) {\n  return typeof config !== 'string';\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSliderStepComponent = /*#__PURE__*/function () {\n  function NzSliderStepComponent() {\n    _classCallCheck(this, NzSliderStepComponent);\n\n    this.lowerBound = null;\n    this.upperBound = null;\n    this.marksArray = [];\n    this.vertical = false;\n    this.included = false;\n    this.steps = [];\n  }\n\n  _createClass(NzSliderStepComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.marksArray) {\n        this.buildSteps();\n      }\n\n      if (changes.marksArray || changes.lowerBound || changes.upperBound) {\n        this.togglePointActive();\n      }\n    }\n  }, {\n    key: \"trackById\",\n    value: function trackById(_index, step) {\n      return step.value;\n    }\n  }, {\n    key: \"buildSteps\",\n    value: function buildSteps() {\n      var orient = this.vertical ? 'bottom' : 'left';\n      this.steps = this.marksArray.map(function (mark) {\n        var value = mark.value,\n            offset = mark.offset,\n            config = mark.config;\n        return {\n          value: value,\n          offset: offset,\n          config: config,\n          active: false,\n          style: _defineProperty({}, orient, \"\".concat(offset, \"%\"))\n        };\n      });\n    }\n  }, {\n    key: \"togglePointActive\",\n    value: function togglePointActive() {\n      var _this9 = this;\n\n      if (this.steps && this.lowerBound !== null && this.upperBound !== null) {\n        this.steps.forEach(function (step) {\n          var value = step.value;\n          var isActive = !_this9.included && value === _this9.upperBound || _this9.included && value <= _this9.upperBound && value >= _this9.lowerBound;\n          step.active = isActive;\n        });\n      }\n    }\n  }]);\n\n  return NzSliderStepComponent;\n}();\n\nNzSliderStepComponent.ɵfac = function NzSliderStepComponent_Factory(t) {\n  return new (t || NzSliderStepComponent)();\n};\n\nNzSliderStepComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzSliderStepComponent,\n  selectors: [[\"nz-slider-step\"]],\n  inputs: {\n    lowerBound: \"lowerBound\",\n    upperBound: \"upperBound\",\n    marksArray: \"marksArray\",\n    vertical: \"vertical\",\n    included: \"included\"\n  },\n  exportAs: [\"nzSliderStep\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ant-slider-step\"], [\"class\", \"ant-slider-dot\", 3, \"ant-slider-dot-active\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ant-slider-dot\", 3, \"ngStyle\"]],\n  template: function NzSliderStepComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzSliderStepComponent_span_1_Template, 1, 3, \"span\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps)(\"ngForTrackBy\", ctx.trackById);\n    }\n  },\n  directives: [ɵngcc2.NgForOf, ɵngcc2.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzSliderStepComponent.propDecorators = {\n  lowerBound: [{\n    type: Input\n  }],\n  upperBound: [{\n    type: Input\n  }],\n  marksArray: [{\n    type: Input\n  }],\n  vertical: [{\n    type: Input\n  }],\n  included: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSliderStepComponent.prototype, \"vertical\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSliderStepComponent.prototype, \"included\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSliderTrackComponent = /*#__PURE__*/function () {\n  function NzSliderTrackComponent() {\n    _classCallCheck(this, NzSliderTrackComponent);\n\n    this.offset = 0;\n    this.reverse = false;\n    this.length = 0;\n    this.vertical = false;\n    this.included = false;\n    this.style = {};\n  }\n\n  _createClass(NzSliderTrackComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      var _ref3, _ref4;\n\n      var vertical = this.vertical;\n      var reverse = this.reverse;\n      var visibility = this.included ? 'visible' : 'hidden';\n      var offset = this.offset;\n      var length = this.length;\n      var positonStyle = vertical ? (_ref3 = {}, _defineProperty(_ref3, reverse ? 'top' : 'bottom', \"\".concat(offset, \"%\")), _defineProperty(_ref3, reverse ? 'bottom' : 'top', 'auto'), _defineProperty(_ref3, \"height\", \"\".concat(length, \"%\")), _defineProperty(_ref3, \"visibility\", visibility), _ref3) : (_ref4 = {}, _defineProperty(_ref4, reverse ? 'right' : 'left', \"\".concat(offset, \"%\")), _defineProperty(_ref4, reverse ? 'left' : 'right', 'auto'), _defineProperty(_ref4, \"width\", \"\".concat(length, \"%\")), _defineProperty(_ref4, \"visibility\", visibility), _ref4);\n      this.style = positonStyle;\n    }\n  }]);\n\n  return NzSliderTrackComponent;\n}();\n\nNzSliderTrackComponent.ɵfac = function NzSliderTrackComponent_Factory(t) {\n  return new (t || NzSliderTrackComponent)();\n};\n\nNzSliderTrackComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzSliderTrackComponent,\n  selectors: [[\"nz-slider-track\"]],\n  inputs: {\n    offset: \"offset\",\n    reverse: \"reverse\",\n    length: \"length\",\n    vertical: \"vertical\",\n    included: \"included\"\n  },\n  exportAs: [\"nzSliderTrack\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[1, \"ant-slider-track\", 3, \"ngStyle\"]],\n  template: function NzSliderTrackComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style);\n    }\n  },\n  directives: [ɵngcc2.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzSliderTrackComponent.propDecorators = {\n  offset: [{\n    type: Input\n  }],\n  reverse: [{\n    type: Input\n  }],\n  length: [{\n    type: Input\n  }],\n  vertical: [{\n    type: Input\n  }],\n  included: [{\n    type: Input\n  }]\n};\n\n__decorate([InputNumber(), __metadata(\"design:type\", Number)], NzSliderTrackComponent.prototype, \"offset\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzSliderTrackComponent.prototype, \"reverse\", void 0);\n\n__decorate([InputNumber(), __metadata(\"design:type\", Number)], NzSliderTrackComponent.prototype, \"length\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSliderTrackComponent.prototype, \"vertical\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSliderTrackComponent.prototype, \"included\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSliderService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSliderHandleComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider-handle',\n      exportAs: 'nzSliderHandle',\n      preserveWhitespaces: false,\n      template: \"\\n    <div\\n      #handle\\n      class=\\\"ant-slider-handle\\\"\\n      tabindex=\\\"0\\\"\\n      nz-tooltip\\n      [ngStyle]=\\\"style\\\"\\n      [nzTooltipTitle]=\\\"tooltipFormatter === null || tooltipVisible === 'never' ? null : tooltipTitle\\\"\\n      [nzTooltipTrigger]=\\\"null\\\"\\n      [nzTooltipPlacement]=\\\"tooltipPlacement\\\"\\n    ></div>\\n  \",\n      host: {\n        '(mouseenter)': 'enterHandle()',\n        '(mouseleave)': 'leaveHandle()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzSliderService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    tooltipVisible: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    handleEl: [{\n      type: ViewChild,\n      args: ['handle', {\n        static: false\n      }]\n    }],\n    tooltip: [{\n      type: ViewChild,\n      args: [NzTooltipDirective, {\n        static: false\n      }]\n    }],\n    vertical: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipFormatter: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSliderComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider',\n      exportAs: 'nzSlider',\n      preserveWhitespaces: false,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NzSliderComponent;\n        }),\n        multi: true\n      }, NzSliderService],\n      host: {\n        '(keydown)': 'onKeyDown($event)'\n      },\n      template: \"\\n    <div\\n      #slider\\n      class=\\\"ant-slider\\\"\\n      [class.ant-slider-disabled]=\\\"nzDisabled\\\"\\n      [class.ant-slider-vertical]=\\\"nzVertical\\\"\\n      [class.ant-slider-with-marks]=\\\"marksArray\\\"\\n    >\\n      <div class=\\\"ant-slider-rail\\\"></div>\\n      <nz-slider-track\\n        [vertical]=\\\"nzVertical\\\"\\n        [included]=\\\"nzIncluded\\\"\\n        [offset]=\\\"track.offset!\\\"\\n        [length]=\\\"track.length!\\\"\\n        [reverse]=\\\"nzReverse\\\"\\n      ></nz-slider-track>\\n      <nz-slider-step\\n        *ngIf=\\\"marksArray\\\"\\n        [vertical]=\\\"nzVertical\\\"\\n        [lowerBound]=\\\"$any(bounds.lower)\\\"\\n        [upperBound]=\\\"$any(bounds.upper)\\\"\\n        [marksArray]=\\\"marksArray\\\"\\n        [included]=\\\"nzIncluded\\\"\\n      ></nz-slider-step>\\n      <nz-slider-handle\\n        *ngFor=\\\"let handle of handles\\\"\\n        [vertical]=\\\"nzVertical\\\"\\n        [reverse]=\\\"nzReverse\\\"\\n        [offset]=\\\"handle.offset!\\\"\\n        [value]=\\\"handle.value!\\\"\\n        [active]=\\\"handle.active\\\"\\n        [tooltipFormatter]=\\\"nzTipFormatter\\\"\\n        [tooltipVisible]=\\\"nzTooltipVisible\\\"\\n        [tooltipPlacement]=\\\"nzTooltipPlacement\\\"\\n      ></nz-slider-handle>\\n      <nz-slider-marks\\n        *ngIf=\\\"marksArray\\\"\\n        [vertical]=\\\"nzVertical\\\"\\n        [min]=\\\"nzMin\\\"\\n        [max]=\\\"nzMax\\\"\\n        [lowerBound]=\\\"$any(bounds.lower)\\\"\\n        [upperBound]=\\\"$any(bounds.upper)\\\"\\n        [marksArray]=\\\"marksArray\\\"\\n        [included]=\\\"nzIncluded\\\"\\n      ></nz-slider-marks>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NzSliderService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc3.Platform\n    }];\n  }, {\n    nzDisabled: [{\n      type: Input\n    }],\n    nzDots: [{\n      type: Input\n    }],\n    nzIncluded: [{\n      type: Input\n    }],\n    nzRange: [{\n      type: Input\n    }],\n    nzVertical: [{\n      type: Input\n    }],\n    nzReverse: [{\n      type: Input\n    }],\n    nzMarks: [{\n      type: Input\n    }],\n    nzMax: [{\n      type: Input\n    }],\n    nzMin: [{\n      type: Input\n    }],\n    nzStep: [{\n      type: Input\n    }],\n    nzTooltipVisible: [{\n      type: Input\n    }],\n    nzTooltipPlacement: [{\n      type: Input\n    }],\n    nzOnAfterChange: [{\n      type: Output\n    }],\n    slider: [{\n      type: ViewChild,\n      args: ['slider', {\n        static: true\n      }]\n    }],\n    handlerComponents: [{\n      type: ViewChildren,\n      args: [NzSliderHandleComponent]\n    }],\n    nzDefaultValue: [{\n      type: Input\n    }],\n    nzTipFormatter: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSliderMarksComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      selector: 'nz-slider-marks',\n      exportAs: 'nzSliderMarks',\n      template: \"\\n    <div class=\\\"ant-slider-mark\\\">\\n      <span\\n        class=\\\"ant-slider-mark-text\\\"\\n        *ngFor=\\\"let attr of marks; trackBy: trackById\\\"\\n        [class.ant-slider-mark-active]=\\\"attr.active\\\"\\n        [ngStyle]=\\\"attr.style!\\\"\\n        [innerHTML]=\\\"attr.label\\\"\\n      >\\n      </span>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    lowerBound: [{\n      type: Input\n    }],\n    upperBound: [{\n      type: Input\n    }],\n    marksArray: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    included: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSliderStepComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider-step',\n      exportAs: 'nzSliderStep',\n      preserveWhitespaces: false,\n      template: \"\\n    <div class=\\\"ant-slider-step\\\">\\n      <span\\n        class=\\\"ant-slider-dot\\\"\\n        *ngFor=\\\"let mark of steps; trackBy: trackById\\\"\\n        [class.ant-slider-dot-active]=\\\"mark.active\\\"\\n        [ngStyle]=\\\"mark.style!\\\"\\n      >\\n      </span>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    lowerBound: [{\n      type: Input\n    }],\n    upperBound: [{\n      type: Input\n    }],\n    marksArray: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    included: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSliderTrackComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider-track',\n      exportAs: 'nzSliderTrack',\n      preserveWhitespaces: false,\n      template: \" <div class=\\\"ant-slider-track\\\" [ngStyle]=\\\"style\\\"></div> \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    offset: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }],\n    length: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    included: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSliderModule = function NzSliderModule() {\n  _classCallCheck(this, NzSliderModule);\n};\n\nNzSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzSliderModule\n});\nNzSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzSliderModule_Factory(t) {\n    return new (t || NzSliderModule)();\n  },\n  imports: [[CommonModule, PlatformModule, NzToolTipModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzSliderModule, {\n    declarations: function declarations() {\n      return [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, PlatformModule, NzToolTipModule];\n    },\n    exports: function exports() {\n      return [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSliderModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent],\n      declarations: [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent],\n      imports: [CommonModule, PlatformModule, NzToolTipModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzMarks = function NzMarks() {\n  _classCallCheck(this, NzMarks);\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzMarks, NzSliderComponent, NzSliderModule, NzSliderHandleComponent as ɵNzSliderHandleComponent, NzSliderMarksComponent as ɵNzSliderMarksComponent, NzSliderService as ɵNzSliderService, NzSliderStepComponent as ɵNzSliderStepComponent, NzSliderTrackComponent as ɵNzSliderTrackComponent };","map":{"version":3,"sources":["../../components/slider/slider.service.ts","../../components/slider/handle.component.ts","../../components/slider/slider.component.ts","../../components/slider/marks.component.ts","../../components/slider/step.component.ts","../../components/slider/track.component.ts","../../components/slider/slider.module.ts","../../components/slider/typings.ts","../../components/slider/public-api.ts","../../components/slider/ng-zorro-antd-slider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQa,e,GADb,2BAAA;AAAA;;AAEE,OAAA,UAAA,GAAa,KAAb;AACD,C;;gCAHA,uB,CAAU,C,EAAA;AAAA,SAAA,KAAA,CAAA,IAAA,eAAA,GAAA;AAAA,C;;;;2BACT;;ACRF;;;;;IA8Ca,uB;AAkBX,mCAAoB,aAApB,EAA4D,GAA5D,EAAkF;AAAA;;AAAA;;AAA9D,SAAA,aAAA,GAAA,aAAA;AAAwC,SAAA,GAAA,GAAA,GAAA;AARnD,SAAA,cAAA,GAAsC,SAAtC;AAGgB,SAAA,MAAA,GAAS,KAAT;AAGzB,SAAA,KAAA,GAA0B,EAA1B;;AA6BA,SAAA,WAAA,GAAc,YAAA;AACZ,UAAI,CAAC,KAAI,CAAC,aAAL,CAAmB,UAAxB,EAAoC;AAClC,QAAA,KAAI,CAAC,aAAL,CAAmB,IAAnB;;AACA,QAAA,KAAI,CAAC,qBAAL;;AACA,QAAA,KAAI,CAAC,GAAL,CAAS,aAAT;AACD;AACF,KAND;;AAQA,SAAA,WAAA,GAAc,YAAA;AACZ,UAAI,CAAC,KAAI,CAAC,aAAL,CAAmB,UAAxB,EAAoC;AAClC,QAAA,KAAI,CAAC,aAAL,CAAmB,KAAnB;;AACA,QAAA,KAAI,CAAC,GAAL,CAAS,aAAT;AACD;AACF,KALD;AAnCsF;;;;gCAE1E,O,EAAsB;AAAA;;AAAA,UACxB,MADwB,GAC2B,OAD3B,CACxB,MADwB;AAAA,UAChB,KADgB,GAC2B,OAD3B,CAChB,KADgB;AAAA,UACT,MADS,GAC2B,OAD3B,CACT,MADS;AAAA,UACD,cADC,GAC2B,OAD3B,CACD,cADC;AAAA,UACe,OADf,GAC2B,OAD3B,CACe,OADf;;AAGhC,UAAI,MAAM,IAAI,OAAd,EAAuB;AACrB,aAAK,WAAL;AACD;;AAED,UAAI,KAAJ,EAAW;AACT,aAAK,kBAAL;AACA,aAAK,qBAAL;AACD;;AAED,UAAI,MAAJ,EAAY;AACV,YAAI,MAAM,CAAC,YAAX,EAAyB;AACvB,eAAK,aAAL,CAAmB,IAAnB;AACD,SAFD,MAEO;AACL,eAAK,aAAL,CAAmB,KAAnB;AACD;AACF;;AAED,UAAI,CAAA,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAA,cAAc,CAAE,YAAhB,MAAiC,QAArC,EAA+C;AAC7C,QAAA,OAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB;AAAA,iBAAM,MAAI,CAAC,aAAL,CAAmB,IAAnB,EAAyB,IAAzB,CAAN;AAAA,SAAvB;AACD;AACF;;;4BAiBI;AAAK,UAAA,EAAA;;AACR,OAAA,EAAA,GAAA,KAAK,QAAL,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,aAAF,CAAgB,KAAhB,EAAb;AACD;;;kCAEqB,I,EAAqC;AAAA,UAAtB,KAAsB,uEAAL,KAAK;;AAAI,UAAA,EAAA,EAAA,EAAA;;AAC7D,UAAI,CAAC,KAAD,KAAW,KAAK,cAAL,KAAwB,SAAxB,IAAqC,CAAC,KAAK,OAAtD,CAAJ,EAAoE;AAClE;AACD;;AAED,UAAI,IAAJ,EAAU;AACR,SAAA,EAAA,GAAA,KAAK,OAAL,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,IAAF,EAAZ;AACD,OAFD,MAEO;AACL,SAAA,EAAA,GAAA,KAAK,OAAL,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,IAAF,EAAZ;AACD;AACF;;;yCAEyB;AACxB,WAAK,YAAL,GAAoB,KAAK,gBAAL,GAAwB,KAAK,gBAAL,CAAsB,KAAK,KAA3B,CAAxB,aAAgE,KAAK,KAArE,CAApB;AACD;;;4CAE4B;AAAA;;AAC3B,UAAI,KAAK,OAAT,EAAkB;AAChB,QAAA,OAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB,YAAA;AAAA,cAAA,EAAA;;AAAA,iBAAA,CAAA,EAAA,GAAM,MAAI,CAAC,OAAX,MAAkB,IAAlB,IAAkB,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,cAAF,EAAlB;AAAoC,SAA3D;AACD;AACF;;;kCAEkB;AAAA;;AACjB,UAAM,QAAQ,GAAG,KAAK,QAAtB;AACA,UAAM,OAAO,GAAG,KAAK,OAArB;AACA,UAAM,MAAM,GAAG,KAAK,MAApB;AAEA,UAAM,aAAa,GAAG,QAAQ,qCAEvB,OAAO,GAAG,KAAH,GAAW,QAFK,YAES,MAFT,+BAGvB,OAAO,GAAG,QAAH,GAAc,KAHE,EAGM,MAHN,sCAIb,OAAO,GAAG,IAAH,qBAJM,+CAOvB,OAAO,GAAG,OAAH,GAAa,MAPG,YAOS,MAPT,gCAQvB,OAAO,GAAG,MAAH,GAAY,OARI,EAQM,MARN,4DASC,OAAO,GAAG,GAAH,GAAS,GATjB,kBAA9B;AAYA,WAAK,KAAL,GAAa,aAAb;AACA,WAAK,GAAL,CAAS,YAAT;AACD;;;;;;wCAhIF,+B,CAAU,C,EAAA;AAAA,SAAA,KACT,CAAA,IAAA,uBADS,EACQ,MAAA,CAAA,iBAAA,CAA8B,eAA9B,CADR,EAET,MAAe,CAAA,iBAAf,CAAiC,MAAI,CAAA,iBAArC,CAFS,CAAA;AAGD,C;;AAAoB,uBAAA,CAAA,IAAA,GAAA,MAC5B,CAAA,iBAD4B,CAClB;AAAA,EAAA,IAAgB,EAAA,uBAAhB;AACV,EAAA,SAAmB,EAAE,CAAA,CAAA,kBAAA,CAAA,CADX;AAEV,EAAA,SAAU,EAAA,SAAA,6BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;4BAWT,EAAA,GAAA,MAAA,CAAA,WAAA,E,MACK,GAAA,CAAA,OAAA,GAAA,EACJ,CAAA,K;AAAc;AAAE,GAfR;AAeQ,EAAA,YAAA,EAAe,SAAA,oCAAA,CACf,EADe,EACf,GADe,EACA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AAElC,MAAA,MAAA,CAAA,UAAA,CAAA,YAAA,EAAA,SAAA,qDAAA,GAAA;AAAA,eAAA,GAAA,CAAA,WAAA,EAAA;AAAA,OAAA,EAAA,YAAA,EAAA,SAAA,qDAAA,GAAA;AAAA,eAAA,GAAA,CAAA,WAAA,EAAA;AAAA,OAAA;;GAlBW;;;;;;;;;;GAAA;8BAAA;yCAAA;UAAA;SAAA;iKAAA;;;;;;;;;GAAA;yDAAA;kBAAA;mBAmBP;AAnBO,CADkB,CAAA;;AAoBxB,uBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAiD;AAAA,IAAA,IAAA,EA1B9C;AA0B8C,GAAjD,EA1BsB;AAAA,IAAA,IAAA,EAb1B;AAa0B,GA0BtB,CAAA;AAAA,CAAA;;AAtCF,uBAAA,CAAA,cAAA,GAAA;AAGO,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAsCR,SAtCQ;AAsCC,IAAA,IAAA,EAAA,CAAC,QAAD,EAAW;AAAE,MAAA,MAAM,EAAE;AAAV,KAAX;AAtCD,GAAA,CAHP;AAyC2C,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAC5C,SAD4C;AACnC,IAAA,IAAA,EAAA,CAAC,kBAAD,EAAqB;AAAE,MAAA,MAAM,EAAE;AAAV,KAArB;AADmC,GAAA,CAzC3C;AA0CqD,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEtD;AAFsD,GAAA,CA1CrD;AA4CS,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA5CT;AA6CS,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA7CT;AA8CS,EAAA,KAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA9CT;AA+CS,EAAA,cAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA/CT;AAgDS,EAAA,gBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAhDT;AAiDS,EAAA,gBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAjDT;AAkDS,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA;AAlDT,CAAA;;AAmDuB,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAEL,uBAAA,CAAA,SAFK,EAEL,QAFK,EAEL,KAFoB,CAAf,CAAA;AC3D3B;;;;;;IA+Ga,iB;AA+CX,6BAAoB,aAApB,EAA4D,GAA5D,EAA4F,QAA5F,EAA8G;AAAA;;AAA1F,SAAA,aAAA,GAAA,aAAA;AAAwC,SAAA,GAAA,GAAA,GAAA;AAAgC,SAAA,QAAA,GAAA,QAAA;AAjCnE,SAAA,UAAA,GAAa,KAAb;AACA,SAAA,MAAA,GAAkB,KAAlB;AACA,SAAA,UAAA,GAAsB,IAAtB;AACA,SAAA,OAAA,GAAmB,KAAnB;AACA,SAAA,UAAA,GAAsB,KAAtB;AACA,SAAA,SAAA,GAAqB,KAArB;AAEhB,SAAA,OAAA,GAA0B,IAA1B;AACe,SAAA,KAAA,GAAQ,GAAR;AACA,SAAA,KAAA,GAAQ,CAAR;AACA,SAAA,MAAA,GAAS,CAAT;AACf,SAAA,gBAAA,GAAwC,SAAxC;AACA,SAAA,kBAAA,GAA6B,KAA7B;AAGU,SAAA,eAAA,GAAkB,IAAI,YAAJ,EAAlB;AAEnB,SAAA,KAAA,GAA8B,IAA9B;AACA,SAAA,gBAAA,GAAkC,IAAlC;AACA,SAAA,iBAAA,GAAmC,IAAnC;AACA,SAAA,gBAAA,GAAuC,SAAvC,CAa8G,CAb7D;;AACjD,SAAA,KAAA,GAA0D;AAAE,MAAA,MAAM,EAAE,IAAV;AAAgB,MAAA,MAAM,EAAE;AAAxB,KAA1D,CAY8G,CAZrB;;AACzF,SAAA,OAAA,GAA6B,EAA7B,CAW8G,CAX9E;;AAChC,SAAA,UAAA,GAAsC,IAAtC,CAU8G,CAVnE;;AAC3C,SAAA,MAAA,GAAuE;AAAE,MAAA,KAAK,EAAE,IAAT;AAAe,MAAA,KAAK,EAAE;AAAtB,KAAvE,CAS8G,CATV;AASc;;;;+BAE1G;AACN,WAAK,OAAL,GAAe,gBAAgB,CAAC,KAAK,OAAL,GAAe,CAAf,GAAmB,CAApB,CAA/B;AACA,WAAK,UAAL,GAAkB,KAAK,OAAL,GAAe,KAAK,iBAAL,CAAuB,KAAK,OAA5B,CAAf,GAAsD,IAAxE;AACA,WAAK,oBAAL;AACA,WAAK,kBAAL,CAAwB,KAAK,UAA7B;;AAEA,UAAI,KAAK,QAAL,OAAoB,IAAxB,EAA8B;AAC5B,aAAK,QAAL,CAAc,KAAK,WAAL,CAAiB,IAAjB,CAAd;AACD;AACF;;;gCAEW,O,EAAsB;AAAA,UACxB,UADwB,GACS,OADT,CACxB,UADwB;AAAA,UACZ,OADY,GACS,OADT,CACZ,OADY;AAAA,UACH,OADG,GACS,OADT,CACH,OADG;;AAGhC,UAAI,UAAU,IAAI,CAAC,UAAU,CAAC,WAA9B,EAA2C;AACzC,aAAK,kBAAL,CAAwB,UAAU,CAAC,YAAnC;AACD,OAFD,MAEO,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,WAAxB,EAAqC;AAC1C,aAAK,UAAL,GAAkB,KAAK,OAAL,GAAe,KAAK,iBAAL,CAAuB,KAAK,OAA5B,CAAf,GAAsD,IAAxE;AACD,OAFM,MAEA,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,WAAxB,EAAqC;AAC1C,aAAK,QAAL,CAAc,KAAK,WAAL,CAAiB,IAAjB,CAAd;AACD;AACF;;;kCAEU;AACT,WAAK,eAAL;AACD;;;+BAEU,G,EAAyB;AAClC,WAAK,QAAL,CAAc,GAAd,EAAmB,IAAnB;AACD;;;kCAEa,M,EAAqB,CAAU;;;gCAEpC,CAAW;;;qCAEH,E,EAAkC;AACjD,WAAK,aAAL,GAAqB,EAArB;AACD;;;sCAEiB,E,EAAc;AAC9B,WAAK,SAAL,GAAiB,EAAjB;AACD;;;qCAEgB,U,EAAmB;AAClC,WAAK,UAAL,GAAkB,UAAlB;AACA,WAAK,kBAAL,CAAwB,UAAxB;AACD;AACH;;;;;;8BAIY,C,EAAgB;AACxB,UAAM,IAAI,GAAG,CAAC,CAAC,OAAf;AACA,UAAM,UAAU,GAAG,IAAI,KAAK,WAAT,IAAwB,IAAI,KAAK,QAApD;AACA,UAAM,UAAU,GAAG,IAAI,KAAK,UAAT,IAAuB,IAAI,KAAK,UAAnD;;AAEA,UAAI,EAAE,UAAU,IAAI,UAAhB,CAAJ,EAAiC;AAC/B;AACD;;AAED,MAAA,CAAC,CAAC,cAAF;AAEA,UAAM,IAAI,GAAG,CAAC,UAAU,GAAG,CAAC,KAAK,MAAT,GAAkB,KAAK,MAAlC,KAA6C,KAAK,SAAL,GAAiB,CAAC,CAAlB,GAAsB,CAAnE,CAAb;AACA,UAAM,MAAM,GAAG,KAAK,OAAL,GAAgB,KAAK,KAAL,CAAwB,KAAK,gBAA7B,IAAkD,IAAlE,GAA0E,KAAK,KAAL,GAAwB,IAAjH;AACA,WAAK,cAAL,CAAoB,mBAAmB,CAAC,MAAD,EAAS,KAAK,KAAd,EAAqB,KAAK,KAA1B,CAAvC;AACD;;;6BAEgB,K,EAA0D;AAAA,UAA7B,YAA6B,uEAAL,KAAK;;AACzE,UAAI,YAAJ,EAAkB;AAChB,aAAK,KAAL,GAAa,KAAK,WAAL,CAAiB,KAAjB,CAAb;AACA,aAAK,qBAAL;AACD,OAHD,MAGO,IAAI,CAAC,WAAW,CAAC,KAAK,KAAN,EAAc,KAAd,CAAhB,EAAuC;AAC5C,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,qBAAL;AACA,aAAK,aAAL,CAAmB,KAAK,QAAL,CAAc,IAAd,CAAnB;AACD;AACF;;;+BAE6C;AAAA,UAA7B,YAA6B,uEAAL,KAAK;;AAC5C,UAAI,YAAY,IAAI,KAAK,KAArB,IAA8B,YAAY,CAAC,KAAK,KAAN,CAA9C,EAA4D;AAC1D,eAAO,mBAAI,KAAK,KAAT,EAAgB,IAAhB,CAAqB,UAAC,CAAD,EAAI,CAAJ;AAAA,iBAAU,CAAC,GAAG,CAAd;AAAA,SAArB,CAAP;AACD;;AACD,aAAO,KAAK,KAAZ;AACD;AACH;;;;;;qCAI2B,K,EAAqB;AAAA;;AAC5C,UAAI,eAAe,GAAG,KAAtB;;AAEA,UAAI,OAAO,eAAP,KAA2B,WAA/B,EAA4C;AAC1C,QAAA,eAAe,GAAG,KAAK,QAAL,CAAc,IAAd,CAAlB;AACD;;AAED,aAAO,YAAY,CAAC,eAAD,CAAZ,GAAgC,eAAe,CAAC,GAAhB,CAAoB,UAAA,GAAG;AAAA,eAAI,MAAI,CAAC,aAAL,CAAmB,GAAnB,CAAJ;AAAA,OAAvB,CAAhC,GAAsF,KAAK,aAAL,CAAmB,eAAnB,CAA7F;AACD;AACH;;;;;;wCAI8B,Y,EAAoB;AAC9C,UAAM,KAAK,GAAG,KAAK,QAAL,EAAd;;AACA,UAAI,YAAY,CAAC,KAAD,CAAhB,EAAyB;AACvB,YAAI,OAAO,GAAkB,IAA7B;AACA,YAAI,GAAJ;AACA,YAAI,WAAW,GAAG,CAAC,CAAnB;AACA,QAAA,KAAK,CAAC,OAAN,CAAc,UAAC,GAAD,EAAM,KAAN,EAAW;AACvB,UAAA,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,YAAY,GAAG,GAAxB,CAAN;;AACA,cAAI,OAAO,KAAK,IAAZ,IAAoB,GAAG,GAAG,OAA9B,EAAwC;AACtC,YAAA,OAAO,GAAG,GAAV;AACA,YAAA,WAAW,GAAG,KAAd;AACD;AACF,SAND;AAOA,aAAK,gBAAL,GAAwB,WAAxB;AACA,aAAK,iBAAL,CAAuB,OAAvB,GAAiC,WAAjC,EAA8C,KAA9C;AACD,OAbD,MAaO;AACL,aAAK,iBAAL,CAAuB,OAAvB,GAAiC,CAAjC,EAAoC,KAApC;AACD;AACF;;;mCAEsB,Y,EAAoB;AACzC,UAAI,YAAY,CAAC,KAAK,KAAN,CAAhB,EAA+B;AAC7B,YAAM,QAAQ,sBAAQ,KAAK,KAAb,CAAd;;AACA,QAAA,QAAQ,CAAC,KAAK,gBAAN,CAAR,GAAmC,YAAnC;AACA,aAAK,QAAL,CAAc,QAAd;AACD,OAJD,MAIO;AACL,aAAK,QAAL,CAAc,YAAd;AACD;AACF;AACH;;;;;;4CAI+B;AAC3B,UAAM,KAAK,GAAG,KAAK,QAAL,EAAd;AACA,UAAM,MAAM,GAAG,KAAK,gBAAL,CAAsB,KAAtB,CAAf;AACA,UAAM,WAAW,GAAG,KAAK,QAAL,CAAc,IAAd,CAApB;AACA,UAAM,YAAY,GAAG,KAAK,gBAAL,CAAsB,WAAtB,CAArB;AACA,UAAM,UAAU,GAAG,YAAY,CAAC,WAAD,CAAZ,GAA4B,WAA5B,GAA0C,CAAC,CAAD,EAAI,WAAJ,CAA7D;AACA,UAAM,UAAU,GAAG,YAAY,CAAC,YAAD,CAAZ,GAA6B,CAAC,YAAY,CAAC,CAAD,CAAb,EAAkB,YAAY,CAAC,CAAD,CAAZ,GAAkB,YAAY,CAAC,CAAD,CAAhD,CAA7B,GAAoF,CAAC,CAAD,EAAI,YAAJ,CAAvG;AAEA,WAAK,OAAL,CAAa,OAAb,CAAqB,UAAC,MAAD,EAAS,KAAT,EAAc;AACjC,QAAA,MAAM,CAAC,MAAP,GAAgB,YAAY,CAAC,MAAD,CAAZ,GAAuB,MAAM,CAAC,KAAD,CAA7B,GAAuC,MAAvD;AACA,QAAA,MAAM,CAAC,KAAP,GAAe,YAAY,CAAC,KAAD,CAAZ,GAAsB,KAAK,CAAC,KAAD,CAA3B,GAAqC,KAAK,IAAI,CAA7D;AACD,OAHD;;AAR2B,uCAac,UAbd;;AAa1B,WAAK,MAAL,CAAY,KAbc;AAaP,WAAK,MAAL,CAAY,KAbL;AAc1B,WAAK,KAAL,CAAW,MAde,GAcc,UAdd;AAcP,WAAK,KAAL,CAAW,MAdJ,GAcc,UAdd;AAgB3B,WAAK,GAAL,CAAS,YAAT;AACD;;;gCAEmB,K,EAAa;AAC/B,WAAK,gBAAL,CAAsB,IAAtB;AACA,WAAK,mBAAL;AACA,WAAK,mBAAL,CAAyB,KAAK,eAAL,CAAqB,KAArB,CAAzB;AACA,WAAK,cAAL,CAAoB,KAAK,eAAL,CAAqB,KAArB,CAApB;AACA,WAAK,iBAAL,CAAuB,KAAK,OAAL,GAAe,KAAK,gBAApB,GAAuC,CAA9D;AACD;;;+BAEkB,K,EAAa;AAC9B,WAAK,cAAL,CAAoB,KAAK,eAAL,CAAqB,KAArB,CAApB;AACA,WAAK,GAAL,CAAS,YAAT;AACD;;;oCAEuB,K,EAAa;AACnC,aAAO,KAAK,SAAL,GAAiB,KAAK,KAAL,GAAa,KAAb,GAAqB,KAAK,KAA3C,GAAmD,KAA1D;AACD;;;gCAEgB;AACf,WAAK,eAAL,CAAqB,IAArB,CAA0B,KAAK,QAAL,CAAc,IAAd,CAA1B;AACA,WAAK,gBAAL,CAAsB,KAAtB;AACA,WAAK,mBAAL,CAAyB,IAAzB;AACA,WAAK,oBAAL;AACA,WAAK,GAAL,CAAS,YAAT;AACD;AACH;;;;;;2CAI8B;AAAA;;AAC1B,UAAI,CAAC,KAAK,QAAL,CAAc,SAAnB,EAA8B;AAC5B;AACD;;AAED,UAAM,SAAS,GAAG,KAAK,MAAL,CAAY,aAA9B;AACA,UAAM,WAAW,GAAG,KAAK,UAAL,GAAkB,OAAlB,GAA4B,OAAhD;AACA,UAAM,KAAK,GAA6B;AACtC,QAAA,KAAK,EAAE,WAD+B;AAEtC,QAAA,IAAI,EAAE,WAFgC;AAGtC,QAAA,GAAG,EAAE,SAHiC;AAItC,QAAA,QAAQ,EAAE,CAAC,WAAD;AAJ4B,OAAxC;AAMA,UAAM,KAAK,GAA6B;AACtC,QAAA,KAAK,EAAE,YAD+B;AAEtC,QAAA,IAAI,EAAE,WAFgC;AAGtC,QAAA,GAAG,EAAE,UAHiC;AAItC,QAAA,QAAQ,EAAE,CAAC,SAAD,EAAY,GAAZ,EAAiB,WAAjB,CAJ4B;AAKtC,QAAA,MAAM,EAAE,gBAAC,CAAD;AAAA,iBAAgC,CAAC,YAAY,UAA7C;AAAA;AAL8B,OAAxC;AAQA,OAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAAuB,UAAA,MAAM,EAAA;AAAA,YACnB,KADmB,GAC6C,MAD7C,CACnB,KADmB;AAAA,YACZ,IADY,GAC6C,MAD7C,CACZ,IADY;AAAA,YACN,GADM,GAC6C,MAD7C,CACN,GADM;AAAA,YACD,QADC,GAC6C,MAD7C,CACD,QADC;AAAA,6BAC6C,MAD7C,CACS,MADT;AAAA,YACiB,UADjB,+BAC8B;AAAA,iBAAM,IAAN;AAAA,SAD9B;AAG3B,QAAA,MAAM,CAAC,aAAP,GAAuB,SAAS,CAAC,SAAD,EAAY,KAAZ,CAAT,CAA4B,IAA5B,CACrB,MAAM,CAAC,UAAD,CADe,EAErB,GAAG,CAAC,WAAD,CAFkB,EAGrB,KAAK,MAAL,4BAAwB,QAAxB,EAHqB,EAIrB,GAAG,CAAC,UAAC,QAAD;AAAA,iBAAsB,MAAI,CAAC,gBAAL,CAAsB,QAAtB,CAAtB;AAAA,SAAD,CAJkB,CAAvB;AAMA,QAAA,MAAM,CAAC,IAAP,GAAc,SAAS,CAAC,QAAD,EAAW,GAAX,CAAvB;AACA,QAAA,MAAM,CAAC,aAAP,GAAuB,SAAS,CAAC,QAAD,EAAW,IAAX,CAAT,CAA0B,IAA1B,CACrB,MAAM,CAAC,UAAD,CADe,EAErB,GAAG,CAAC,WAAD,CAFkB,EAGrB,KAAK,MAAL,4BAAwB,QAAxB,EAHqB,EAIrB,oBAAoB,EAJC,EAKrB,GAAG,CAAC,UAAC,QAAD;AAAA,iBAAsB,MAAI,CAAC,gBAAL,CAAsB,QAAtB,CAAtB;AAAA,SAAD,CALkB,EAMrB,oBAAoB,EANC,EAOrB,SAAS,CAAC,MAAM,CAAC,IAAR,CAPY,CAAvB;AASD,OAnBD;AAqBA,WAAK,UAAL,GAAkB,KAAK,CAAC,KAAK,CAAC,aAAP,EAAuB,KAAK,CAAC,aAA7B,CAAvB;AACA,WAAK,SAAL,GAAiB,KAAK,CAAC,KAAK,CAAC,aAAP,EAAuB,KAAK,CAAC,aAA7B,CAAtB;AACA,WAAK,QAAL,GAAgB,KAAK,CAAC,KAAK,CAAC,IAAP,EAAc,KAAK,CAAC,IAApB,CAArB;AACD;;;oCAEiE;AAAA,UAA5C,OAA4C,uEAAxB,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,CAAwB;;AAChE,UAAI,OAAO,CAAC,OAAR,CAAgB,OAAhB,MAA6B,CAAC,CAA9B,IAAmC,KAAK,UAAxC,IAAsD,CAAC,KAAK,UAAhE,EAA4E;AAC1E,aAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,SAAhB,CAA0B,KAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,CAA1B,CAAlB;AACD;;AAED,UAAI,OAAO,CAAC,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAA7B,IAAkC,KAAK,SAAvC,IAAoD,CAAC,KAAK,SAA9D,EAAyE;AACvE,aAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,SAAf,CAAyB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAzB,CAAjB;AACD;;AAED,UAAI,OAAO,CAAC,OAAR,CAAgB,KAAhB,MAA2B,CAAC,CAA5B,IAAiC,KAAK,QAAtC,IAAkD,CAAC,KAAK,QAA5D,EAAsE;AACpE,aAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,SAAd,CAAwB,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAxB,CAAhB;AACD;AACF;;;sCAEmE;AAAA,UAA5C,OAA4C,uEAAxB,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,CAAwB;;AAClE,UAAI,OAAO,CAAC,OAAR,CAAgB,OAAhB,MAA6B,CAAC,CAA9B,IAAmC,KAAK,UAA5C,EAAwD;AACtD,aAAK,UAAL,CAAgB,WAAhB;AACA,aAAK,UAAL,GAAkB,IAAlB;AACD;;AAED,UAAI,OAAO,CAAC,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAA7B,IAAkC,KAAK,SAA3C,EAAsD;AACpD,aAAK,SAAL,CAAe,WAAf;AACA,aAAK,SAAL,GAAiB,IAAjB;AACD;;AAED,UAAI,OAAO,CAAC,OAAR,CAAgB,KAAhB,MAA2B,CAAC,CAA5B,IAAiC,KAAK,QAA1C,EAAoD;AAClD,aAAK,QAAL,CAAc,WAAd;AACA,aAAK,QAAL,GAAgB,IAAhB;AACD;AACF;;;qCAEwB,O,EAAgB;AACvC,UAAM,OAAO,GAAG,CAAC,MAAD,EAAS,KAAT,CAAhB;;AACA,UAAI,OAAJ,EAAa;AACX,aAAK,aAAL,CAAmB,UAAnB,GAAgC,IAAhC;AACA,aAAK,aAAL,CAAmB,OAAnB;AACD,OAHD,MAGO;AACL,aAAK,aAAL,CAAmB,UAAnB,GAAgC,KAAhC;AACA,aAAK,eAAL,CAAqB,OAArB;AACD;AACF;;;uCAE0B,Q,EAAiB;AAC1C,UAAI,QAAJ,EAAc;AACZ,aAAK,eAAL;AACD,OAFD,MAEO;AACL,aAAK,aAAL,CAAmB,CAAC,OAAD,CAAnB;AACD;AACF;;;qCAEwB,Q,EAAgB;AACvC,UAAM,WAAW,GAAG,KAAK,sBAAL,EAApB;AACA,UAAM,YAAY,GAAG,KAAK,eAAL,EAArB;AACA,UAAM,KAAK,GAAG,mBAAmB,CAAC,CAAC,QAAQ,GAAG,WAAZ,IAA2B,YAA5B,EAA0C,CAA1C,EAA6C,CAA7C,CAAjC;AACA,UAAM,GAAG,GAAG,CAAC,KAAK,KAAL,GAAa,KAAK,KAAnB,KAA6B,KAAK,UAAL,GAAkB,IAAI,KAAtB,GAA8B,KAA3D,IAAoE,KAAK,KAArF;AACA,UAAM,MAAM,GACV,KAAK,OAAL,KAAiB,IAAjB,GACI,EADJ,GAEI,MAAM,CAAC,IAAP,CAAY,KAAK,OAAjB,EACG,GADH,CACO,UADP,EAEG,IAFH,CAEQ,UAAC,CAAD,EAAI,CAAJ;AAAA,eAAU,CAAC,GAAG,CAAd;AAAA,OAFR,CAHN;;AAOA,UAAI,KAAK,MAAL,KAAgB,CAAhB,IAAqB,CAAC,KAAK,MAA/B,EAAuC;AACrC,YAAM,UAAU,GAAG,IAAI,CAAC,KAAL,CAAW,GAAG,GAAG,KAAK,MAAtB,IAAgC,KAAK,MAAxD;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,UAAZ;AACD;;AAED,UAAM,IAAI,GAAG,MAAM,CAAC,GAAP,CAAW,UAAA,KAAK;AAAA,eAAI,IAAI,CAAC,GAAL,CAAS,GAAG,GAAG,KAAf,CAAJ;AAAA,OAAhB,CAAb;AACA,UAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,GAAL,OAAA,IAAI,qBAAQ,IAAR,EAAjB,CAAD,CAAtB,CAlBuC,CAmB3C;;AAEI,aAAO,KAAK,MAAL,KAAgB,CAAhB,GAAoB,OAApB,GAA8B,UAAU,CAAC,OAAO,CAAC,OAAR,CAAgB,YAAY,CAAC,KAAK,MAAN,CAA5B,CAAD,CAA/C;AACD;;;kCAEqB,K,EAAa;AACjC,aAAO,UAAU,CAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,EAAyB,KAAzB,CAAjB;AACD;;;6CAE6B;AAC5B,UAAI,KAAK,gBAAL,KAA0B,IAA9B,EAAoC;AAClC,eAAO,KAAK,gBAAZ;AACD;;AACD,UAAM,MAAM,GAAG,gBAAgB,CAAC,KAAK,MAAL,CAAY,aAAb,CAA/B;AACA,aAAO,KAAK,UAAL,GAAkB,MAAM,CAAC,GAAzB,GAA+B,MAAM,CAAC,IAA7C;AACD;;;sCAEsB;AACrB,UAAI,KAAK,iBAAL,KAA2B,IAA/B,EAAqC;AACnC,eAAO,KAAK,iBAAZ;AACD;;AACD,UAAM,SAAS,GAAG,KAAK,MAAL,CAAY,aAA9B;AACA,aAAO,KAAK,UAAL,GAAkB,SAAS,CAAC,YAA5B,GAA2C,SAAS,CAAC,WAA5D;AACD;AACH;;;;;;0CAIqD;AAAA,UAAvB,MAAuB,uEAAL,KAAK;AACjD,WAAK,gBAAL,GAAwB,MAAM,GAAG,IAAH,GAAU,KAAK,sBAAL,EAAxC;AACA,WAAK,iBAAL,GAAyB,MAAM,GAAG,IAAH,GAAU,KAAK,eAAL,EAAzC;AACD;;;gCAEmB,K,EAA2B;AAAA;;AAC7C,UAAI,CAAC,KAAL,EAAY;AACV,eAAO,KAAK,OAAL,GAAe,CAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,CAAf,GAA0C,KAAK,KAAtD;AACD,OAFD,MAEO,IAAI,gBAAgB,CAAC,KAAD,EAAQ,KAAK,OAAb,CAApB,EAA2C;AAChD,eAAO,YAAY,CAAC,KAAD,CAAZ,GACH,KAAK,CAAC,GAAN,CAAU,UAAA,GAAG;AAAA,iBAAI,mBAAmB,CAAC,GAAD,EAAM,MAAI,CAAC,KAAX,EAAkB,MAAI,CAAC,KAAvB,CAAvB;AAAA,SAAb,CADG,GAEH,mBAAmB,CAAC,KAAD,EAAQ,KAAK,KAAb,EAAoB,KAAK,KAAzB,CAFvB;AAGD,OAJM,MAIA;AACL,eAAO,KAAK,cAAL,GAAsB,KAAK,cAA3B,GAA4C,KAAK,OAAL,GAAe,CAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,CAAf,GAA0C,KAAK,KAAlG;AACD;AACF;AACH;;;;;;wCAImD;AAAA,UAAvB,WAAuB,uEAAD,CAAC;AAC/C,WAAK,OAAL,CAAa,OAAb,CAAqB,UAAC,MAAD,EAAS,KAAT,EAAc;AACjC,QAAA,MAAM,CAAC,MAAP,GAAgB,KAAK,KAAK,WAA1B;AACD,OAFD;AAGD;;;2CAE2B;AAC1B,WAAK,OAAL,CAAa,OAAb,CAAqB,UAAA,MAAM;AAAA,eAAK,MAAM,CAAC,MAAP,GAAgB,KAArB;AAAA,OAA3B;AACD;;;sCAEyB,K,EAAc;AACtC,UAAM,UAAU,GAAqB,EAArC;;AACA,WAAK,IAAM,GAAX,IAAkB,KAAlB,EAAyB;AACvB,YAAM,IAAI,GAAG,KAAK,CAAC,GAAD,CAAlB;AACA,YAAM,GAAG,GAAG,OAAO,GAAP,KAAe,QAAf,GAA0B,GAA1B,GAAgC,UAAU,CAAC,GAAD,CAAtD;;AACA,YAAI,GAAG,IAAI,KAAK,KAAZ,IAAqB,GAAG,IAAI,KAAK,KAArC,EAA4C;AAC1C,UAAA,UAAU,CAAC,IAAX,CAAgB;AAAE,YAAA,KAAK,EAAE,GAAT;AAAc,YAAA,MAAM,EAAE,KAAK,aAAL,CAAmB,GAAnB,CAAtB;AAA+C,YAAA,MAAM,EAAE;AAAvD,WAAhB;AACD;AACF;;AACD,aAAO,UAAU,CAAC,MAAX,GAAoB,UAApB,GAAiC,IAAxC;AACD;;;;;;kCA/dF,yB,CAAS,C,EAAC;AAAA,SAAA,KAAA,CAAA,IACT,iBADS,EACQ,MAAA,CAAA,iBAAA,CAAwB,eAAxB,CADR,EACsC,MAC/C,CAAA,iBAD+C,CAChC,MAAA,CAAA,iBADgC,CADtC,EAE4B,MACrC,CAAA,iBADqC,CAC3B,MAAW,CAAA,QADgB,CAF5B,CAAA;AAIT,C;;AAAQ,iBAAY,CAAA,IAAZ,GAAY,MAAA,CAAA,iBAAA,CACpB;AAAA,EAAA,IAAqB,EAAA,iBAArB;AAA0B,EAAA,SAC1B,EAAS,CAAA,CAAE,WAAF,CAAA,CADT;AACW,EAAA,SACT,EAAA,SAAA,uBAAA,CACW,EADX,EACW,GADX,EACW;AAAA,QAAiB,EAAA,GAAA,CAAjB,EAAiB;aAC1B,iB,CAAa,G,EAAA,I;AAAiB,MAAA,MAAA,CAAA,WAAA,CAAkB,uBAAlB,EACvB,IADuB;;;gBAE/B;;;AACD,MAAA,MAAA,CAAA,cAAA,CAAe,EAAA,GAAA,MAChB,CAAA,WADgB,EAAf,MAEE,GAAE,CAAA,MAAF,GAAE,EAAA,CAAA,KAFJ;AAGW,MAAA,MAAE,CAAA,cAAF,CAAE,EAAmB,GAAA,MAAA,CAAA,WAAA,EAArB,MACZ,GAAA,CAAA,iBAAA,GACS,EAFG;;GAVb;;;;;;;GAAA;;;;;;;;;;;;;;;;GAAA;;;GAAA;wBAAA;;;;;;;oDAAA;UAAA;UAAA;saA0DC,U,EAAA,C,EAAA,M,GACF,CAAA,CAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,UAAA,C,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,SAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,kBAAA,C,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,KAAA,EAAA,KAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,UAAA,C,CA3DC;AA2DD,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;GA3DC;;;GAAA;kBAAA;mBA4DG;AA5DH,CADoB,CAAZ;;AA6DJ,iBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAA2C;AAAA,IAAA,IAAA,EArExC;AAqEwC,GAA3C,EArEsB;AAAA,IAAA,IAAA,EAjC1B;AAiC0B,GAqEtB,EArGJ;AAAA,IAAA,IAAA,EAJO;AAIP,GAqGI,CAAA;AAAA,CAAA;;AAzGiB,iBAAA,CAAA,cAAA,GAAA;AAEtB,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAkHE,SAlHF;AAkHW,IAAA,IAAA,EAAA,CAAC,QAAD,EAAW;AAAE,MAAA,MAAM,EAAE;AAAV,KAAX;AAlHX,GAAA,CAFsB;AAoHuB,EAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAC3C,YAD2C;AAC/B,IAAA,IAAA,EAAA,CAAC,uBAAD;AAD+B,GAAA,CApHvB;AAqHuB,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAE3C;AAF2C,GAAA,CArHvB;AAuHV,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAvHU;AAwHV,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAxHU;AAyHV,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAzHU;AA0HV,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA1HU;AA2HV,EAAA,SAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA3HU;AA4HV,EAAA,cAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA5HU;AA6HV,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA7HU;AA8HV,EAAA,KAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA9HU;AA+HV,EAAA,KAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA/HU;AAgIV,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAhIU;AAiIV,EAAA,gBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAjIU;AAkIV,EAAA,kBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAlIU;AAmIV,EAAA,cAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAnIU;AAoIV,EAAA,eAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV;AAFU,GAAA;AApIU,CAAA;;AAuHI,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACR,iBAAA,CAAA,SADQ,EACR,YADQ,EACR,KAD2B,CAAnB,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACZ,iBAAA,CAAA,SADY,EACZ,QADY,EACZ,KADoC,CAAxB,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACf,iBAAA,CAAA,SADe,EACf,YADe,EACf,KAD0C,CAA3B,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACb,iBAAA,CAAA,SADa,EACb,SADa,EACb,KADsC,CAAzB,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EAChB,iBAAA,CAAA,SADgB,EAChB,YADgB,EAChB,KAD4C,CAA5B,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACf,iBAAA,CAAA,SADe,EACf,WADe,EACf,KAD0C,CAA3B,CAAA;;AAGD,UAAA,CAAA,CAAd,WAAW,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACA,iBAAA,CAAA,SADA,EACA,OADA,EACA,KADY,CAAZ,CAAA;;AACA,UAAA,CAAA,CAAd,WAAW,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACE,iBAAA,CAAA,SADF,EACE,OADF,EACE,KADQ,CAAV,CAAA;;AACA,UAAA,CAAA,CAAd,WAAW,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACC,iBAAA,CAAA,SADD,EACC,QADD,EACC,KADU,CAAX,CAAA;;AAyY1B,SAAS,yBAAT,GAAkC;AAChC,SAAO,IAAI,KAAJ,oIAAP;AAGD;;AAED,SAAS,YAAT,CAAsB,KAAtB,EAA0C;AACxC,MAAI,KAAK,YAAY,KAArB,EAA4B;AAC1B,WAAO,KAAK,CAAC,MAAN,KAAiB,CAAxB;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF;;AAED,SAAS,gBAAT,CAA0B,MAA1B,EAAwC;AACtC,SAAO,KAAK,CAAC,MAAD,CAAL,CACJ,IADI,CACC,CADD,EAEJ,GAFI,CAEA;AAAA,WAAO;AAAE,MAAA,MAAM,EAAE,IAAV;AAAgB,MAAA,KAAK,EAAE,IAAvB;AAA6B,MAAA,MAAM,EAAE;AAArC,KAAP;AAAA,GAFA,CAAP;AAGD;AAED;;;;;AAGA,SAAS,gBAAT,CAA0B,KAA1B,EAAgD,OAAhD,EAAiE;AAC/D,MAAK,CAAC,YAAY,CAAC,KAAD,CAAb,IAAwB,KAAK,CAAC,KAAD,CAA9B,IAA2C,YAAY,CAAC,KAAD,CAAZ,IAAuB,KAAK,CAAC,IAAN,CAAW,UAAA,CAAC;AAAA,WAAI,KAAK,CAAC,CAAD,CAAT;AAAA,GAAZ,CAAtE,EAAkG;AAChG,WAAO,KAAP;AACD;;AACD,SAAO,oBAAoB,CAAC,KAAD,EAAQ,OAAR,CAA3B;AACD;AAED;;;;;AAGA,SAAS,oBAAT,CAA8B,KAA9B,EAA4E;AAAA,MAAxB,OAAwB,uEAAL,KAAK;;AAC1E,MAAI,YAAY,CAAC,KAAD,CAAZ,KAAwB,OAA5B,EAAqC;AACnC,UAAM,yBAAyB,EAA/B;AACD;;AACD,SAAO,IAAP;AACD;;AAED,SAAS,WAAT,CAAqB,IAArB,EAA0C,IAA1C,EAA6D;AAC3D,MAAI,OAAO,IAAP,KAAgB,OAAO,IAA3B,EAAiC;AAC/B,WAAO,KAAP;AACD;;AACD,SAAO,YAAY,CAAC,IAAD,CAAZ,IAAsB,YAAY,CAAC,IAAD,CAAlC,GAA2C,WAAW,CAAS,IAAT,EAAe,IAAf,CAAtD,GAA6E,IAAI,KAAK,IAA7F;AACF;AC7jBA;;;;;;IA8Ba,sB;AAnBb,oCAAA;AAAA;;AAuBW,SAAA,UAAA,GAA4B,IAA5B;AACA,SAAA,UAAA,GAA4B,IAA5B;AACA,SAAA,UAAA,GAA+B,EAA/B;AAGgB,SAAA,QAAA,GAAW,KAAX;AACA,SAAA,QAAA,GAAW,KAAX;AAEzB,SAAA,KAAA,GAA2B,EAA3B;AAsED;;;;gCApEa,O,EAAsB;AAAA,UACxB,UADwB,GACe,OADf,CACxB,UADwB;AAAA,UACZ,UADY,GACe,OADf,CACZ,UADY;AAAA,UACA,UADA,GACe,OADf,CACA,UADA;;AAGhC,UAAI,UAAJ,EAAgB;AACd,aAAK,UAAL;AACD;;AAED,UAAI,UAAU,IAAI,UAAd,IAA4B,UAAhC,EAA4C;AAC1C,aAAK,iBAAL;AACD;AACF;;;8BAES,M,EAAgB,I,EAAqB;AAC7C,aAAO,IAAI,CAAC,KAAZ;AACD;;;iCAEiB;AAAA;;AAChB,UAAM,KAAK,GAAG,KAAK,GAAL,GAAW,KAAK,GAA9B;AAEA,WAAK,KAAL,GAAa,KAAK,UAAL,CAAgB,GAAhB,CAAoB,UAAA,IAAI,EAAA;AAAA,YAC3B,KAD2B,GACD,IADC,CAC3B,KAD2B;AAAA,YACpB,MADoB,GACD,IADC,CACpB,MADoB;AAAA,YACZ,MADY,GACD,IADC,CACZ,MADY;;AAEnC,YAAM,KAAK,GAAG,MAAI,CAAC,aAAL,CAAmB,KAAnB,EAA0B,KAA1B,EAAiC,MAAjC,CAAd;;AACA,YAAM,KAAK,GAAG,cAAc,CAAC,MAAD,CAAd,GAAyB,MAAM,CAAC,KAAhC,GAAwC,MAAtD;AAEA,eAAO;AACL,UAAA,KAAK,EAAL,KADK;AAEL,UAAA,MAAM,EAAN,MAFK;AAGL,UAAA,KAAK,EAAL,KAHK;AAIL,UAAA,KAAK,EAAL,KAJK;AAKL,UAAA,MAAM,EAAN,MALK;AAML,UAAA,MAAM,EAAE;AANH,SAAP;AAQD,OAbY,CAAb;AAcD;;;kCAEqB,K,EAAe,K,EAAe,M,EAAc;AAChE,UAAI,KAAJ;;AAEA,UAAI,KAAK,QAAT,EAAmB;AACjB,QAAA,KAAK,GAAG;AACN,UAAA,YAAY,EAAE,MADR;AAEN,UAAA,MAAM,YAAM,CAAC,KAAK,GAAG,KAAK,GAAd,IAAqB,KAAtB,GAA+B,GAApC;AAFA,SAAR;AAID,OALD,MAKO;AACL,QAAA,KAAK,GAAG;AACN,UAAA,SAAS,2BADH;AAEN,UAAA,IAAI,YAAM,CAAC,KAAK,GAAG,KAAK,GAAd,IAAqB,KAAtB,GAA+B,GAApC;AAFE,SAAR;AAID;;AAED,UAAI,cAAc,CAAC,MAAD,CAAd,IAA0B,MAAM,CAAC,KAArC,EAA4C;AAC1C,QAAA,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,KAAR,CAAA,EAAkB,MAAM,CAAC,KAAzB,CAAL;AACD;;AAED,aAAO,KAAP;AACD;;;wCAEwB;AAAA;;AACvB,UAAI,KAAK,KAAL,IAAc,KAAK,UAAL,KAAoB,IAAlC,IAA0C,KAAK,UAAL,KAAoB,IAAlE,EAAwE;AACtE,aAAK,KAAL,CAAW,OAAX,CAAmB,UAAA,IAAI,EAAA;AACrB,cAAM,KAAK,GAAG,IAAI,CAAC,KAAnB;AACA,cAAM,QAAQ,GACX,CAAC,MAAI,CAAC,QAAN,IAAkB,KAAK,KAAK,MAAI,CAAC,UAAlC,IAAkD,MAAI,CAAC,QAAL,IAAiB,KAAK,IAAI,MAAI,CAAC,UAA/B,IAA8C,KAAK,IAAI,MAAI,CAAC,UADhH;AAGA,UAAA,IAAI,CAAC,MAAL,GAAc,QAAd;AACD,SAND;AAOD;AACF;;;;;;uCApGF,8B,CAAU,C,EAAA;AAAA,SAAA,KACT,CAAA,IAAA,sBADS,GAAA;AACQ,C;;AAAuB,sBAAO,CAAA,IAAP,GACxC,MAAA,CAAA,iBAAA,CAAe;AAAA,EAAA,IAAiB,EAAC,sBAAlB;AACf,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CADe;AACW,EAAA,MAAA,EAC1B;AAAA,IAAA,UAAU,EAAA,YAAV;AAA2B,IAAA,UAAA,EAAA,YAA3B;AACU,IAAA,UAAA,EAAA,YADV;AACyB,IAAA,QACzB,EAAA,UAFA;AAEU,IAAA,QAAA,EAAA,UAFV;AAEU,IAAA,GAAA,EAAA,KAFV;AAEU,IAAA,GAAA,EAAA;AAFV,GAFe;AAIL,EAAA,QAAA,EAAA,CAAA,eAAA,CAJK;AAIL,EAAA,QAAA,EAAA,CAAA,MAAA,CAAA,oBAAA,CAJK;AAIL,EAAA,KAAA,EAAA,CAJK;AAIL,EAAA,IAAA,EAAA,CAJK;AAIL,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,sBAAA,EAAA,CAAA,EAAA,wBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,EAAA,cAAA,CAAA,EAWT,CAAA,CAAA,EAAA,sBAAA,EACF,CADE,EACF,SADE,EACF,WADE,CAXS,CAJK;AAgBhB,EAAA,QAAA,EAAA,SAAA,+BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;GAhBgB;8CAAA;kBAAA;mBAiBZ;AAjBY,CAAf,CADwC;AAkBpC,sBAAA,CAAA,cAAA,GAAA;AAA0C,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAI7C;AAJ6C,GAAA,CAA1C;AAIO,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAJP;AAKO,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CALP;AAMO,EAAA,GAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CANP;AAOO,EAAA,GAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAPP;AAQO,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CARP;AASO,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA;AATP,CAAA;;AASqB,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACN,sBAAA,CAAA,SADM,EACN,UADM,EACN,KADuB,CAAjB,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAEP,sBAAA,CAAA,SAFO,EAEP,UAFO,EAEP,KAFwB,CAAjB,CAAA;;AA0E3B,SAAS,cAAT,CAAwB,MAAxB,EAAsC;AACpC,SAAO,OAAO,MAAP,KAAkB,QAAzB;AACF;ACpHA;;;;;;IA8Ba,qB;AAlBb,mCAAA;AAAA;;AAsBW,SAAA,UAAA,GAA4B,IAA5B;AACA,SAAA,UAAA,GAA4B,IAA5B;AACA,SAAA,UAAA,GAA+B,EAA/B;AACgB,SAAA,QAAA,GAAW,KAAX;AACA,SAAA,QAAA,GAAW,KAAX;AAEzB,SAAA,KAAA,GAA2B,EAA3B;AA2CD;;;;gCAzCa,O,EAAsB;AAChC,UAAI,OAAO,CAAC,UAAZ,EAAwB;AACtB,aAAK,UAAL;AACD;;AACD,UAAI,OAAO,CAAC,UAAR,IAAsB,OAAO,CAAC,UAA9B,IAA4C,OAAO,CAAC,UAAxD,EAAoE;AAClE,aAAK,iBAAL;AACD;AACF;;;8BAES,M,EAAgB,I,EAAqB;AAC7C,aAAO,IAAI,CAAC,KAAZ;AACD;;;iCAEiB;AAChB,UAAM,MAAM,GAAG,KAAK,QAAL,GAAgB,QAAhB,GAA2B,MAA1C;AAEA,WAAK,KAAL,GAAa,KAAK,UAAL,CAAgB,GAAhB,CAAoB,UAAA,IAAI,EAAA;AAAA,YAC3B,KAD2B,GACD,IADC,CAC3B,KAD2B;AAAA,YACpB,MADoB,GACD,IADC,CACpB,MADoB;AAAA,YACZ,MADY,GACD,IADC,CACZ,MADY;AAGnC,eAAO;AACL,UAAA,KAAK,EAAL,KADK;AAEL,UAAA,MAAM,EAAN,MAFK;AAGL,UAAA,MAAM,EAAN,MAHK;AAIL,UAAA,MAAM,EAAE,KAJH;AAKL,UAAA,KAAK,sBACF,MADE,YACU,MADV;AALA,SAAP;AASD,OAZY,CAAb;AAaD;;;wCAEwB;AAAA;;AACvB,UAAI,KAAK,KAAL,IAAc,KAAK,UAAL,KAAoB,IAAlC,IAA0C,KAAK,UAAL,KAAoB,IAAlE,EAAwE;AACtE,aAAK,KAAL,CAAW,OAAX,CAAmB,UAAA,IAAI,EAAA;AACrB,cAAM,KAAK,GAAG,IAAI,CAAC,KAAnB;AACA,cAAM,QAAQ,GACX,CAAC,MAAI,CAAC,QAAN,IAAkB,KAAK,KAAK,MAAI,CAAC,UAAlC,IAAkD,MAAI,CAAC,QAAL,IAAiB,KAAK,IAAI,MAAI,CAAC,UAA/B,IAA8C,KAAK,IAAI,MAAI,CAAC,UADhH;AAEA,UAAA,IAAI,CAAC,MAAL,GAAc,QAAd;AACD,SALD;AAMD;AACF;;;;;;sCAtEF,6B,CAAU,C,EAAA;AAAA,SAAA,KACT,CAAA,IAAA,qBADS,GAAA;AACQ,C;;AAAuB,qBAAO,CAAA,IAAP,GAAO,MAC/C,CAAA,iBAD+C,CAChC;AAAA,EAAA,IAAA,EAAA,qBAAA;AAAsB,EAAA,SAC7B,EAAE,CAAA,CAAA,gBAAA,CAAA,CADK;AACW,EAAA,MAAA,EAAA;AAAA,IAAA,UAClB,EAAE,YADgB;AACF,IAAA,UAAA,EAAA,YADE;AAE1B,IAAA,UAAA,EAAmB,YAFO;AAEA,IAAA,QAAA,EAC1B,UAH0B;AAGhB,IAAA,QAAA,EAAA;AAHgB,GADX;AAIL,EAAA,QAAA,EAAA,CAAA,cAAA,CAJK;AAIL,EAAA,QAAA,EAAA,CAAA,MAAA,CAAA,oBAAA,CAJK;AAIL,EAAA,KAAA,EAAA,CAJK;AAIL,EAAA,IAAA,EAAA,CAJK;AAIL,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,uBAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,EAAA,cAAA,CAAA,EAUT,CAAA,CAAA,EAAA,gBAAA,EACF,CADE,EACF,SADE,CAVS,CAJK;AAehB,EAAA,QAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;GAfgB;8CAAA;kBAAA;mBAgBZ;AAhBY,CADgC,CAAP;AAiBpC,qBAAA,CAAA,cAAA,GAAA;AAAyC,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAI5C;AAJ4C,GAAA,CAAzC;AAIO,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAJP;AAKO,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CALP;AAMO,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CANP;AAOO,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA;AAPP,CAAA;;AAOqB,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACN,qBAAA,CAAA,SADM,EACN,UADM,EACN,KADuB,CAAjB,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAEP,qBAAA,CAAA,SAFO,EAEP,UAFO,EAEP,KAFwB,CAAjB,CAAA;ACtC3B;;;;;;IAyBa,sB;AARb,oCAAA;AAAA;;AAe0B,SAAA,MAAA,GAAiB,CAAjB;AACC,SAAA,OAAA,GAAmB,KAAnB;AACD,SAAA,MAAA,GAAiB,CAAjB;AACC,SAAA,QAAA,GAAW,KAAX;AACA,SAAA,QAAA,GAAW,KAAX;AAEzB,SAAA,KAAA,GAA4B,EAA5B;AAyBD;;;;kCAvBY;AAAA;;AACT,UAAM,QAAQ,GAAG,KAAK,QAAtB;AACA,UAAM,OAAO,GAAG,KAAK,OAArB;AACA,UAAM,UAAU,GAAG,KAAK,QAAL,GAAgB,SAAhB,GAA4B,QAA/C;AACA,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,UAAM,MAAM,GAAG,KAAK,MAApB;AAEA,UAAM,YAAY,GAAuB,QAAQ,uCAE1C,OAAO,GAAG,KAAH,GAAW,QAFwB,YAEV,MAFU,gCAG1C,OAAO,GAAG,QAAH,GAAc,KAHqB,EAGb,MAHa,8CAIhC,MAJgC,8CAK3C,UAL2C,gDAQ1C,OAAO,GAAG,OAAH,GAAa,MARsB,YAQV,MARU,gCAS1C,OAAO,GAAG,MAAH,GAAY,OATuB,EASb,MATa,6CAUjC,MAViC,8CAW3C,UAX2C,SAAjD;AAcA,WAAK,KAAL,GAAa,YAAb;AACD;;;;;;uCA7CF,8B,CAAU,C,EAAA;AAAA,SAAA,KACT,CAAA,IAAA,sBADS,GAAA;AACQ,C;;AAAuB,sBAAO,CAAA,IAAP,GACxC,MAAA,CAAA,iBAAA,CAAe;AAAA,EAAA,IAAiB,EAAC,sBAAlB;AACf,EAAA,SAAU,EAAA,CAAA,CAAA,iBAAA,CAAA,CADK;AACY,EAAA,MAAA,EAC3B;AAAA,IAAA,MAAQ,EAAE,QAAV;AAAU,IAAA,OAAe,EAAA,SAAzB;AAAyB,IAAA,MACzB,EAAA,QADA;AACA,IAAA,QAAqB,EAAA,UADrB;AAC0B,IAAA,QAC1B,EAAA;AAFA,GAFe;AAIL,EAAA,QAAA,EAAA,CAAA,eAAA,CAJK;AAIL,EAAA,QAAA,EAAA,CAAA,MAAA,CAAA,oBAAA,CAJK;AAKhB,EAAA,KAAA,EAAA,CALgB;AAKhB,EAAA,IAAA,EAAA,CALgB;AAKhB,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CALgB;AAKhB,EAAA,QAAA,EAAA,SAAA,+BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;GALgB;8BAAA;kBAAA;mBAMZ;AANY,CAAf,CADwC;AAOpC,sBAAA,CAAA,cAAA,GAAA;AAA0C,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAO7C;AAP6C,GAAA,CAA1C;AAOO,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAPP;AAQO,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CARP;AASO,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CATP;AAUO,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA;AAVP,CAAA;;AAOoB,UAAA,CAAA,CAAd,WAAW,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACP,sBAAA,CAAA,SADO,EACP,QADO,EACP,KAD0B,CAAnB,CAAA;;AACC,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACb,sBAAA,CAAA,SADa,EACb,SADa,EACb,KADsC,CAAzB,CAAA;;AACD,UAAA,CAAA,CAAd,WAAW,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACP,sBAAA,CAAA,SADO,EACP,QADO,EACP,KAD0B,CAAnB,CAAA;;AACC,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EACN,sBAAA,CAAA,SADM,EACN,UADM,EACN,KADuB,CAAjB,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAEP,sBAAA,CAAA,SAFO,EAEP,UAFO,EAEP,KAFwB,CAAjB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC3B,C;ACrCA;;;;;;IAoBa,c;;;;6BALZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACC,cAAU,CAAA,IAAV,GAAU,MAAA,CAAA,gBAAA,CAAmB;AAAA,EAAA,OAAsB,EAAE,SAAA,sBAAA,CAAyB,CAAzB,EAAyB;AAAA,WAAA,KAAuB,CAAA,IAAA,cAAvB,GAAA;AAA8C,GAA/F;AAA+F,EAAA,OAAA,EAAA,CAAA,CAAA,YAAA,EAChH,cADgH,EAC7G,eAD6G,CAAA;AAA/F,CAAnB,CAAV;;CACwD,YAAE;AAAA,GAAA,OAAA,SAAA,KAAyB,WAAzB,IAAyB,SAAzB,KAAgD,MAAA,CAAA,kBAAA,CAAuB,cAAvB,EAChG;AAAA,IAAA,YAAc,EAAA,wBAAc;AAAE,aAAA,CAAA,iBAAA,EAAgB,sBAAhB,EACzC,uBADyC,EACzC,qBADyC,EACzC,sBADyC,CAAA;AACzC,KADW;AACX,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,YAAA,EAAA,cAAA,EAAA,eAAA,CAAA;AAAA,KADW;AACX,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,iBAAA,EAAA,sBAAA,EAAA,uBAAA,EAAA,qBAAA,EAAA,sBAAA,CAAA;AAAA;AADW,GADgG,CAAhD;AAE3D,C;;;;;;;;;;;;;AACI,C;ACpBL;;;;;;IAYa,O;;;ACZb;;;;;ACAA;;;;;AAIA,SAAA,OAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,uBAAA,IAAA,wBAAA,EAAA,sBAAA,IAAA,uBAAA,EAAA,eAAA,IAAA,gBAAA,EAAA,qBAAA,IAAA,sBAAA,EAAA,sBAAA,IAAA,uBAAA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NzSliderService {\n  isDragging = false;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NgStyleInterface } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzTooltipDirective } from 'ng-zorro-antd/tooltip';\nimport { NzSliderService } from './slider.service';\nimport { NzSliderShowTooltip } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-slider-handle',\n  exportAs: 'nzSliderHandle',\n  preserveWhitespaces: false,\n  template: `\n    <div\n      #handle\n      class=\"ant-slider-handle\"\n      tabindex=\"0\"\n      nz-tooltip\n      [ngStyle]=\"style\"\n      [nzTooltipTitle]=\"tooltipFormatter === null || tooltipVisible === 'never' ? null : tooltipTitle\"\n      [nzTooltipTrigger]=\"null\"\n      [nzTooltipPlacement]=\"tooltipPlacement\"\n    ></div>\n  `,\n  host: {\n    '(mouseenter)': 'enterHandle()',\n    '(mouseleave)': 'leaveHandle()'\n  }\n})\nexport class NzSliderHandleComponent implements OnChanges {\n  static ngAcceptInputType_active: BooleanInput;\n\n  @ViewChild('handle', { static: false }) handleEl?: ElementRef;\n  @ViewChild(NzTooltipDirective, { static: false }) tooltip?: NzTooltipDirective;\n\n  @Input() vertical?: boolean;\n  @Input() reverse?: boolean;\n  @Input() offset?: number;\n  @Input() value?: number;\n  @Input() tooltipVisible: NzSliderShowTooltip = 'default';\n  @Input() tooltipPlacement?: string;\n  @Input() tooltipFormatter?: null | ((value: number) => string);\n  @Input() @InputBoolean() active = false;\n\n  tooltipTitle?: string;\n  style: NgStyleInterface = {};\n\n  constructor(private sliderService: NzSliderService, private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { offset, value, active, tooltipVisible, reverse } = changes;\n\n    if (offset || reverse) {\n      this.updateStyle();\n    }\n\n    if (value) {\n      this.updateTooltipTitle();\n      this.updateTooltipPosition();\n    }\n\n    if (active) {\n      if (active.currentValue) {\n        this.toggleTooltip(true);\n      } else {\n        this.toggleTooltip(false);\n      }\n    }\n\n    if (tooltipVisible?.currentValue === 'always') {\n      Promise.resolve().then(() => this.toggleTooltip(true, true));\n    }\n  }\n\n  enterHandle = () => {\n    if (!this.sliderService.isDragging) {\n      this.toggleTooltip(true);\n      this.updateTooltipPosition();\n      this.cdr.detectChanges();\n    }\n  };\n\n  leaveHandle = () => {\n    if (!this.sliderService.isDragging) {\n      this.toggleTooltip(false);\n      this.cdr.detectChanges();\n    }\n  };\n\n  focus(): void {\n    this.handleEl?.nativeElement.focus();\n  }\n\n  private toggleTooltip(show: boolean, force: boolean = false): void {\n    if (!force && (this.tooltipVisible !== 'default' || !this.tooltip)) {\n      return;\n    }\n\n    if (show) {\n      this.tooltip?.show();\n    } else {\n      this.tooltip?.hide();\n    }\n  }\n\n  private updateTooltipTitle(): void {\n    this.tooltipTitle = this.tooltipFormatter ? this.tooltipFormatter(this.value!) : `${this.value}`;\n  }\n\n  private updateTooltipPosition(): void {\n    if (this.tooltip) {\n      Promise.resolve().then(() => this.tooltip?.updatePosition());\n    }\n  }\n\n  private updateStyle(): void {\n    const vertical = this.vertical;\n    const reverse = this.reverse;\n    const offset = this.offset;\n\n    const positionStyle = vertical\n      ? {\n          [reverse ? 'top' : 'bottom']: `${offset}%`,\n          [reverse ? 'bottom' : 'top']: 'auto',\n          transform: reverse ? null : `translateY(+50%)`\n        }\n      : {\n          [reverse ? 'right' : 'left']: `${offset}%`,\n          [reverse ? 'left' : 'right']: 'auto',\n          transform: `translateX(${reverse ? '+' : '-'}50%)`\n        };\n\n    this.style = positionStyle;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BooleanInput, NumberInput } from 'ng-zorro-antd/core/types';\nimport {\n  arraysEqual,\n  ensureNumberInRange,\n  getElementOffset,\n  getPercent,\n  getPrecision,\n  InputBoolean,\n  InputNumber,\n  MouseTouchObserverConfig,\n  silentEvent\n} from 'ng-zorro-antd/core/util';\nimport { fromEvent, merge, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map, pluck, takeUntil, tap } from 'rxjs/operators';\n\nimport { NzSliderHandleComponent } from './handle.component';\nimport { NzSliderService } from './slider.service';\n\nimport { NzExtendedMark, NzMarks, NzSliderHandler, NzSliderShowTooltip, NzSliderValue } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-slider',\n  exportAs: 'nzSlider',\n  preserveWhitespaces: false,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzSliderComponent),\n      multi: true\n    },\n    NzSliderService\n  ],\n  host: {\n    '(keydown)': 'onKeyDown($event)'\n  },\n  template: `\n    <div\n      #slider\n      class=\"ant-slider\"\n      [class.ant-slider-disabled]=\"nzDisabled\"\n      [class.ant-slider-vertical]=\"nzVertical\"\n      [class.ant-slider-with-marks]=\"marksArray\"\n    >\n      <div class=\"ant-slider-rail\"></div>\n      <nz-slider-track\n        [vertical]=\"nzVertical\"\n        [included]=\"nzIncluded\"\n        [offset]=\"track.offset!\"\n        [length]=\"track.length!\"\n        [reverse]=\"nzReverse\"\n      ></nz-slider-track>\n      <nz-slider-step\n        *ngIf=\"marksArray\"\n        [vertical]=\"nzVertical\"\n        [lowerBound]=\"$any(bounds.lower)\"\n        [upperBound]=\"$any(bounds.upper)\"\n        [marksArray]=\"marksArray\"\n        [included]=\"nzIncluded\"\n      ></nz-slider-step>\n      <nz-slider-handle\n        *ngFor=\"let handle of handles\"\n        [vertical]=\"nzVertical\"\n        [reverse]=\"nzReverse\"\n        [offset]=\"handle.offset!\"\n        [value]=\"handle.value!\"\n        [active]=\"handle.active\"\n        [tooltipFormatter]=\"nzTipFormatter\"\n        [tooltipVisible]=\"nzTooltipVisible\"\n        [tooltipPlacement]=\"nzTooltipPlacement\"\n      ></nz-slider-handle>\n      <nz-slider-marks\n        *ngIf=\"marksArray\"\n        [vertical]=\"nzVertical\"\n        [min]=\"nzMin\"\n        [max]=\"nzMax\"\n        [lowerBound]=\"$any(bounds.lower)\"\n        [upperBound]=\"$any(bounds.upper)\"\n        [marksArray]=\"marksArray\"\n        [included]=\"nzIncluded\"\n      ></nz-slider-marks>\n    </div>\n  `\n})\nexport class NzSliderComponent implements ControlValueAccessor, OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzDots: BooleanInput;\n  static ngAcceptInputType_nzIncluded: BooleanInput;\n  static ngAcceptInputType_nzRange: BooleanInput;\n  static ngAcceptInputType_nzVertical: BooleanInput;\n  static ngAcceptInputType_nzMax: NumberInput;\n  static ngAcceptInputType_nzMin: NumberInput;\n  static ngAcceptInputType_nzStep: NumberInput;\n  static ngAcceptInputType_nzReverse: BooleanInput;\n\n  @ViewChild('slider', { static: true }) slider!: ElementRef<HTMLDivElement>;\n  @ViewChildren(NzSliderHandleComponent) handlerComponents!: QueryList<NzSliderHandleComponent>;\n\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzDots: boolean = false;\n  @Input() @InputBoolean() nzIncluded: boolean = true;\n  @Input() @InputBoolean() nzRange: boolean = false;\n  @Input() @InputBoolean() nzVertical: boolean = false;\n  @Input() @InputBoolean() nzReverse: boolean = false;\n  @Input() nzDefaultValue?: NzSliderValue;\n  @Input() nzMarks: NzMarks | null = null;\n  @Input() @InputNumber() nzMax = 100;\n  @Input() @InputNumber() nzMin = 0;\n  @Input() @InputNumber() nzStep = 1;\n  @Input() nzTooltipVisible: NzSliderShowTooltip = 'default';\n  @Input() nzTooltipPlacement: string = 'top';\n  @Input() nzTipFormatter?: null | ((value: number) => string);\n\n  @Output() readonly nzOnAfterChange = new EventEmitter<NzSliderValue>();\n\n  value: NzSliderValue | null = null;\n  cacheSliderStart: number | null = null;\n  cacheSliderLength: number | null = null;\n  activeValueIndex: number | undefined = undefined; // Current activated handle's index ONLY for range=true\n  track: { offset: null | number; length: null | number } = { offset: null, length: null }; // Track's offset and length\n  handles: NzSliderHandler[] = []; // Handles' offset\n  marksArray: NzExtendedMark[] | null = null; // \"steps\" in array type with more data & FILTER out the invalid mark\n  bounds: { lower: NzSliderValue | null; upper: NzSliderValue | null } = { lower: null, upper: null }; // now for nz-slider-step\n\n  private dragStart$?: Observable<number>;\n  private dragMove$?: Observable<number>;\n  private dragEnd$?: Observable<Event>;\n  private dragStart_?: Subscription | null;\n  private dragMove_?: Subscription | null;\n  private dragEnd_?: Subscription | null;\n\n  constructor(private sliderService: NzSliderService, private cdr: ChangeDetectorRef, private platform: Platform) {}\n\n  ngOnInit(): void {\n    this.handles = generateHandlers(this.nzRange ? 2 : 1);\n    this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n    this.bindDraggingHandlers();\n    this.toggleDragDisabled(this.nzDisabled);\n\n    if (this.getValue() === null) {\n      this.setValue(this.formatValue(null));\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisabled, nzMarks, nzRange } = changes;\n\n    if (nzDisabled && !nzDisabled.firstChange) {\n      this.toggleDragDisabled(nzDisabled.currentValue);\n    } else if (nzMarks && !nzMarks.firstChange) {\n      this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n    } else if (nzRange && !nzRange.firstChange) {\n      this.setValue(this.formatValue(null));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeDrag();\n  }\n\n  writeValue(val: NzSliderValue | null): void {\n    this.setValue(val, true);\n  }\n\n  onValueChange(_value: NzSliderValue): void {}\n\n  onTouched(): void {}\n\n  registerOnChange(fn: (value: NzSliderValue) => void): void {\n    this.onValueChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.toggleDragDisabled(isDisabled);\n  }\n\n  /**\n   * Event handler is only triggered when a slider handler is focused.\n   */\n  onKeyDown(e: KeyboardEvent): void {\n    const code = e.keyCode;\n    const isIncrease = code === RIGHT_ARROW || code === UP_ARROW;\n    const isDecrease = code === LEFT_ARROW || code === DOWN_ARROW;\n\n    if (!(isIncrease || isDecrease)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const step = (isDecrease ? -this.nzStep : this.nzStep) * (this.nzReverse ? -1 : 1);\n    const newVal = this.nzRange ? (this.value as number[])[this.activeValueIndex!] + step : (this.value as number) + step;\n    this.setActiveValue(ensureNumberInRange(newVal, this.nzMin, this.nzMax));\n  }\n\n  private setValue(value: NzSliderValue | null, isWriteValue: boolean = false): void {\n    if (isWriteValue) {\n      this.value = this.formatValue(value);\n      this.updateTrackAndHandles();\n    } else if (!valuesEqual(this.value!, value!)) {\n      this.value = value;\n      this.updateTrackAndHandles();\n      this.onValueChange(this.getValue(true));\n    }\n  }\n\n  private getValue(cloneAndSort: boolean = false): NzSliderValue {\n    if (cloneAndSort && this.value && isValueRange(this.value)) {\n      return [...this.value].sort((a, b) => a - b);\n    }\n    return this.value!;\n  }\n\n  /**\n   * Clone & sort current value and convert them to offsets, then return the new one.\n   */\n  private getValueToOffset(value?: NzSliderValue): NzSliderValue {\n    let normalizedValue = value;\n\n    if (typeof normalizedValue === 'undefined') {\n      normalizedValue = this.getValue(true);\n    }\n\n    return isValueRange(normalizedValue) ? normalizedValue.map(val => this.valueToOffset(val)) : this.valueToOffset(normalizedValue);\n  }\n\n  /**\n   * Find the closest value to be activated.\n   */\n  private setActiveValueIndex(pointerValue: number): void {\n    const value = this.getValue();\n    if (isValueRange(value)) {\n      let minimal: number | null = null;\n      let gap: number;\n      let activeIndex = -1;\n      value.forEach((val, index) => {\n        gap = Math.abs(pointerValue - val);\n        if (minimal === null || gap < minimal!) {\n          minimal = gap;\n          activeIndex = index;\n        }\n      });\n      this.activeValueIndex = activeIndex;\n      this.handlerComponents.toArray()[activeIndex].focus();\n    } else {\n      this.handlerComponents.toArray()[0].focus();\n    }\n  }\n\n  private setActiveValue(pointerValue: number): void {\n    if (isValueRange(this.value!)) {\n      const newValue = [...(this.value as number[])];\n      newValue[this.activeValueIndex!] = pointerValue;\n      this.setValue(newValue);\n    } else {\n      this.setValue(pointerValue);\n    }\n  }\n\n  /**\n   * Update track and handles' position and length.\n   */\n  private updateTrackAndHandles(): void {\n    const value = this.getValue();\n    const offset = this.getValueToOffset(value);\n    const valueSorted = this.getValue(true);\n    const offsetSorted = this.getValueToOffset(valueSorted);\n    const boundParts = isValueRange(valueSorted) ? valueSorted : [0, valueSorted];\n    const trackParts = isValueRange(offsetSorted) ? [offsetSorted[0], offsetSorted[1] - offsetSorted[0]] : [0, offsetSorted];\n\n    this.handles.forEach((handle, index) => {\n      handle.offset = isValueRange(offset) ? offset[index] : offset;\n      handle.value = isValueRange(value) ? value[index] : value || 0;\n    });\n\n    [this.bounds.lower, this.bounds.upper] = boundParts;\n    [this.track.offset, this.track.length] = trackParts;\n\n    this.cdr.markForCheck();\n  }\n\n  private onDragStart(value: number): void {\n    this.toggleDragMoving(true);\n    this.cacheSliderProperty();\n    this.setActiveValueIndex(this.getLogicalValue(value));\n    this.setActiveValue(this.getLogicalValue(value));\n    this.showHandleTooltip(this.nzRange ? this.activeValueIndex : 0);\n  }\n\n  private onDragMove(value: number): void {\n    this.setActiveValue(this.getLogicalValue(value));\n    this.cdr.markForCheck();\n  }\n\n  private getLogicalValue(value: number): number {\n    return this.nzReverse ? this.nzMax - value + this.nzMin : value;\n  }\n\n  private onDragEnd(): void {\n    this.nzOnAfterChange.emit(this.getValue(true));\n    this.toggleDragMoving(false);\n    this.cacheSliderProperty(true);\n    this.hideAllHandleTooltip();\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Create user interactions handles.\n   */\n  private bindDraggingHandlers(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n\n    const sliderDOM = this.slider.nativeElement;\n    const orientField = this.nzVertical ? 'pageY' : 'pageX';\n    const mouse: MouseTouchObserverConfig = {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup',\n      pluckKey: [orientField]\n    };\n    const touch: MouseTouchObserverConfig = {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      pluckKey: ['touches', '0', orientField],\n      filter: (e: MouseEvent | TouchEvent) => e instanceof TouchEvent\n    };\n\n    [mouse, touch].forEach(source => {\n      const { start, move, end, pluckKey, filter: filterFunc = () => true } = source;\n\n      source.startPlucked$ = fromEvent(sliderDOM, start).pipe(\n        filter(filterFunc),\n        tap(silentEvent),\n        pluck<Event, number>(...pluckKey),\n        map((position: number) => this.findClosestValue(position))\n      );\n      source.end$ = fromEvent(document, end);\n      source.moveResolved$ = fromEvent(document, move).pipe(\n        filter(filterFunc),\n        tap(silentEvent),\n        pluck<Event, number>(...pluckKey),\n        distinctUntilChanged(),\n        map((position: number) => this.findClosestValue(position)),\n        distinctUntilChanged(),\n        takeUntil(source.end$)\n      );\n    });\n\n    this.dragStart$ = merge(mouse.startPlucked$!, touch.startPlucked$!);\n    this.dragMove$ = merge(mouse.moveResolved$!, touch.moveResolved$!);\n    this.dragEnd$ = merge(mouse.end$!, touch.end$!);\n  }\n\n  private subscribeDrag(periods: string[] = ['start', 'move', 'end']): void {\n    if (periods.indexOf('start') !== -1 && this.dragStart$ && !this.dragStart_) {\n      this.dragStart_ = this.dragStart$.subscribe(this.onDragStart.bind(this));\n    }\n\n    if (periods.indexOf('move') !== -1 && this.dragMove$ && !this.dragMove_) {\n      this.dragMove_ = this.dragMove$.subscribe(this.onDragMove.bind(this));\n    }\n\n    if (periods.indexOf('end') !== -1 && this.dragEnd$ && !this.dragEnd_) {\n      this.dragEnd_ = this.dragEnd$.subscribe(this.onDragEnd.bind(this));\n    }\n  }\n\n  private unsubscribeDrag(periods: string[] = ['start', 'move', 'end']): void {\n    if (periods.indexOf('start') !== -1 && this.dragStart_) {\n      this.dragStart_.unsubscribe();\n      this.dragStart_ = null;\n    }\n\n    if (periods.indexOf('move') !== -1 && this.dragMove_) {\n      this.dragMove_.unsubscribe();\n      this.dragMove_ = null;\n    }\n\n    if (periods.indexOf('end') !== -1 && this.dragEnd_) {\n      this.dragEnd_.unsubscribe();\n      this.dragEnd_ = null;\n    }\n  }\n\n  private toggleDragMoving(movable: boolean): void {\n    const periods = ['move', 'end'];\n    if (movable) {\n      this.sliderService.isDragging = true;\n      this.subscribeDrag(periods);\n    } else {\n      this.sliderService.isDragging = false;\n      this.unsubscribeDrag(periods);\n    }\n  }\n\n  private toggleDragDisabled(disabled: boolean): void {\n    if (disabled) {\n      this.unsubscribeDrag();\n    } else {\n      this.subscribeDrag(['start']);\n    }\n  }\n\n  private findClosestValue(position: number): number {\n    const sliderStart = this.getSliderStartPosition();\n    const sliderLength = this.getSliderLength();\n    const ratio = ensureNumberInRange((position - sliderStart) / sliderLength, 0, 1);\n    const val = (this.nzMax - this.nzMin) * (this.nzVertical ? 1 - ratio : ratio) + this.nzMin;\n    const points =\n      this.nzMarks === null\n        ? []\n        : Object.keys(this.nzMarks)\n            .map(parseFloat)\n            .sort((a, b) => a - b);\n\n    if (this.nzStep !== 0 && !this.nzDots) {\n      const closestOne = Math.round(val / this.nzStep) * this.nzStep;\n      points.push(closestOne);\n    }\n\n    const gaps = points.map(point => Math.abs(val - point));\n    const closest = points[gaps.indexOf(Math.min(...gaps))];\n\n    // return parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n    return this.nzStep === 0 ? closest : parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n  }\n\n  private valueToOffset(value: number): number {\n    return getPercent(this.nzMin, this.nzMax, value);\n  }\n\n  private getSliderStartPosition(): number {\n    if (this.cacheSliderStart !== null) {\n      return this.cacheSliderStart;\n    }\n    const offset = getElementOffset(this.slider.nativeElement);\n    return this.nzVertical ? offset.top : offset.left;\n  }\n\n  private getSliderLength(): number {\n    if (this.cacheSliderLength !== null) {\n      return this.cacheSliderLength;\n    }\n    const sliderDOM = this.slider.nativeElement;\n    return this.nzVertical ? sliderDOM.clientHeight : sliderDOM.clientWidth;\n  }\n\n  /**\n   * Cache DOM layout/reflow operations for performance (may not necessary?)\n   */\n  private cacheSliderProperty(remove: boolean = false): void {\n    this.cacheSliderStart = remove ? null : this.getSliderStartPosition();\n    this.cacheSliderLength = remove ? null : this.getSliderLength();\n  }\n\n  private formatValue(value: NzSliderValue | null): NzSliderValue {\n    if (!value) {\n      return this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n    } else if (assertValueValid(value, this.nzRange)) {\n      return isValueRange(value)\n        ? value.map(val => ensureNumberInRange(val, this.nzMin, this.nzMax))\n        : ensureNumberInRange(value, this.nzMin, this.nzMax);\n    } else {\n      return this.nzDefaultValue ? this.nzDefaultValue : this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n    }\n  }\n\n  /**\n   * Show one handle's tooltip and hide others'.\n   */\n  private showHandleTooltip(handleIndex: number = 0): void {\n    this.handles.forEach((handle, index) => {\n      handle.active = index === handleIndex;\n    });\n  }\n\n  private hideAllHandleTooltip(): void {\n    this.handles.forEach(handle => (handle.active = false));\n  }\n\n  private generateMarkItems(marks: NzMarks): NzExtendedMark[] | null {\n    const marksArray: NzExtendedMark[] = [];\n    for (const key in marks) {\n      const mark = marks[key];\n      const val = typeof key === 'number' ? key : parseFloat(key);\n      if (val >= this.nzMin && val <= this.nzMax) {\n        marksArray.push({ value: val, offset: this.valueToOffset(val), config: mark });\n      }\n    }\n    return marksArray.length ? marksArray : null;\n  }\n}\n\nfunction getValueTypeNotMatchError(): Error {\n  return new Error(\n    `The \"nzRange\" can't match the \"ngModel\"'s type, please check these properties: \"nzRange\", \"ngModel\", \"nzDefaultValue\".`\n  );\n}\n\nfunction isValueRange(value: NzSliderValue): value is number[] {\n  if (value instanceof Array) {\n    return value.length === 2;\n  } else {\n    return false;\n  }\n}\n\nfunction generateHandlers(amount: number): NzSliderHandler[] {\n  return Array(amount)\n    .fill(0)\n    .map(() => ({ offset: null, value: null, active: false }));\n}\n\n/**\n * Check if value is valid and throw error if value-type/range not match.\n */\nfunction assertValueValid(value: NzSliderValue, isRange?: boolean): boolean {\n  if ((!isValueRange(value) && isNaN(value)) || (isValueRange(value) && value.some(v => isNaN(v)))) {\n    return false;\n  }\n  return assertValueTypeMatch(value, isRange);\n}\n\n/**\n * Assert that if `this.nzRange` is `true`, value is also a range, vice versa.\n */\nfunction assertValueTypeMatch(value: NzSliderValue, isRange: boolean = false): boolean {\n  if (isValueRange(value) !== isRange) {\n    throw getValueTypeNotMatchError();\n  }\n  return true;\n}\n\nfunction valuesEqual(valA: NzSliderValue, valB: NzSliderValue): boolean {\n  if (typeof valA !== typeof valB) {\n    return false;\n  }\n  return isValueRange(valA) && isValueRange(valB) ? arraysEqual<number>(valA, valB) : valA === valB;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { BooleanInput, NgStyleInterface } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzDisplayedMark, NzExtendedMark, NzMark, NzMarkObj } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-slider-marks',\n  exportAs: 'nzSliderMarks',\n  template: `\n    <div class=\"ant-slider-mark\">\n      <span\n        class=\"ant-slider-mark-text\"\n        *ngFor=\"let attr of marks; trackBy: trackById\"\n        [class.ant-slider-mark-active]=\"attr.active\"\n        [ngStyle]=\"attr.style!\"\n        [innerHTML]=\"attr.label\"\n      >\n      </span>\n    </div>\n  `\n})\nexport class NzSliderMarksComponent implements OnChanges {\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_included: BooleanInput;\n\n  @Input() lowerBound: number | null = null;\n  @Input() upperBound: number | null = null;\n  @Input() marksArray: NzExtendedMark[] = [];\n  @Input() min!: number;\n  @Input() max!: number;\n  @Input() @InputBoolean() vertical = false;\n  @Input() @InputBoolean() included = false;\n\n  marks: NzDisplayedMark[] = [];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { marksArray, lowerBound, upperBound } = changes;\n\n    if (marksArray) {\n      this.buildMarks();\n    }\n\n    if (marksArray || lowerBound || upperBound) {\n      this.togglePointActive();\n    }\n  }\n\n  trackById(_index: number, mark: NzDisplayedMark): number {\n    return mark.value;\n  }\n\n  private buildMarks(): void {\n    const range = this.max - this.min;\n\n    this.marks = this.marksArray.map(mark => {\n      const { value, offset, config } = mark;\n      const style = this.getMarkStyles(value, range, config);\n      const label = isConfigObject(config) ? config.label : config;\n\n      return {\n        label,\n        offset,\n        style,\n        value,\n        config,\n        active: false\n      };\n    });\n  }\n\n  private getMarkStyles(value: number, range: number, config: NzMark): NgStyleInterface {\n    let style;\n\n    if (this.vertical) {\n      style = {\n        marginBottom: '-50%',\n        bottom: `${((value - this.min) / range) * 100}%`\n      };\n    } else {\n      style = {\n        transform: `translate3d(-50%, 0, 0)`,\n        left: `${((value - this.min) / range) * 100}%`\n      };\n    }\n\n    if (isConfigObject(config) && config.style) {\n      style = { ...style, ...config.style };\n    }\n\n    return style;\n  }\n\n  private togglePointActive(): void {\n    if (this.marks && this.lowerBound !== null && this.upperBound !== null) {\n      this.marks.forEach(mark => {\n        const value = mark.value;\n        const isActive =\n          (!this.included && value === this.upperBound) || (this.included && value <= this.upperBound! && value >= this.lowerBound!);\n\n        mark.active = isActive;\n      });\n    }\n  }\n}\n\nfunction isConfigObject(config: NzMark): config is NzMarkObj {\n  return typeof config !== 'string';\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzDisplayedStep, NzExtendedMark } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-slider-step',\n  exportAs: 'nzSliderStep',\n  preserveWhitespaces: false,\n  template: `\n    <div class=\"ant-slider-step\">\n      <span\n        class=\"ant-slider-dot\"\n        *ngFor=\"let mark of steps; trackBy: trackById\"\n        [class.ant-slider-dot-active]=\"mark.active\"\n        [ngStyle]=\"mark.style!\"\n      >\n      </span>\n    </div>\n  `\n})\nexport class NzSliderStepComponent implements OnChanges {\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_included: BooleanInput;\n\n  @Input() lowerBound: number | null = null;\n  @Input() upperBound: number | null = null;\n  @Input() marksArray: NzExtendedMark[] = [];\n  @Input() @InputBoolean() vertical = false;\n  @Input() @InputBoolean() included = false;\n\n  steps: NzDisplayedStep[] = [];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.marksArray) {\n      this.buildSteps();\n    }\n    if (changes.marksArray || changes.lowerBound || changes.upperBound) {\n      this.togglePointActive();\n    }\n  }\n\n  trackById(_index: number, step: NzDisplayedStep): number {\n    return step.value;\n  }\n\n  private buildSteps(): void {\n    const orient = this.vertical ? 'bottom' : 'left';\n\n    this.steps = this.marksArray.map(mark => {\n      const { value, offset, config } = mark;\n\n      return {\n        value,\n        offset,\n        config,\n        active: false,\n        style: {\n          [orient]: `${offset}%`\n        }\n      };\n    });\n  }\n\n  private togglePointActive(): void {\n    if (this.steps && this.lowerBound !== null && this.upperBound !== null) {\n      this.steps.forEach(step => {\n        const value = step.value;\n        const isActive =\n          (!this.included && value === this.upperBound) || (this.included && value <= this.upperBound! && value >= this.lowerBound!);\n        step.active = isActive;\n      });\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { BooleanInput, NumberInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\n\nexport interface NzSliderTrackStyle {\n  bottom?: string | null;\n  height?: string | null;\n  left?: string | null;\n  width?: string | null;\n  visibility?: string;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-slider-track',\n  exportAs: 'nzSliderTrack',\n  preserveWhitespaces: false,\n  template: ` <div class=\"ant-slider-track\" [ngStyle]=\"style\"></div> `\n})\nexport class NzSliderTrackComponent implements OnChanges {\n  static ngAcceptInputType_offset: NumberInput;\n  static ngAcceptInputType_length: NumberInput;\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_included: BooleanInput;\n  static ngAcceptInputType_reverse: BooleanInput;\n\n  @Input() @InputNumber() offset: number = 0;\n  @Input() @InputBoolean() reverse: boolean = false;\n  @Input() @InputNumber() length: number = 0;\n  @Input() @InputBoolean() vertical = false;\n  @Input() @InputBoolean() included = false;\n\n  style: NzSliderTrackStyle = {};\n\n  ngOnChanges(): void {\n    const vertical = this.vertical;\n    const reverse = this.reverse;\n    const visibility = this.included ? 'visible' : 'hidden';\n    const offset = this.offset;\n    const length = this.length;\n\n    const positonStyle: NzSliderTrackStyle = vertical\n      ? {\n          [reverse ? 'top' : 'bottom']: `${offset}%`,\n          [reverse ? 'bottom' : 'top']: 'auto',\n          height: `${length}%`,\n          visibility\n        }\n      : {\n          [reverse ? 'right' : 'left']: `${offset}%`,\n          [reverse ? 'left' : 'right']: 'auto',\n          width: `${length}%`,\n          visibility\n        };\n\n    this.style = positonStyle;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { NzSliderHandleComponent } from './handle.component';\nimport { NzSliderMarksComponent } from './marks.component';\nimport { NzSliderComponent } from './slider.component';\nimport { NzSliderStepComponent } from './step.component';\nimport { NzSliderTrackComponent } from './track.component';\n\n@NgModule({\n  exports: [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent],\n  declarations: [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent],\n  imports: [CommonModule, PlatformModule, NzToolTipModule]\n})\nexport class NzSliderModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport type NzMark = string | NzMarkObj;\n\nexport interface NzMarkObj {\n  style?: object;\n  label: string;\n}\n\nexport class NzMarks {\n  [key: string]: NzMark;\n}\n\n/**\n * Processed steps that would be passed to sub components.\n */\nexport interface NzExtendedMark {\n  value: number;\n  offset: number;\n  config: NzMark;\n}\n\n/**\n * Marks that would be rendered.\n */\nexport interface NzDisplayedMark extends NzExtendedMark {\n  active: boolean;\n  label: string;\n  style?: object;\n}\n\n/**\n * Steps that would be rendered.\n */\nexport interface NzDisplayedStep extends NzExtendedMark {\n  active: boolean;\n  style?: object;\n}\n\nexport type NzSliderShowTooltip = 'always' | 'never' | 'default';\n\nexport type NzSliderValue = number[] | number;\n\nexport interface NzSliderHandler {\n  offset: number | null;\n  value: number | null;\n  active: boolean;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport { NzSliderComponent } from './slider.component';\nexport { NzSliderService as ɵNzSliderService } from './slider.service';\nexport { NzSliderModule } from './slider.module';\nexport { NzSliderHandleComponent as ɵNzSliderHandleComponent } from './handle.component';\nexport { NzSliderMarksComponent as ɵNzSliderMarksComponent } from './marks.component';\nexport { NzSliderStepComponent as ɵNzSliderStepComponent } from './step.component';\nexport { NzSliderTrackComponent as ɵNzSliderTrackComponent, NzSliderTrackStyle } from './track.component';\nexport * from './typings';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}