{"ast":null,"code":"import _slicedToArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { isDevMode, SecurityContext, Injectable, RendererFactory2, Optional, Inject, Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\nimport { generate } from '@ant-design/colors';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subject, of, Observable } from 'rxjs';\nimport { map, tap, finalize, catchError, share, filter, take } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar ANT_ICON_ANGULAR_CONSOLE_PREFIX = '[@ant-design/icons-angular]:';\n\nfunction error(message) {\n  console.error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \" \").concat(message, \".\"));\n}\n\nfunction warn(message) {\n  if (isDevMode()) {\n    console.warn(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \" \").concat(message, \".\"));\n  }\n}\n\nfunction getSecondaryColor(primaryColor) {\n  return generate(primaryColor)[0];\n}\n\nfunction withSuffix(name, theme) {\n  switch (theme) {\n    case 'fill':\n      return \"\".concat(name, \"-fill\");\n\n    case 'outline':\n      return \"\".concat(name, \"-o\");\n\n    case 'twotone':\n      return \"\".concat(name, \"-twotone\");\n\n    case undefined:\n      return name;\n\n    default:\n      throw new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"Theme \\\"\").concat(theme, \"\\\" is not a recognized theme!\"));\n  }\n}\n\nfunction withSuffixAndColor(name, theme, pri, sec) {\n  return \"\".concat(withSuffix(name, theme), \"-\").concat(pri, \"-\").concat(sec);\n}\n\nfunction mapAbbrToTheme(abbr) {\n  return abbr === 'o' ? 'outline' : abbr;\n}\n\nfunction alreadyHasAThemeSuffix(name) {\n  return name.endsWith('-fill') || name.endsWith('-o') || name.endsWith('-twotone');\n}\n\nfunction isIconDefinition(target) {\n  return typeof target === 'object' && typeof target.name === 'string' && (typeof target.theme === 'string' || target.theme === undefined) && typeof target.icon === 'string';\n}\n/**\n * Get an `IconDefinition` object from abbreviation type, like `account-book-fill`.\n * @param str\n */\n\n\nfunction getIconDefinitionFromAbbr(str) {\n  var arr = str.split('-');\n  var theme = mapAbbrToTheme(arr.splice(arr.length - 1, 1)[0]);\n  var name = arr.join('-');\n  return {\n    name: name,\n    theme: theme,\n    icon: ''\n  };\n}\n\nfunction cloneSVG(svg) {\n  return svg.cloneNode(true);\n}\n/**\n * Parse inline SVG string and replace colors with placeholders. For twotone icons only.\n */\n\n\nfunction replaceFillColor(raw) {\n  return raw.replace(/['\"]#333['\"]/g, '\"primaryColor\"').replace(/['\"]#E6E6E6['\"]/g, '\"secondaryColor\"').replace(/['\"]#D9D9D9['\"]/g, '\"secondaryColor\"').replace(/['\"]#D8D8D8['\"]/g, '\"secondaryColor\"');\n}\n/**\n * Split a name with namespace in it into a tuple like [ name, namespace ].\n */\n\n\nfunction getNameAndNamespace(type) {\n  var split = type.split(':');\n\n  switch (split.length) {\n    case 1:\n      return [type, ''];\n\n    case 2:\n      return [split[1], split[0]];\n\n    default:\n      throw new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"The icon type \").concat(type, \" is not valid!\"));\n  }\n}\n\nfunction hasNamespace(type) {\n  return getNameAndNamespace(type)[1] !== '';\n}\n\nfunction NameSpaceIsNotSpecifyError() {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"Type should have a namespace. Try \\\"namespace:\").concat(name, \"\\\".\"));\n}\n\nfunction IconNotFoundError(icon) {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"the icon \").concat(icon, \" does not exist or is not registered.\"));\n}\n\nfunction HttpModuleNotImport() {\n  error(\"you need to import \\\"HttpClientModule\\\" to use dynamic importing.\");\n  return null;\n}\n\nfunction UrlNotSafeError(url) {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"The url \\\"\").concat(url, \"\\\" is unsafe.\"));\n}\n\nfunction SVGTagNotFoundError() {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"<svg> tag not found.\"));\n}\n\nfunction DynamicLoadingTimeoutError() {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"Importing timeout error.\"));\n}\n\nvar JSONP_HANDLER_NAME = '__ant_icon_load';\n\nvar IconService = /*#__PURE__*/function () {\n  function IconService(_rendererFactory, _handler, // tslint:disable-next-line:no-any\n  _document, sanitizer) {\n    _classCallCheck(this, IconService);\n\n    this._rendererFactory = _rendererFactory;\n    this._handler = _handler;\n    this._document = _document;\n    this.sanitizer = sanitizer;\n    this.defaultTheme = 'outline';\n    /**\n     * All icon definitions would be registered here.\n     */\n\n    this._svgDefinitions = new Map();\n    /**\n     * Cache all rendered icons. Icons are identified by name, theme,\n     * and for twotone icons, primary color and secondary color.\n     */\n\n    this._svgRenderedDefinitions = new Map();\n    this._inProgressFetches = new Map();\n    /**\n     * Url prefix for fetching inline SVG by dynamic importing.\n     */\n\n    this._assetsUrlRoot = '';\n    this._twoToneColorPalette = {\n      primaryColor: '#333333',\n      secondaryColor: '#E6E6E6'\n    };\n    /** A flag indicates whether jsonp loading is enabled. */\n\n    this._enableJsonpLoading = false;\n    this._jsonpIconLoad$ = new Subject();\n    this._renderer = this._rendererFactory.createRenderer(null, null);\n\n    if (this._handler) {\n      this._http = new HttpClient(this._handler);\n    }\n  }\n\n  _createClass(IconService, [{\n    key: \"useJsonpLoading\",\n\n    /**\n     * Call this method to switch to jsonp like loading.\n     */\n    value: function useJsonpLoading() {\n      var _this = this;\n\n      if (!this._enableJsonpLoading) {\n        this._enableJsonpLoading = true;\n\n        window[JSONP_HANDLER_NAME] = function (icon) {\n          _this._jsonpIconLoad$.next(icon);\n        };\n      } else {\n        warn('You are already using jsonp loading.');\n      }\n    }\n    /**\n     * Change the prefix of the inline svg resources, so they could be deployed elsewhere, like CDN.\n     * @param prefix\n     */\n\n  }, {\n    key: \"changeAssetsSource\",\n    value: function changeAssetsSource(prefix) {\n      this._assetsUrlRoot = prefix.endsWith('/') ? prefix : prefix + '/';\n    }\n    /**\n     * Add icons provided by ant design.\n     * @param icons\n     */\n\n  }, {\n    key: \"addIcon\",\n    value: function addIcon() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, icons = new Array(_len), _key = 0; _key < _len; _key++) {\n        icons[_key] = arguments[_key];\n      }\n\n      icons.forEach(function (icon) {\n        _this2._svgDefinitions.set(withSuffix(icon.name, icon.theme), icon);\n      });\n    }\n    /**\n     * Register an icon. Namespace is required.\n     * @param type\n     * @param literal\n     */\n\n  }, {\n    key: \"addIconLiteral\",\n    value: function addIconLiteral(type, literal) {\n      var _getNameAndNamespace = getNameAndNamespace(type),\n          _getNameAndNamespace2 = _slicedToArray(_getNameAndNamespace, 2),\n          _ = _getNameAndNamespace2[0],\n          namespace = _getNameAndNamespace2[1];\n\n      if (!namespace) {\n        throw NameSpaceIsNotSpecifyError();\n      }\n\n      this.addIcon({\n        name: type,\n        icon: literal\n      });\n    }\n    /**\n     * Remove all cache.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._svgDefinitions.clear();\n\n      this._svgRenderedDefinitions.clear();\n    }\n    /**\n     * Get a rendered `SVGElement`.\n     * @param icon\n     * @param twoToneColor\n     */\n\n  }, {\n    key: \"getRenderedContent\",\n    value: function getRenderedContent(icon, twoToneColor) {\n      var _this3 = this;\n\n      // If `icon` is a `IconDefinition`, go to the next step. If not, try to fetch it from cache.\n      var definitionOrNull = isIconDefinition(icon) ? icon : this._svgDefinitions.get(icon) || null; // If `icon` is a `IconDefinition` of successfully fetch, wrap it in an `Observable`.\n      // Otherwise try to fetch it from remote.\n\n      var $iconDefinition = definitionOrNull ? of(definitionOrNull) : this._loadIconDynamically(icon); // If finally get an `IconDefinition`, render and return it. Otherwise throw an error.\n\n      return $iconDefinition.pipe(map(function (i) {\n        if (!i) {\n          throw IconNotFoundError(icon);\n        }\n\n        return _this3._loadSVGFromCacheOrCreateNew(i, twoToneColor);\n      }));\n    }\n  }, {\n    key: \"getCachedIcons\",\n    value: function getCachedIcons() {\n      return this._svgDefinitions;\n    }\n    /**\n     * Get raw svg and assemble a `IconDefinition` object.\n     * @param type\n     */\n\n  }, {\n    key: \"_loadIconDynamically\",\n    value: function _loadIconDynamically(type) {\n      var _this4 = this;\n\n      // If developer doesn't provide HTTP module nor enable jsonp loading, just throw an error.\n      if (!this._http && !this._enableJsonpLoading) {\n        return of(HttpModuleNotImport());\n      } // If multi directive ask for the same icon at the same time,\n      // request should only be fired once.\n\n\n      var inProgress = this._inProgressFetches.get(type);\n\n      if (!inProgress) {\n        var _getNameAndNamespace3 = getNameAndNamespace(type),\n            _getNameAndNamespace4 = _slicedToArray(_getNameAndNamespace3, 2),\n            _name = _getNameAndNamespace4[0],\n            namespace = _getNameAndNamespace4[1]; // If the string has a namespace within, create a simple `IconDefinition`.\n\n\n        var icon = namespace ? {\n          name: type,\n          icon: ''\n        } : getIconDefinitionFromAbbr(_name);\n        var suffix = this._enableJsonpLoading ? '.js' : '.svg';\n        var url = (namespace ? \"\".concat(this._assetsUrlRoot, \"assets/\").concat(namespace, \"/\").concat(_name) : \"\".concat(this._assetsUrlRoot, \"assets/\").concat(icon.theme, \"/\").concat(icon.name)) + suffix;\n        var safeUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n\n        if (!safeUrl) {\n          throw UrlNotSafeError(url);\n        }\n\n        var source = !this._enableJsonpLoading ? this._http.get(safeUrl, {\n          responseType: 'text'\n        }).pipe(map(function (literal) {\n          return Object.assign(Object.assign({}, icon), {\n            icon: literal\n          });\n        })) : this._loadIconDynamicallyWithJsonp(icon, safeUrl);\n        inProgress = source.pipe(tap(function (definition) {\n          return _this4.addIcon(definition);\n        }), finalize(function () {\n          return _this4._inProgressFetches.delete(type);\n        }), catchError(function () {\n          return of(null);\n        }), share());\n\n        this._inProgressFetches.set(type, inProgress);\n      }\n\n      return inProgress;\n    }\n  }, {\n    key: \"_loadIconDynamicallyWithJsonp\",\n    value: function _loadIconDynamicallyWithJsonp(icon, url) {\n      var _this5 = this;\n\n      return new Observable(function (subscriber) {\n        var loader = _this5._document.createElement('script');\n\n        var timer = setTimeout(function () {\n          clean();\n          subscriber.error(DynamicLoadingTimeoutError());\n        }, 6000);\n        loader.src = url;\n\n        function clean() {\n          loader.parentNode.removeChild(loader);\n          clearTimeout(timer);\n        }\n\n        _this5._document.body.appendChild(loader);\n\n        _this5._jsonpIconLoad$.pipe(filter(function (i) {\n          return i.name === icon.name && i.theme === icon.theme;\n        }), take(1)).subscribe(function (i) {\n          subscriber.next(i);\n          clean();\n        });\n      });\n    }\n    /**\n     * Render a new `SVGElement` for a given `IconDefinition`, or make a copy from cache.\n     * @param icon\n     * @param twoToneColor\n     */\n\n  }, {\n    key: \"_loadSVGFromCacheOrCreateNew\",\n    value: function _loadSVGFromCacheOrCreateNew(icon, twoToneColor) {\n      var svg;\n      var pri = twoToneColor || this._twoToneColorPalette.primaryColor;\n\n      var sec = getSecondaryColor(pri) || this._twoToneColorPalette.secondaryColor;\n\n      var key = icon.theme === 'twotone' ? withSuffixAndColor(icon.name, icon.theme, pri, sec) : icon.theme === undefined ? icon.name : withSuffix(icon.name, icon.theme); // Try to make a copy from cache.\n\n      var cached = this._svgRenderedDefinitions.get(key);\n\n      if (cached) {\n        svg = cached.icon;\n      } else {\n        svg = this._setSVGAttribute(this._colorizeSVGIcon( // Icons provided by ant design should be refined to remove preset colors.\n        this._createSVGElementFromString(hasNamespace(icon.name) ? icon.icon : replaceFillColor(icon.icon)), icon.theme === 'twotone', pri, sec)); // Cache it.\n\n        this._svgRenderedDefinitions.set(key, Object.assign(Object.assign({}, icon), {\n          icon: svg\n        }));\n      }\n\n      return cloneSVG(svg);\n    }\n  }, {\n    key: \"_createSVGElementFromString\",\n    value: function _createSVGElementFromString(str) {\n      var div = this._document.createElement('div');\n\n      div.innerHTML = str;\n      var svg = div.querySelector('svg');\n\n      if (!svg) {\n        throw SVGTagNotFoundError;\n      }\n\n      return svg;\n    }\n  }, {\n    key: \"_setSVGAttribute\",\n    value: function _setSVGAttribute(svg) {\n      this._renderer.setAttribute(svg, 'width', '1em');\n\n      this._renderer.setAttribute(svg, 'height', '1em');\n\n      return svg;\n    }\n  }, {\n    key: \"_colorizeSVGIcon\",\n    value: function _colorizeSVGIcon(svg, twotone, pri, sec) {\n      if (twotone) {\n        var children = svg.childNodes;\n        var length = children.length;\n\n        for (var i = 0; i < length; i++) {\n          var child = children[i];\n\n          if (child.getAttribute('fill') === 'secondaryColor') {\n            this._renderer.setAttribute(child, 'fill', sec);\n          } else {\n            this._renderer.setAttribute(child, 'fill', pri);\n          }\n        }\n      }\n\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\n\n      return svg;\n    }\n  }, {\n    key: \"twoToneColor\",\n    set: function set(_ref) {\n      var primaryColor = _ref.primaryColor,\n          secondaryColor = _ref.secondaryColor;\n      this._twoToneColorPalette.primaryColor = primaryColor;\n      this._twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n    },\n    get: function get() {\n      // Make a copy to avoid unexpected changes.\n      return Object.assign({}, this._twoToneColorPalette);\n    }\n  }]);\n\n  return IconService;\n}();\n\nIconService.ɵfac = function IconService_Factory(t) {\n  return new (t || IconService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc1.HttpBackend, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer));\n};\n\nIconService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: IconService,\n  factory: IconService.ɵfac\n});\n\nIconService.ctorParameters = function () {\n  return [{\n    type: RendererFactory2\n  }, {\n    type: HttpBackend,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: DomSanitizer\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IconService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.RendererFactory2\n    }, {\n      type: ɵngcc1.HttpBackend,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc2.DomSanitizer\n    }];\n  }, null);\n})();\n\nfunction checkMeta(prev, after) {\n  return prev.type === after.type && prev.theme === after.theme && prev.twoToneColor === after.twoToneColor;\n}\n\nvar IconDirective = /*#__PURE__*/function () {\n  function IconDirective(_iconService, _elementRef, _renderer) {\n    _classCallCheck(this, IconDirective);\n\n    this._iconService = _iconService;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n  }\n\n  _createClass(IconDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.type || changes.theme || changes.twoToneColor) {\n        this._changeIcon();\n      }\n    }\n    /**\n     * Render a new icon in the current element. Remove the icon when `type` is falsy.\n     */\n\n  }, {\n    key: \"_changeIcon\",\n    value: function _changeIcon() {\n      var _this6 = this;\n\n      return new Promise(function (resolve) {\n        if (!_this6.type) {\n          _this6._clearSVGElement();\n\n          resolve(null);\n        } else {\n          var preMeta = _this6._getSelfRenderMeta();\n\n          _this6._iconService.getRenderedContent(_this6._parseIconType(_this6.type, _this6.theme), _this6.twoToneColor).subscribe(function (svg) {\n            // avoid race condition, see https://github.com/ant-design/ant-design-icons/issues/315\n            if (checkMeta(preMeta, _this6._getSelfRenderMeta())) {\n              _this6._setSVGElement(svg);\n\n              resolve(svg);\n            } else {\n              resolve(null);\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_getSelfRenderMeta\",\n    value: function _getSelfRenderMeta() {\n      return {\n        type: this.type,\n        theme: this.theme,\n        twoToneColor: this.twoToneColor\n      };\n    }\n    /**\n     * Parse a icon to the standard form, an `IconDefinition` or a string like 'account-book-fill` (with a theme suffixed).\n     * If namespace is specified, ignore theme because it meaningless for users' icons.\n     *\n     * @param type\n     * @param theme\n     */\n\n  }, {\n    key: \"_parseIconType\",\n    value: function _parseIconType(type, theme) {\n      if (isIconDefinition(type)) {\n        return type;\n      } else {\n        var _getNameAndNamespace5 = getNameAndNamespace(type),\n            _getNameAndNamespace6 = _slicedToArray(_getNameAndNamespace5, 2),\n            _name2 = _getNameAndNamespace6[0],\n            namespace = _getNameAndNamespace6[1];\n\n        if (namespace) {\n          return type;\n        }\n\n        if (alreadyHasAThemeSuffix(_name2)) {\n          if (!!theme) {\n            warn(\"'type' \".concat(_name2, \" already gets a theme inside so 'theme' \").concat(theme, \" would be ignored\"));\n          }\n\n          return _name2;\n        } else {\n          return withSuffix(_name2, theme || this._iconService.defaultTheme);\n        }\n      }\n    }\n  }, {\n    key: \"_setSVGElement\",\n    value: function _setSVGElement(svg) {\n      this._clearSVGElement();\n\n      this._renderer.appendChild(this._elementRef.nativeElement, svg);\n    }\n  }, {\n    key: \"_clearSVGElement\",\n    value: function _clearSVGElement() {\n      var _a;\n\n      var el = this._elementRef.nativeElement;\n      var children = el.childNodes;\n      var length = children.length;\n\n      for (var i = length - 1; i >= 0; i--) {\n        var child = children[i];\n\n        if (((_a = child.tagName) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'svg') {\n          this._renderer.removeChild(el, child);\n        }\n      }\n    }\n  }]);\n\n  return IconDirective;\n}();\n\nIconDirective.ɵfac = function IconDirective_Factory(t) {\n  return new (t || IconDirective)(ɵngcc0.ɵɵdirectiveInject(IconService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nIconDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: IconDirective,\n  selectors: [[\"\", \"antIcon\", \"\"]],\n  inputs: {\n    type: \"type\",\n    theme: \"theme\",\n    twoToneColor: \"twoToneColor\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nIconDirective.ctorParameters = function () {\n  return [{\n    type: IconService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nIconDirective.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  theme: [{\n    type: Input\n  }],\n  twoToneColor: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IconDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[antIcon]'\n    }]\n  }], function () {\n    return [{\n      type: IconService\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    twoToneColor: [{\n      type: Input\n    }]\n  });\n})();\n\nvar IconModule = function IconModule() {\n  _classCallCheck(this, IconModule);\n};\n\nIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: IconModule\n});\nIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function IconModule_Factory(t) {\n    return new (t || IconModule)();\n  },\n  providers: [IconService],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconModule, {\n    declarations: function declarations() {\n      return [IconDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [IconDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IconModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [IconDirective],\n      declarations: [IconDirective],\n      providers: [IconService]\n    }]\n  }], null, null);\n})();\n\nvar manifest = {\n  fill: ['account-book', 'alipay-circle', 'alipay-square', 'aliwangwang', 'amazon-circle', 'alert', 'amazon-square', 'api', 'android', 'apple', 'appstore', 'audio', 'backward', 'bank', 'behance-square', 'bell', 'book', 'bug', 'build', 'bulb', 'behance-circle', 'calculator', 'camera', 'car', 'caret-down', 'caret-left', 'carry-out', 'caret-up', 'ci-circle', 'check-circle', 'caret-right', 'clock-circle', 'check-square', 'close-circle', 'close-square', 'chrome', 'calendar', 'code-sandbox-circle', 'code', 'code-sandbox-square', 'codepen-circle', 'codepen-square', 'compass', 'cloud', 'control', 'copy', 'contacts', 'credit-card', 'crown', 'copyright-circle', 'dashboard', 'container', 'delete', 'diff', 'dingtalk-square', 'database', 'dislike', 'customer-service', 'dollar-circle', 'dingtalk-circle', 'down-circle', 'down-square', 'dribbble-square', 'dribbble-circle', 'dropbox-circle', 'euro-circle', 'environment', 'dropbox-square', 'edit', 'exclamation-circle', 'eye', 'experiment', 'eye-invisible', 'fast-backward', 'facebook', 'fast-forward', 'file-add', 'file-excel', 'file-exclamation', 'file-image', 'file', 'file-text', 'file-pdf', 'file-ppt', 'file-markdown', 'file-word', 'file-zip', 'fire', 'filter', 'flag', 'folder', 'folder-open', 'folder-add', 'forward', 'frown', 'format-painter', 'funnel-plot', 'fund', 'github', 'gold', 'gift', 'gitlab', 'golden', 'google-square', 'google-circle', 'google-plus-square', 'google-plus-circle', 'highlight', 'box-plot', 'heart', 'html5', 'idcard', 'hdd', 'hourglass', 'ie-circle', 'home', 'info-circle', 'ie-square', 'instagram', 'interaction', 'insurance', 'layout', 'left-square', 'left-circle', 'linkedin', 'lock', 'like', 'mac-command', 'medium-circle', 'medium-square', 'medicine-box', 'message', 'meh', 'mail', 'mobile', 'money-collect', 'minus-circle', 'pause-circle', 'phone', 'pay-circle', 'play-circle', 'plus-circle', 'notification', 'plus-square', 'pound-circle', 'printer', 'project', 'profile', 'property-safety', 'picture', 'qq-circle', 'play-square', 'question-circle', 'pushpin', 'qq-square', 'red-envelope', 'reconciliation', 'reddit-circle', 'read', 'reddit-square', 'pie-chart', 'right-square', 'right-circle', 'rocket', 'safety-certificate', 'schedule', 'save', 'minus-square', 'robot', 'security-scan', 'setting', 'shop', 'rest', 'shopping', 'signal', 'sketch-circle', 'skin', 'sketch-square', 'skype', 'smile', 'snippets', 'sound', 'step-backward', 'star', 'stop', 'switcher', 'tag', 'tags', 'step-forward', 'tablet', 'taobao-circle', 'sliders', 'tool', 'taobao-square', 'trademark-circle', 'thunderbolt', 'twitter-square', 'trophy', 'twitter-circle', 'unlock', 'up-circle', 'slack-square', 'slack-circle', 'usb', 'video-camera', 'warning', 'wallet', 'weibo-circle', 'weibo-square', 'yahoo', 'windows', 'wechat', 'zhihu-square', 'youtube', 'zhihu-circle', 'yuque', 'up-square', 'file-unknown'],\n  outline: ['account-book', 'align-center', 'aim', 'aliyun', 'aliwangwang', 'android', 'ant-cloud', 'amazon', 'ant-design', 'api', 'appstore-add', 'appstore', 'apple', 'area-chart', 'arrow-down', 'arrow-right', 'arrow-left', 'alipay-circle', 'arrows-alt', 'audio', 'audit', 'backward', 'arrow-up', 'align-left', 'bank', 'apartment', 'bar-chart', 'alipay', 'barcode', 'behance', 'alert', 'bg-colors', 'audio-muted', 'border-bottom', 'bold', 'border-horizontal', 'border-inner', 'alibaba', 'block', 'bars', 'border-left', 'borderless-table', 'border', 'box-plot', 'border-verticle', 'border-outer', 'bug', 'book', 'border-right', 'bulb', 'calendar', 'calculator', 'camera', 'branches', 'bell', 'car', 'caret-right', 'caret-up', 'caret-down', 'behance-square', 'border-top', 'carry-out', 'caret-left', 'chrome', 'clear', 'check', 'ci', 'clock-circle', 'check-square', 'check-circle', 'ci-circle', 'close-square', 'close', 'cloud-sync', 'code-sandbox', 'code', 'cluster', 'cloud-server', 'codepen', 'codepen-circle', 'cloud-download', 'column-height', 'column-width', 'comment', 'close-circle', 'compass', 'compress', 'cloud', 'coffee', 'container', 'contacts', 'control', 'build', 'copy', 'copyright', 'copyright-circle', 'credit-card', 'customer-service', 'dashboard', 'database', 'delete', 'delete-column', 'delete-row', 'delivered-procedure', 'dingding', 'deployment-unit', 'crown', 'diff', 'dislike', 'dingtalk', 'dollar', 'cloud-upload', 'disconnect', 'down-circle', 'down', 'double-left', 'drag', 'dot-chart', 'dash', 'dropbox', 'dribbble-square', 'down-square', 'edit', 'desktop', 'dribbble', 'download', 'ellipsis', 'euro', 'euro-circle', 'enter', 'exception', 'double-right', 'exclamation-circle', 'export', 'expand', 'experiment', 'eye-invisible', 'fall', 'environment', 'fast-forward', 'facebook', 'eye', 'expand-alt', 'fast-backward', 'field-time', 'file-add', 'file-done', 'file-excel', 'field-number', 'field-binary', 'field-string', 'file', 'file-image', 'file-markdown', 'file-gif', 'exclamation', 'file-pdf', 'file-exclamation', 'file-jpg', 'file-ppt', 'file-text', 'file-unknown', 'file-protect', 'file-word', 'file-search', 'file-sync', 'filter', 'folder-add', 'flag', 'folder-open', 'folder', 'fork', 'form', 'folder-view', 'fire', 'font-size', 'font-colors', 'frown', 'forward', 'fullscreen-exit', 'format-painter', 'fund', 'dollar-circle', 'file-zip', 'gif', 'gateway', 'gift', 'fund-projection-screen', 'funnel-plot', 'gitlab', 'global', 'github', 'gold', 'group', 'fullscreen', 'google', 'google-plus', 'heart', 'align-right', 'fund-view', 'function', 'heat-map', 'history', 'home', 'html5', 'hourglass', 'hdd', 'idcard', 'inbox', 'info-circle', 'import', 'insert-row-left', 'info', 'insert-row-right', 'insert-row-above', 'instagram', 'insurance', 'insert-row-below', 'issues-close', 'laptop', 'italic', 'key', 'interaction', 'left-circle', 'layout', 'ie', 'left', 'left-square', 'like', 'line-chart', 'loading', 'line-height', 'lock', 'login', 'highlight', 'mail', 'line', 'man', 'medium', 'medicine-box', 'logout', 'meh', 'linkedin', 'mac-command', 'menu-fold', 'message', 'link', 'minus-circle', 'loading-3-quarters', 'minus-square', 'minus', 'menu', 'merge-cells', 'menu-unfold', 'money-collect', 'notification', 'node-expand', 'node-index', 'more', 'monitor', 'partition', 'pause-circle', 'ordered-list', 'node-collapse', 'percentage', 'paper-clip', 'pause', 'pic-center', 'pay-circle', 'phone', 'medium-workmark', 'one-to-one', 'mobile', 'picture', 'play-circle', 'pic-right', 'pie-chart', 'number', 'play-square', 'plus-circle', 'plus-square', 'pic-left', 'pound-circle', 'poweroff', 'pound', 'profile', 'printer', 'plus', 'property-safety', 'project', 'pull-request', 'pushpin', 'qq', 'question-circle', 'qrcode', 'question', 'radar-chart', 'radius-setting', 'radius-bottomright', 'radius-bottomleft', 'radius-upright', 'radius-upleft', 'red-envelope', 'reddit', 'reconciliation', 'read', 'reload', 'right-circle', 'right', 'retweet', 'right-square', 'rise', 'rocket', 'rollback', 'redo', 'rotate-right', 'save', 'safety-certificate', 'rotate-left', 'safety', 'schedule', 'rest', 'select', 'scan', 'send', 'security-scan', 'scissor', 'setting', 'search', 'shopping-cart', 'shopping', 'robot', 'share-alt', 'shake', 'shrink', 'sisternode', 'skin', 'sketch', 'smile', 'slack-square', 'sliders', 'shop', 'skype', 'small-dash', 'sort-descending', 'solution', 'sound', 'split-cells', 'sort-ascending', 'star', 'step-forward', 'step-backward', 'stop', 'strikethrough', 'stock', 'subnode', 'switcher', 'swap', 'swap-left', 'swap-right', 'sync', 'snippets', 'tablet', 'table', 'tag', 'taobao-circle', 'tags', 'taobao', 'console-sql', 'to-top', 'tool', 'trademark-circle', 'trademark', 'thunderbolt', 'transaction', 'team', 'translation', 'ungroup', 'underline', 'trophy', 'up-circle', 'unordered-list', 'twitter', 'up-square', 'slack', 'up', 'usb', 'user-delete', 'undo', 'upload', 'user-switch', 'user', 'user-add', 'vertical-align-bottom', 'vertical-align-middle', 'verified', 'unlock', 'vertical-align-top', 'vertical-right', 'video-camera-add', 'vertical-left', 'warning', 'wallet', 'whats-app', 'wechat', 'weibo-square', 'wifi', 'woman', 'windows', 'weibo', 'zoom-in', 'youtube', 'weibo-circle', 'video-camera', 'usergroup-delete', 'zhihu', 'yahoo', 'zoom-out', 'yuque', 'usergroup-add'],\n  twotone: ['api', 'appstore', 'account-book', 'audio', 'book', 'alert', 'bell', 'bug', 'bulb', 'calculator', 'camera', 'calendar', 'box-plot', 'car', 'carry-out', 'check-square', 'ci-circle', 'check-circle', 'ci', 'clock-circle', 'cloud', 'close-circle', 'close-square', 'compass', 'contacts', 'container', 'control', 'copy', 'copyright', 'crown', 'copyright-circle', 'customer-service', 'dashboard', 'database', 'code', 'diff', 'delete', 'credit-card', 'bank', 'dislike', 'dollar', 'dollar-circle', 'down-circle', 'down-square', 'edit', 'euro-circle', 'environment', 'euro', 'experiment', 'eye-invisible', 'exclamation-circle', 'eye', 'file-add', 'file-image', 'file-excel', 'file-exclamation', 'file-markdown', 'file-pdf', 'file-word', 'file-ppt', 'file-unknown', 'fire', 'file-text', 'folder-open', 'file', 'filter', 'file-zip', 'folder', 'folder-add', 'flag', 'frown', 'fund', 'gold', 'gift', 'funnel-plot', 'heart', 'highlight', 'hdd', 'hourglass', 'html5', 'idcard', 'info-circle', 'insurance', 'interaction', 'left-circle', 'like', 'layout', 'left-square', 'home', 'medicine-box', 'message', 'meh', 'minus-circle', 'minus-square', 'mobile', 'mail', 'money-collect', 'notification', 'pause-circle', 'pie-chart', 'picture', 'play-circle', 'plus-square', 'plus-circle', 'pound-circle', 'play-square', 'printer', 'profile', 'phone', 'pushpin', 'project', 'question-circle', 'property-safety', 'reconciliation', 'red-envelope', 'lock', 'rest', 'right-circle', 'right-square', 'safety-certificate', 'save', 'schedule', 'security-scan', 'setting', 'shop', 'rocket', 'skin', 'sliders', 'shopping', 'snippets', 'smile', 'sound', 'star', 'stop', 'tablet', 'switcher', 'tag', 'thunderbolt', 'trophy', 'tool', 'trademark-circle', 'up-circle', 'usb', 'up-square', 'unlock', 'wallet', 'video-camera', 'warning', 'build', 'tags']\n};\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ANT_ICON_ANGULAR_CONSOLE_PREFIX, DynamicLoadingTimeoutError, HttpModuleNotImport, IconDirective, IconModule, IconNotFoundError, IconService, NameSpaceIsNotSpecifyError, SVGTagNotFoundError, UrlNotSafeError, alreadyHasAThemeSuffix, cloneSVG, error, getIconDefinitionFromAbbr, getNameAndNamespace, getSecondaryColor, hasNamespace, isIconDefinition, manifest, mapAbbrToTheme, replaceFillColor, warn, withSuffix, withSuffixAndColor };","map":{"version":3,"sources":["../../../src/utils.ts","../../../src/component/icon.error.ts","../../../src/component/icon.service.ts","../../../src/component/icon.directive.ts","../../../src/component/icon.module.ts","../../../src/manifest.ts","../../../src/ant-design-icons-angular.ts"],"names":["generateColor","rxof"],"mappings":"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AQ,GAAa;AAChC,EAAA,IAAI,EAAE,CACJ,cADI,EACY,eADZ,EAC6B,eAD7B,EAC8C,aAD9C,EAC6D,eAD7D,EAC8E,OAD9E,EACuF,eADvF,EACwG,KADxG,EAC+G,SAD/G,EAC0H,OAD1H,EACmI,UADnI,EAC+I,OAD/I,EACwJ,UADxJ,EACoK,MADpK,EAC4K,gBAD5K,EAC8L,MAD9L,EACsM,MADtM,EAC8M,KAD9M,EACqN,OADrN,EAC8N,MAD9N,EACsO,gBADtO,EACwP,YADxP,EACsQ,QADtQ,EACgR,KADhR,EACuR,YADvR,EACqS,YADrS,EACmT,WADnT,EACgU,UADhU,EAC4U,WAD5U,EACyV,cADzV,EACyW,aADzW,EACwX,cADxX,EACwY,cADxY,EACwZ,cADxZ,EACwa,cADxa,EACwb,QADxb,EACkc,UADlc,EAC8c,qBAD9c,EACqe,MADre,EAC6e,qBAD7e,EACogB,gBADpgB,EACshB,gBADthB,EACwiB,SADxiB,EACmjB,OADnjB,EAC4jB,SAD5jB,EACukB,MADvkB,EAC+kB,UAD/kB,EAC2lB,aAD3lB,EAC0mB,OAD1mB,EACmnB,kBADnnB,EACuoB,WADvoB,EACopB,WADppB,EACiqB,QADjqB,EAC2qB,MAD3qB,EACmrB,iBADnrB,EACssB,UADtsB,EACktB,SADltB,EAC6tB,kBAD7tB,EACivB,eADjvB,EACkwB,iBADlwB,EACqxB,aADrxB,EACoyB,aADpyB,EACmzB,iBADnzB,EACs0B,iBADt0B,EACy1B,gBADz1B,EAC22B,aAD32B,EAC03B,aAD13B,EACy4B,gBADz4B,EAC25B,MAD35B,EACm6B,oBADn6B,EACy7B,KADz7B,EACg8B,YADh8B,EAC88B,eAD98B,EAC+9B,eAD/9B,EACg/B,UADh/B,EAC4/B,cAD5/B,EAC4gC,UAD5gC,EACwhC,YADxhC,EACsiC,kBADtiC,EAC0jC,YAD1jC,EACwkC,MADxkC,EACglC,WADhlC,EAC6lC,UAD7lC,EACymC,UADzmC,EACqnC,eADrnC,EACsoC,WADtoC,EACmpC,UADnpC,EAC+pC,MAD/pC,EACuqC,QADvqC,EACirC,MADjrC,EACyrC,QADzrC,EACmsC,aADnsC,EACktC,YADltC,EACguC,SADhuC,EAC2uC,OAD3uC,EACovC,gBADpvC,EACswC,aADtwC,EACqxC,MADrxC,EAC6xC,QAD7xC,EACuyC,MADvyC,EAC+yC,MAD/yC,EACuzC,QADvzC,EACi0C,QADj0C,EAC20C,eAD30C,EAC41C,eAD51C,EAC62C,oBAD72C,EACm4C,oBADn4C,EACy5C,WADz5C,EACs6C,UADt6C,EACk7C,OADl7C,EAC27C,OAD37C,EACo8C,QADp8C,EAC88C,KAD98C,EACq9C,WADr9C,EACk+C,WADl+C,EAC++C,MAD/+C,EACu/C,aADv/C,EACsgD,WADtgD,EACmhD,WADnhD,EACgiD,aADhiD,EAC+iD,WAD/iD,EAC4jD,QAD5jD,EACskD,aADtkD,EACqlD,aADrlD,EAComD,UADpmD,EACgnD,MADhnD,EACwnD,MADxnD,EACgoD,aADhoD,EAC+oD,eAD/oD,EACgqD,eADhqD,EACirD,cADjrD,EACisD,SADjsD,EAC4sD,KAD5sD,EACmtD,MADntD,EAC2tD,QAD3tD,EACquD,eADruD,EACsvD,cADtvD,EACswD,cADtwD,EACsxD,OADtxD,EAC+xD,YAD/xD,EAC6yD,aAD7yD,EAC4zD,aAD5zD,EAC20D,cAD30D,EAC21D,aAD31D,EAC02D,cAD12D,EAC03D,SAD13D,EACq4D,SADr4D,EACg5D,SADh5D,EAC25D,iBAD35D,EAC86D,SAD96D,EACy7D,WADz7D,EACs8D,aADt8D,EACq9D,iBADr9D,EACw+D,SADx+D,EACm/D,WADn/D,EACggE,cADhgE,EACghE,gBADhhE,EACkiE,eADliE,EACmjE,MADnjE,EAC2jE,eAD3jE,EAC4kE,WAD5kE,EACylE,cADzlE,EACymE,cADzmE,EACynE,QADznE,EACmoE,oBADnoE,EACypE,UADzpE,EACqqE,MADrqE,EAC6qE,cAD7qE,EAC6rE,OAD7rE,EACssE,eADtsE,EACutE,SADvtE,EACkuE,MADluE,EAC0uE,MAD1uE,EACkvE,UADlvE,EAC8vE,QAD9vE,EACwwE,eADxwE,EACyxE,MADzxE,EACiyE,eADjyE,EACkzE,OADlzE,EAC2zE,OAD3zE,EACo0E,UADp0E,EACg1E,OADh1E,EACy1E,eADz1E,EAC02E,MAD12E,EACk3E,MADl3E,EAC03E,UAD13E,EACs4E,KADt4E,EAC64E,MAD74E,EACq5E,cADr5E,EACq6E,QADr6E,EAC+6E,eAD/6E,EACg8E,SADh8E,EAC28E,MAD38E,EACm9E,eADn9E,EACo+E,kBADp+E,EACw/E,aADx/E,EACugF,gBADvgF,EACyhF,QADzhF,EACmiF,gBADniF,EACqjF,QADrjF,EAC+jF,WAD/jF,EAC4kF,cAD5kF,EAC4lF,cAD5lF,EAC4mF,KAD5mF,EACmnF,cADnnF,EACmoF,SADnoF,EAC8oF,QAD9oF,EACwpF,cADxpF,EACwqF,cADxqF,EACwrF,OADxrF,EACisF,SADjsF,EAC4sF,QAD5sF,EACstF,cADttF,EACsuF,SADtuF,EACivF,cADjvF,EACiwF,OADjwF,EAC0wF,WAD1wF,EACuxF,cADvxF,CAD0B;AAIhC,EAAA,OAAO,EAAE,CACP,cADO,EACS,cADT,EACyB,KADzB,EACgC,QADhC,EAC0C,aAD1C,EACyD,SADzD,EACoE,WADpE,EACiF,QADjF,EAC2F,YAD3F,EACyG,KADzG,EACgH,cADhH,EACgI,UADhI,EAC4I,OAD5I,EACqJ,YADrJ,EACmK,YADnK,EACiL,aADjL,EACgM,YADhM,EAC8M,eAD9M,EAC+N,YAD/N,EAC6O,OAD7O,EACsP,OADtP,EAC+P,UAD/P,EAC2Q,UAD3Q,EACuR,YADvR,EACqS,MADrS,EAC6S,WAD7S,EAC0T,WAD1T,EACuU,QADvU,EACiV,SADjV,EAC4V,SAD5V,EACuW,OADvW,EACgX,WADhX,EAC6X,aAD7X,EAC4Y,eAD5Y,EAC6Z,MAD7Z,EACqa,mBADra,EAC0b,cAD1b,EAC0c,SAD1c,EACqd,OADrd,EAC8d,MAD9d,EACse,aADte,EACqf,kBADrf,EACygB,QADzgB,EACmhB,UADnhB,EAC+hB,iBAD/hB,EACkjB,cADljB,EACkkB,KADlkB,EACykB,MADzkB,EACilB,cADjlB,EACimB,MADjmB,EACymB,UADzmB,EACqnB,YADrnB,EACmoB,QADnoB,EAC6oB,UAD7oB,EACypB,MADzpB,EACiqB,KADjqB,EACwqB,aADxqB,EACurB,UADvrB,EACmsB,YADnsB,EACitB,gBADjtB,EACmuB,YADnuB,EACivB,WADjvB,EAC8vB,YAD9vB,EAC4wB,QAD5wB,EACsxB,OADtxB,EAC+xB,OAD/xB,EACwyB,IADxyB,EAC8yB,cAD9yB,EAC8zB,cAD9zB,EAC80B,cAD90B,EAC81B,WAD91B,EAC22B,cAD32B,EAC23B,OAD33B,EACo4B,YADp4B,EACk5B,cADl5B,EACk6B,MADl6B,EAC06B,SAD16B,EACq7B,cADr7B,EACq8B,SADr8B,EACg9B,gBADh9B,EACk+B,gBADl+B,EACo/B,eADp/B,EACqgC,cADrgC,EACqhC,SADrhC,EACgiC,cADhiC,EACgjC,SADhjC,EAC2jC,UAD3jC,EACukC,OADvkC,EACglC,QADhlC,EAC0lC,WAD1lC,EACumC,UADvmC,EACmnC,SADnnC,EAC8nC,OAD9nC,EACuoC,MADvoC,EAC+oC,WAD/oC,EAC4pC,kBAD5pC,EACgrC,aADhrC,EAC+rC,kBAD/rC,EACmtC,WADntC,EACguC,UADhuC,EAC4uC,QAD5uC,EACsvC,eADtvC,EACuwC,YADvwC,EACqxC,qBADrxC,EAC4yC,UAD5yC,EACwzC,iBADxzC,EAC20C,OAD30C,EACo1C,MADp1C,EAC41C,SAD51C,EACu2C,UADv2C,EACm3C,QADn3C,EAC63C,cAD73C,EAC64C,YAD74C,EAC25C,aAD35C,EAC06C,MAD16C,EACk7C,aADl7C,EACi8C,MADj8C,EACy8C,WADz8C,EACs9C,MADt9C,EAC89C,SAD99C,EACy+C,iBADz+C,EAC4/C,aAD5/C,EAC2gD,MAD3gD,EACmhD,SADnhD,EAC8hD,UAD9hD,EAC0iD,UAD1iD,EACsjD,UADtjD,EACkkD,MADlkD,EAC0kD,aAD1kD,EACylD,OADzlD,EACkmD,WADlmD,EAC+mD,cAD/mD,EAC+nD,oBAD/nD,EACqpD,QADrpD,EAC+pD,QAD/pD,EACyqD,YADzqD,EACurD,eADvrD,EACwsD,MADxsD,EACgtD,aADhtD,EAC+tD,cAD/tD,EAC+uD,UAD/uD,EAC2vD,KAD3vD,EACkwD,YADlwD,EACgxD,eADhxD,EACiyD,YADjyD,EAC+yD,UAD/yD,EAC2zD,WAD3zD,EACw0D,YADx0D,EACs1D,cADt1D,EACs2D,cADt2D,EACs3D,cADt3D,EACs4D,MADt4D,EAC84D,YAD94D,EAC45D,eAD55D,EAC66D,UAD76D,EACy7D,aADz7D,EACw8D,UADx8D,EACo9D,kBADp9D,EACw+D,UADx+D,EACo/D,UADp/D,EACggE,WADhgE,EAC6gE,cAD7gE,EAC6hE,cAD7hE,EAC6iE,WAD7iE,EAC0jE,aAD1jE,EACykE,WADzkE,EACslE,QADtlE,EACgmE,YADhmE,EAC8mE,MAD9mE,EACsnE,aADtnE,EACqoE,QADroE,EAC+oE,MAD/oE,EACupE,MADvpE,EAC+pE,aAD/pE,EAC8qE,MAD9qE,EACsrE,WADtrE,EACmsE,aADnsE,EACktE,OADltE,EAC2tE,SAD3tE,EACsuE,iBADtuE,EACyvE,gBADzvE,EAC2wE,MAD3wE,EACmxE,eADnxE,EACoyE,UADpyE,EACgzE,KADhzE,EACuzE,SADvzE,EACk0E,MADl0E,EAC00E,wBAD10E,EACo2E,aADp2E,EACm3E,QADn3E,EAC63E,QAD73E,EACu4E,QADv4E,EACi5E,MADj5E,EACy5E,OADz5E,EACk6E,YADl6E,EACg7E,QADh7E,EAC07E,aAD17E,EACy8E,OADz8E,EACk9E,aADl9E,EACi+E,WADj+E,EAC8+E,UAD9+E,EAC0/E,UAD1/E,EACsgF,SADtgF,EACihF,MADjhF,EACyhF,OADzhF,EACkiF,WADliF,EAC+iF,KAD/iF,EACsjF,QADtjF,EACgkF,OADhkF,EACykF,aADzkF,EACwlF,QADxlF,EACkmF,iBADlmF,EACqnF,MADrnF,EAC6nF,kBAD7nF,EACipF,kBADjpF,EACqqF,WADrqF,EACkrF,WADlrF,EAC+rF,kBAD/rF,EACmtF,cADntF,EACmuF,QADnuF,EAC6uF,QAD7uF,EACuvF,KADvvF,EAC8vF,aAD9vF,EAC6wF,aAD7wF,EAC4xF,QAD5xF,EACsyF,IADtyF,EAC4yF,MAD5yF,EACozF,aADpzF,EACm0F,MADn0F,EAC20F,YAD30F,EACy1F,SADz1F,EACo2F,aADp2F,EACm3F,MADn3F,EAC23F,OAD33F,EACo4F,WADp4F,EACi5F,MADj5F,EACy5F,MADz5F,EACi6F,KADj6F,EACw6F,QADx6F,EACk7F,cADl7F,EACk8F,QADl8F,EAC48F,KAD58F,EACm9F,UADn9F,EAC+9F,aAD/9F,EAC8+F,WAD9+F,EAC2/F,SAD3/F,EACsgG,MADtgG,EAC8gG,cAD9gG,EAC8hG,oBAD9hG,EACojG,cADpjG,EACokG,OADpkG,EAC6kG,MAD7kG,EACqlG,aADrlG,EAComG,aADpmG,EACmnG,eADnnG,EACooG,cADpoG,EACopG,aADppG,EACmqG,YADnqG,EACirG,MADjrG,EACyrG,SADzrG,EACosG,WADpsG,EACitG,cADjtG,EACiuG,cADjuG,EACivG,eADjvG,EACkwG,YADlwG,EACgxG,YADhxG,EAC8xG,OAD9xG,EACuyG,YADvyG,EACqzG,YADrzG,EACm0G,OADn0G,EAC40G,iBAD50G,EAC+1G,YAD/1G,EAC62G,QAD72G,EACu3G,SADv3G,EACk4G,aADl4G,EACi5G,WADj5G,EAC85G,WAD95G,EAC26G,QAD36G,EACq7G,aADr7G,EACo8G,aADp8G,EACm9G,aADn9G,EACk+G,UADl+G,EAC8+G,cAD9+G,EAC8/G,UAD9/G,EAC0gH,OAD1gH,EACmhH,SADnhH,EAC8hH,SAD9hH,EACyiH,MADziH,EACijH,iBADjjH,EACokH,SADpkH,EAC+kH,cAD/kH,EAC+lH,SAD/lH,EAC0mH,IAD1mH,EACgnH,iBADhnH,EACmoH,QADnoH,EAC6oH,UAD7oH,EACypH,aADzpH,EACwqH,gBADxqH,EAC0rH,oBAD1rH,EACgtH,mBADhtH,EACquH,gBADruH,EACuvH,eADvvH,EACwwH,cADxwH,EACwxH,QADxxH,EACkyH,gBADlyH,EACozH,MADpzH,EAC4zH,QAD5zH,EACs0H,cADt0H,EACs1H,OADt1H,EAC+1H,SAD/1H,EAC02H,cAD12H,EAC03H,MAD13H,EACk4H,QADl4H,EAC44H,UAD54H,EACw5H,MADx5H,EACg6H,cADh6H,EACg7H,MADh7H,EACw7H,oBADx7H,EAC88H,aAD98H,EAC69H,QAD79H,EACu+H,UADv+H,EACm/H,MADn/H,EAC2/H,QAD3/H,EACqgI,MADrgI,EAC6gI,MAD7gI,EACqhI,eADrhI,EACsiI,SADtiI,EACijI,SADjjI,EAC4jI,QAD5jI,EACskI,eADtkI,EACulI,UADvlI,EACmmI,OADnmI,EAC4mI,WAD5mI,EACynI,OADznI,EACkoI,QADloI,EAC4oI,YAD5oI,EAC0pI,MAD1pI,EACkqI,QADlqI,EAC4qI,OAD5qI,EACqrI,cADrrI,EACqsI,SADrsI,EACgtI,MADhtI,EACwtI,OADxtI,EACiuI,YADjuI,EAC+uI,iBAD/uI,EACkwI,UADlwI,EAC8wI,OAD9wI,EACuxI,aADvxI,EACsyI,gBADtyI,EACwzI,MADxzI,EACg0I,cADh0I,EACg1I,eADh1I,EACi2I,MADj2I,EACy2I,eADz2I,EAC03I,OAD13I,EACm4I,SADn4I,EAC84I,UAD94I,EAC05I,MAD15I,EACk6I,WADl6I,EAC+6I,YAD/6I,EAC67I,MAD77I,EACq8I,UADr8I,EACi9I,QADj9I,EAC29I,OAD39I,EACo+I,KADp+I,EAC2+I,eAD3+I,EAC4/I,MAD5/I,EACogJ,QADpgJ,EAC8gJ,aAD9gJ,EAC6hJ,QAD7hJ,EACuiJ,MADviJ,EAC+iJ,kBAD/iJ,EACmkJ,WADnkJ,EACglJ,aADhlJ,EAC+lJ,aAD/lJ,EAC8mJ,MAD9mJ,EACsnJ,aADtnJ,EACqoJ,SADroJ,EACgpJ,WADhpJ,EAC6pJ,QAD7pJ,EACuqJ,WADvqJ,EACorJ,gBADprJ,EACssJ,SADtsJ,EACitJ,WADjtJ,EAC8tJ,OAD9tJ,EACuuJ,IADvuJ,EAC6uJ,KAD7uJ,EACovJ,aADpvJ,EACmwJ,MADnwJ,EAC2wJ,QAD3wJ,EACqxJ,aADrxJ,EACoyJ,MADpyJ,EAC4yJ,UAD5yJ,EACwzJ,uBADxzJ,EACi1J,uBADj1J,EAC02J,UAD12J,EACs3J,QADt3J,EACg4J,oBADh4J,EACs5J,gBADt5J,EACw6J,kBADx6J,EAC47J,eAD57J,EAC68J,SAD78J,EACw9J,QADx9J,EACk+J,WADl+J,EAC++J,QAD/+J,EACy/J,cADz/J,EACygK,MADzgK,EACihK,OADjhK,EAC0hK,SAD1hK,EACqiK,OADriK,EAC8iK,SAD9iK,EACyjK,SADzjK,EACokK,cADpkK,EAColK,cADplK,EAComK,kBADpmK,EACwnK,OADxnK,EACioK,OADjoK,EAC0oK,UAD1oK,EACspK,OADtpK,EAC+pK,eAD/pK,CAJuB;AAOhC,EAAA,OAAO,EAAE,CACP,KADO,EACA,UADA,EACY,cADZ,EAC4B,OAD5B,EACqC,MADrC,EAC6C,OAD7C,EACsD,MADtD,EAC8D,KAD9D,EACqE,MADrE,EAC6E,YAD7E,EAC2F,QAD3F,EACqG,UADrG,EACiH,UADjH,EAC6H,KAD7H,EACoI,WADpI,EACiJ,cADjJ,EACiK,WADjK,EAC8K,cAD9K,EAC8L,IAD9L,EACoM,cADpM,EACoN,OADpN,EAC6N,cAD7N,EAC6O,cAD7O,EAC6P,SAD7P,EACwQ,UADxQ,EACoR,WADpR,EACiS,SADjS,EAC4S,MAD5S,EACoT,WADpT,EACiU,OADjU,EAC0U,kBAD1U,EAC8V,kBAD9V,EACkX,WADlX,EAC+X,UAD/X,EAC2Y,MAD3Y,EACmZ,MADnZ,EAC2Z,QAD3Z,EACqa,aADra,EACob,MADpb,EAC4b,SAD5b,EACuc,QADvc,EACid,eADjd,EACke,aADle,EACif,aADjf,EACggB,MADhgB,EACwgB,aADxgB,EACuhB,aADvhB,EACsiB,MADtiB,EAC8iB,YAD9iB,EAC4jB,eAD5jB,EAC6kB,oBAD7kB,EACmmB,KADnmB,EAC0mB,UAD1mB,EACsnB,YADtnB,EACooB,YADpoB,EACkpB,kBADlpB,EACsqB,eADtqB,EACurB,UADvrB,EACmsB,WADnsB,EACgtB,UADhtB,EAC4tB,cAD5tB,EAC4uB,MAD5uB,EACovB,WADpvB,EACiwB,aADjwB,EACgxB,MADhxB,EACwxB,QADxxB,EACkyB,UADlyB,EAC8yB,QAD9yB,EACwzB,YADxzB,EACs0B,MADt0B,EAC80B,OAD90B,EACu1B,MADv1B,EAC+1B,MAD/1B,EACu2B,MADv2B,EAC+2B,aAD/2B,EAC83B,OAD93B,EACu4B,WADv4B,EACo5B,KADp5B,EAC25B,WAD35B,EACw6B,OADx6B,EACi7B,QADj7B,EAC27B,aAD37B,EAC08B,WAD18B,EACu9B,aADv9B,EACs+B,aADt+B,EACq/B,MADr/B,EAC6/B,QAD7/B,EACugC,aADvgC,EACshC,MADthC,EAC8hC,cAD9hC,EAC8iC,SAD9iC,EACyjC,KADzjC,EACgkC,cADhkC,EACglC,cADhlC,EACgmC,QADhmC,EAC0mC,MAD1mC,EACknC,eADlnC,EACmoC,cADnoC,EACmpC,cADnpC,EACmqC,WADnqC,EACgrC,SADhrC,EAC2rC,aAD3rC,EAC0sC,aAD1sC,EACytC,aADztC,EACwuC,cADxuC,EACwvC,aADxvC,EACuwC,SADvwC,EACkxC,SADlxC,EAC6xC,OAD7xC,EACsyC,SADtyC,EACizC,SADjzC,EAC4zC,iBAD5zC,EAC+0C,iBAD/0C,EACk2C,gBADl2C,EACo3C,cADp3C,EACo4C,MADp4C,EAC44C,MAD54C,EACo5C,cADp5C,EACo6C,cADp6C,EACo7C,oBADp7C,EAC08C,MAD18C,EACk9C,UADl9C,EAC89C,eAD99C,EAC++C,SAD/+C,EAC0/C,MAD1/C,EACkgD,QADlgD,EAC4gD,MAD5gD,EACohD,SADphD,EAC+hD,UAD/hD,EAC2iD,UAD3iD,EACujD,OADvjD,EACgkD,OADhkD,EACykD,MADzkD,EACilD,MADjlD,EACylD,QADzlD,EACmmD,UADnmD,EAC+mD,KAD/mD,EACsnD,aADtnD,EACqoD,QADroD,EAC+oD,MAD/oD,EACupD,kBADvpD,EAC2qD,WAD3qD,EACwrD,KADxrD,EAC+rD,WAD/rD,EAC4sD,QAD5sD,EACstD,QADttD,EACguD,cADhuD,EACgvD,SADhvD,EAC2vD,OAD3vD,EACowD,MADpwD;AAPuB,CDQ3B;AEXP;;;;AAIA,SAAA,+BAAA,EAAA,0BAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,0BAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,KAAA,EAAA,yBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,UAAA,EAAA,kBAAA","sourcesContent":["import { isDevMode } from '@angular/core';\nimport { generate as generateColor } from '@ant-design/colors';\n\nimport { IconDefinition, ThemeType } from './types';\n\nexport const ANT_ICON_ANGULAR_CONSOLE_PREFIX = '[@ant-design/icons-angular]:';\n\nexport function error(message: string): void {\n  console.error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX} ${message}.`);\n}\n\nexport function warn(message: string): void {\n  if (isDevMode()) {\n    console.warn(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX} ${message}.`);\n  }\n}\n\nexport function getSecondaryColor(primaryColor: string): string {\n  return generateColor(primaryColor)[0];\n}\n\nexport function withSuffix(name: string, theme: ThemeType | undefined): string {\n  switch (theme) {\n    case 'fill': return `${name}-fill`;\n    case 'outline': return `${name}-o`;\n    case 'twotone': return `${name}-twotone`;\n    case undefined: return name;\n    default: throw new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Theme \"${theme}\" is not a recognized theme!`);\n  }\n}\n\nexport function withSuffixAndColor(name: string, theme: ThemeType, pri: string, sec: string): string {\n  return `${withSuffix(name, theme)}-${pri}-${sec}`;\n}\n\nexport function mapAbbrToTheme(abbr: string): ThemeType {\n  return abbr === 'o' ? 'outline' : abbr as ThemeType;\n}\n\nexport function alreadyHasAThemeSuffix(name: string): boolean {\n  return name.endsWith('-fill') || name.endsWith('-o') || name.endsWith('-twotone');\n}\n\nexport function isIconDefinition(target: string | IconDefinition): target is IconDefinition {\n  return (\n    typeof target === 'object' &&\n    typeof target.name === 'string' &&\n    (typeof target.theme === 'string' || target.theme === undefined) &&\n    typeof target.icon === 'string'\n  );\n}\n\n/**\n * Get an `IconDefinition` object from abbreviation type, like `account-book-fill`.\n * @param str\n */\nexport function getIconDefinitionFromAbbr(str: string): IconDefinition {\n  const arr = str.split('-');\n  const theme = mapAbbrToTheme(arr.splice(arr.length - 1, 1)[0]);\n  const name = arr.join('-');\n\n  return {\n    name,\n    theme,\n    icon: ''\n  } as IconDefinition;\n}\n\nexport function cloneSVG(svg: SVGElement): SVGElement {\n  return svg.cloneNode(true) as SVGElement;\n}\n\n/**\n * Parse inline SVG string and replace colors with placeholders. For twotone icons only.\n */\nexport function replaceFillColor(raw: string): string {\n  return raw\n    .replace(/['\"]#333['\"]/g, '\"primaryColor\"')\n    .replace(/['\"]#E6E6E6['\"]/g, '\"secondaryColor\"')\n    .replace(/['\"]#D9D9D9['\"]/g, '\"secondaryColor\"')\n    .replace(/['\"]#D8D8D8['\"]/g, '\"secondaryColor\"');\n}\n\n/**\n * Split a name with namespace in it into a tuple like [ name, namespace ].\n */\nexport function getNameAndNamespace(type: string): [string, string] {\n  const split = type.split(':');\n  switch (split.length) {\n    case 1: return [type, ''];\n    case 2: return [split[1], split[0]];\n    default: throw new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}The icon type ${type} is not valid!`);\n  }\n}\n\nexport function hasNamespace(type: string): boolean {\n  return getNameAndNamespace(type)[1] !== '';\n}\n","import { error, ANT_ICON_ANGULAR_CONSOLE_PREFIX } from '../utils';\n\nexport function NameSpaceIsNotSpecifyError(): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Type should have a namespace. Try \"namespace:${name}\".`);\n}\n\nexport function IconNotFoundError(icon: string): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}the icon ${icon} does not exist or is not registered.`);\n}\n\nexport function HttpModuleNotImport(): null {\n  error(`you need to import \"HttpClientModule\" to use dynamic importing.`);\n  return null;\n}\n\nexport function UrlNotSafeError(url: string): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}The url \"${url}\" is unsafe.`);\n}\n\nexport function SVGTagNotFoundError(): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}<svg> tag not found.`);\n}\n\nexport function DynamicLoadingTimeoutError(): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Importing timeout error.`);\n}\n","import { DOCUMENT } from '@angular/common';\nimport { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Optional, Renderer2, RendererFactory2, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of as rxof, Observable, Subject } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  finalize,\n  map,\n  share,\n  take,\n  tap\n} from 'rxjs/operators';\nimport {\n  CachedIconDefinition,\n  IconDefinition,\n  ThemeType,\n  TwoToneColorPalette,\n  TwoToneColorPaletteSetter\n} from '../types';\nimport {\n  cloneSVG,\n  getIconDefinitionFromAbbr,\n  getNameAndNamespace,\n  getSecondaryColor,\n  hasNamespace,\n  isIconDefinition,\n  replaceFillColor,\n  warn,\n  withSuffix,\n  withSuffixAndColor\n} from '../utils';\nimport {\n  DynamicLoadingTimeoutError,\n  HttpModuleNotImport,\n  IconNotFoundError,\n  NameSpaceIsNotSpecifyError,\n  SVGTagNotFoundError,\n  UrlNotSafeError\n} from './icon.error';\n\nconst JSONP_HANDLER_NAME = '__ant_icon_load';\n\n@Injectable()\nexport class IconService {\n  defaultTheme: ThemeType = 'outline';\n\n  set twoToneColor({\n    primaryColor,\n    secondaryColor\n  }: TwoToneColorPaletteSetter) {\n    this._twoToneColorPalette.primaryColor = primaryColor;\n    this._twoToneColorPalette.secondaryColor =\n      secondaryColor || getSecondaryColor(primaryColor);\n  }\n\n  get twoToneColor(): TwoToneColorPaletteSetter {\n    // Make a copy to avoid unexpected changes.\n    return { ...this._twoToneColorPalette } as TwoToneColorPalette;\n  }\n\n  protected _renderer: Renderer2;\n  protected _http: HttpClient;\n\n  /**\n   * All icon definitions would be registered here.\n   */\n  protected readonly _svgDefinitions = new Map<string, IconDefinition>();\n\n  /**\n   * Cache all rendered icons. Icons are identified by name, theme,\n   * and for twotone icons, primary color and secondary color.\n   */\n  protected readonly _svgRenderedDefinitions = new Map<string, CachedIconDefinition>();\n\n  protected _inProgressFetches = new Map<\n    string,\n    Observable<IconDefinition | null>\n  >();\n\n  /**\n   * Url prefix for fetching inline SVG by dynamic importing.\n   */\n  protected _assetsUrlRoot = '';\n\n  protected _twoToneColorPalette: TwoToneColorPalette = {\n    primaryColor: '#333333',\n    secondaryColor: '#E6E6E6'\n  };\n\n  /** A flag indicates whether jsonp loading is enabled. */\n  private _enableJsonpLoading = false;\n  private readonly _jsonpIconLoad$ = new Subject<IconDefinition>();\n\n  constructor(\n    protected _rendererFactory: RendererFactory2,\n    @Optional() protected _handler: HttpBackend,\n    // tslint:disable-next-line:no-any\n    @Optional() @Inject(DOCUMENT) protected _document: any,\n    protected sanitizer: DomSanitizer\n  ) {\n    this._renderer = this._rendererFactory.createRenderer(null, null);\n    if (this._handler) {\n      this._http = new HttpClient(this._handler);\n    }\n  }\n\n  /**\n   * Call this method to switch to jsonp like loading.\n   */\n  useJsonpLoading(): void {\n    if (!this._enableJsonpLoading) {\n      this._enableJsonpLoading = true;\n\n      window[JSONP_HANDLER_NAME] = (icon: IconDefinition) => {\n        this._jsonpIconLoad$.next(icon);\n      };\n    } else {\n      warn('You are already using jsonp loading.');\n    }\n  }\n\n  /**\n   * Change the prefix of the inline svg resources, so they could be deployed elsewhere, like CDN.\n   * @param prefix\n   */\n  changeAssetsSource(prefix: string): void {\n    this._assetsUrlRoot = prefix.endsWith('/') ? prefix : prefix + '/';\n  }\n\n  /**\n   * Add icons provided by ant design.\n   * @param icons\n   */\n  addIcon(...icons: IconDefinition[]): void {\n    icons.forEach(icon => {\n      this._svgDefinitions.set(withSuffix(icon.name, icon.theme), icon);\n    });\n  }\n\n  /**\n   * Register an icon. Namespace is required.\n   * @param type\n   * @param literal\n   */\n  addIconLiteral(type: string, literal: string): void {\n    const [_, namespace] = getNameAndNamespace(type);\n    if (!namespace) {\n      throw NameSpaceIsNotSpecifyError();\n    }\n    this.addIcon({ name: type, icon: literal });\n  }\n\n  /**\n   * Remove all cache.\n   */\n  clear(): void {\n    this._svgDefinitions.clear();\n    this._svgRenderedDefinitions.clear();\n  }\n\n  /**\n   * Get a rendered `SVGElement`.\n   * @param icon\n   * @param twoToneColor\n   */\n  getRenderedContent(\n    icon: IconDefinition | string,\n    twoToneColor?: string\n  ): Observable<SVGElement> {\n    // If `icon` is a `IconDefinition`, go to the next step. If not, try to fetch it from cache.\n    const definitionOrNull: IconDefinition | null = isIconDefinition(icon)\n      ? (icon as IconDefinition)\n      : this._svgDefinitions.get(icon) || null;\n\n    // If `icon` is a `IconDefinition` of successfully fetch, wrap it in an `Observable`.\n    // Otherwise try to fetch it from remote.\n    const $iconDefinition = definitionOrNull\n      ? rxof(definitionOrNull)\n      : this._loadIconDynamically(icon as string);\n\n    // If finally get an `IconDefinition`, render and return it. Otherwise throw an error.\n    return $iconDefinition.pipe(\n      map(i => {\n        if (!i) {\n          throw IconNotFoundError(icon as string);\n        }\n        return this._loadSVGFromCacheOrCreateNew(i, twoToneColor);\n      })\n    );\n  }\n\n  getCachedIcons(): Map<string, IconDefinition> {\n    return this._svgDefinitions;\n  }\n\n  /**\n   * Get raw svg and assemble a `IconDefinition` object.\n   * @param type\n   */\n  protected _loadIconDynamically(\n    type: string\n  ): Observable<IconDefinition | null> {\n    // If developer doesn't provide HTTP module nor enable jsonp loading, just throw an error.\n    if (!this._http && !this._enableJsonpLoading) {\n      return rxof(HttpModuleNotImport());\n    }\n\n    // If multi directive ask for the same icon at the same time,\n    // request should only be fired once.\n    let inProgress = this._inProgressFetches.get(type);\n\n    if (!inProgress) {\n      const [name, namespace] = getNameAndNamespace(type);\n\n      // If the string has a namespace within, create a simple `IconDefinition`.\n      const icon: IconDefinition = namespace\n        ? { name: type, icon: '' }\n        : getIconDefinitionFromAbbr(name);\n\n      const suffix = this._enableJsonpLoading ? '.js' : '.svg';\n      const url =\n        (namespace\n          ? `${this._assetsUrlRoot}assets/${namespace}/${name}`\n          : `${this._assetsUrlRoot}assets/${icon.theme}/${icon.name}`) + suffix;\n\n      const safeUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n\n      if (!safeUrl) {\n        throw UrlNotSafeError(url);\n      }\n\n      const source = !this._enableJsonpLoading\n        ? this._http\n            .get(safeUrl, { responseType: 'text' })\n            .pipe(map(literal => ({ ...icon, icon: literal })))\n        : this._loadIconDynamicallyWithJsonp(icon, safeUrl);\n\n      inProgress = source.pipe(\n        tap(definition => this.addIcon(definition)),\n        finalize(() => this._inProgressFetches.delete(type)),\n        catchError(() => rxof(null)),\n        share()\n      );\n\n      this._inProgressFetches.set(type, inProgress);\n    }\n\n    return inProgress;\n  }\n\n  protected _loadIconDynamicallyWithJsonp(icon: IconDefinition, url: string): Observable<IconDefinition> {\n    return new Observable<IconDefinition>(subscriber => {\n      const loader = this._document.createElement('script');\n      const timer = setTimeout(() => {\n        clean();\n        subscriber.error(DynamicLoadingTimeoutError());\n      }, 6000);\n\n      loader.src = url;\n\n      function clean(): void {\n        loader.parentNode.removeChild(loader);\n        clearTimeout(timer);\n      }\n\n      this._document.body.appendChild(loader);\n      this._jsonpIconLoad$\n          .pipe(\n              filter(i => i.name === icon.name && i.theme === icon.theme),\n              take(1)\n          )\n          .subscribe(i => {\n            subscriber.next(i);\n            clean();\n          });\n    });\n  }\n\n  /**\n   * Render a new `SVGElement` for a given `IconDefinition`, or make a copy from cache.\n   * @param icon\n   * @param twoToneColor\n   */\n  protected _loadSVGFromCacheOrCreateNew(\n    icon: IconDefinition,\n    twoToneColor?: string\n  ): SVGElement {\n    let svg: SVGElement;\n\n    const pri = twoToneColor || this._twoToneColorPalette.primaryColor;\n    const sec =\n      getSecondaryColor(pri) || this._twoToneColorPalette.secondaryColor;\n    const key =\n      icon.theme === 'twotone'\n        ? withSuffixAndColor(icon.name, icon.theme, pri, sec)\n        : icon.theme === undefined\n        ? icon.name\n        : withSuffix(icon.name, icon.theme);\n\n    // Try to make a copy from cache.\n    const cached = this._svgRenderedDefinitions.get(key);\n\n    if (cached) {\n      svg = cached.icon;\n    } else {\n      svg = this._setSVGAttribute(\n        this._colorizeSVGIcon(\n          // Icons provided by ant design should be refined to remove preset colors.\n          this._createSVGElementFromString(\n            hasNamespace(icon.name) ? icon.icon : replaceFillColor(icon.icon)\n          ),\n          icon.theme === 'twotone',\n          pri,\n          sec\n        )\n      );\n      // Cache it.\n      this._svgRenderedDefinitions.set(key, {\n        ...icon,\n        icon: svg\n      } as CachedIconDefinition);\n    }\n\n    return cloneSVG(svg);\n  }\n\n  protected _createSVGElementFromString(str: string): SVGElement {\n    const div = this._document.createElement('div');\n    div.innerHTML = str;\n    const svg: SVGElement = div.querySelector('svg');\n    if (!svg) {\n      throw SVGTagNotFoundError;\n    }\n    return svg;\n  }\n\n  protected _setSVGAttribute(svg: SVGElement): SVGElement {\n    this._renderer.setAttribute(svg, 'width', '1em');\n    this._renderer.setAttribute(svg, 'height', '1em');\n    return svg;\n  }\n\n  protected _colorizeSVGIcon(\n    svg: SVGElement,\n    twotone: boolean,\n    pri: string,\n    sec: string\n  ): SVGElement {\n    if (twotone) {\n      const children = svg.childNodes;\n      const length = children.length;\n      for (let i = 0; i < length; i++) {\n        const child: HTMLElement = children[i] as HTMLElement;\n        if (child.getAttribute('fill') === 'secondaryColor') {\n          this._renderer.setAttribute(child, 'fill', sec);\n        } else {\n          this._renderer.setAttribute(child, 'fill', pri);\n        }\n      }\n    }\n    this._renderer.setAttribute(svg, 'fill', 'currentColor');\n    return svg;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { IconDefinition, ThemeType } from '../types';\nimport { alreadyHasAThemeSuffix, getNameAndNamespace, isIconDefinition, warn, withSuffix } from '../utils';\nimport { IconService } from './icon.service';\n\ninterface RenderMeta {\n  type: string | IconDefinition;\n  theme: ThemeType;\n  twoToneColor: string;\n}\n\nfunction checkMeta(prev: RenderMeta, after: RenderMeta): boolean {\n  return prev.type === after.type && prev.theme === after.theme && prev.twoToneColor === after.twoToneColor;\n}\n\n@Directive({\n  selector: '[antIcon]'\n})\nexport class IconDirective implements OnChanges {\n  @Input() type: string | IconDefinition;\n  @Input() theme: ThemeType;\n  @Input() twoToneColor: string;\n\n  constructor(protected _iconService: IconService, protected _elementRef: ElementRef, protected _renderer: Renderer2) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.type || changes.theme || changes.twoToneColor) {\n      this._changeIcon();\n    }\n  }\n\n  /**\n   * Render a new icon in the current element. Remove the icon when `type` is falsy.\n   */\n  protected _changeIcon(): Promise<SVGElement | null> {\n    return new Promise<SVGElement | null>(resolve => {\n      if (!this.type) {\n        this._clearSVGElement();\n        resolve(null);\n      } else {\n        const preMeta = this._getSelfRenderMeta();\n        this._iconService.getRenderedContent(\n          this._parseIconType(this.type, this.theme),\n          this.twoToneColor\n        ).subscribe(svg => {\n          // avoid race condition, see https://github.com/ant-design/ant-design-icons/issues/315\n          if (checkMeta(preMeta, this._getSelfRenderMeta())) {\n            this._setSVGElement(svg);\n            resolve(svg);\n          } else {\n            resolve(null);\n          }\n        });\n      }\n    });\n  }\n\n  protected _getSelfRenderMeta(): RenderMeta {\n    return {\n      type: this.type,\n      theme: this.theme,\n      twoToneColor: this.twoToneColor\n    };\n  }\n\n  /**\n   * Parse a icon to the standard form, an `IconDefinition` or a string like 'account-book-fill` (with a theme suffixed).\n   * If namespace is specified, ignore theme because it meaningless for users' icons.\n   *\n   * @param type\n   * @param theme\n   */\n  protected _parseIconType(type: string | IconDefinition, theme: ThemeType): IconDefinition | string {\n    if (isIconDefinition(type)) {\n      return type;\n    } else {\n      const [ name, namespace ] = getNameAndNamespace(type);\n      if (namespace) {\n        return type;\n      }\n      if (alreadyHasAThemeSuffix(name)) {\n        if (!!theme) {\n          warn(`'type' ${name} already gets a theme inside so 'theme' ${theme} would be ignored`);\n        }\n        return name;\n      } else {\n        return withSuffix(name, theme || this._iconService.defaultTheme);\n      }\n    }\n  }\n\n  protected _setSVGElement(svg: SVGElement): void {\n    this._clearSVGElement();\n    this._renderer.appendChild(this._elementRef.nativeElement, svg);\n  }\n\n  protected _clearSVGElement(): void {\n    const el: HTMLElement = this._elementRef.nativeElement;\n    const children = el.childNodes;\n    const length = children.length;\n    for (let i = length - 1; i >= 0; i--) {\n      const child = children[ i ] as any;\n      if (child.tagName?.toLowerCase() === 'svg') {\n        this._renderer.removeChild(el, child);\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconDirective } from './icon.directive';\nimport { IconService } from './icon.service';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [IconDirective],\n  declarations: [IconDirective],\n  providers: [IconService]\n})\nexport class IconModule { }\n","\nimport { Manifest } from './types';\n\nexport const manifest: Manifest = {\n  fill: [\n    'account-book', 'alipay-circle', 'alipay-square', 'aliwangwang', 'amazon-circle', 'alert', 'amazon-square', 'api', 'android', 'apple', 'appstore', 'audio', 'backward', 'bank', 'behance-square', 'bell', 'book', 'bug', 'build', 'bulb', 'behance-circle', 'calculator', 'camera', 'car', 'caret-down', 'caret-left', 'carry-out', 'caret-up', 'ci-circle', 'check-circle', 'caret-right', 'clock-circle', 'check-square', 'close-circle', 'close-square', 'chrome', 'calendar', 'code-sandbox-circle', 'code', 'code-sandbox-square', 'codepen-circle', 'codepen-square', 'compass', 'cloud', 'control', 'copy', 'contacts', 'credit-card', 'crown', 'copyright-circle', 'dashboard', 'container', 'delete', 'diff', 'dingtalk-square', 'database', 'dislike', 'customer-service', 'dollar-circle', 'dingtalk-circle', 'down-circle', 'down-square', 'dribbble-square', 'dribbble-circle', 'dropbox-circle', 'euro-circle', 'environment', 'dropbox-square', 'edit', 'exclamation-circle', 'eye', 'experiment', 'eye-invisible', 'fast-backward', 'facebook', 'fast-forward', 'file-add', 'file-excel', 'file-exclamation', 'file-image', 'file', 'file-text', 'file-pdf', 'file-ppt', 'file-markdown', 'file-word', 'file-zip', 'fire', 'filter', 'flag', 'folder', 'folder-open', 'folder-add', 'forward', 'frown', 'format-painter', 'funnel-plot', 'fund', 'github', 'gold', 'gift', 'gitlab', 'golden', 'google-square', 'google-circle', 'google-plus-square', 'google-plus-circle', 'highlight', 'box-plot', 'heart', 'html5', 'idcard', 'hdd', 'hourglass', 'ie-circle', 'home', 'info-circle', 'ie-square', 'instagram', 'interaction', 'insurance', 'layout', 'left-square', 'left-circle', 'linkedin', 'lock', 'like', 'mac-command', 'medium-circle', 'medium-square', 'medicine-box', 'message', 'meh', 'mail', 'mobile', 'money-collect', 'minus-circle', 'pause-circle', 'phone', 'pay-circle', 'play-circle', 'plus-circle', 'notification', 'plus-square', 'pound-circle', 'printer', 'project', 'profile', 'property-safety', 'picture', 'qq-circle', 'play-square', 'question-circle', 'pushpin', 'qq-square', 'red-envelope', 'reconciliation', 'reddit-circle', 'read', 'reddit-square', 'pie-chart', 'right-square', 'right-circle', 'rocket', 'safety-certificate', 'schedule', 'save', 'minus-square', 'robot', 'security-scan', 'setting', 'shop', 'rest', 'shopping', 'signal', 'sketch-circle', 'skin', 'sketch-square', 'skype', 'smile', 'snippets', 'sound', 'step-backward', 'star', 'stop', 'switcher', 'tag', 'tags', 'step-forward', 'tablet', 'taobao-circle', 'sliders', 'tool', 'taobao-square', 'trademark-circle', 'thunderbolt', 'twitter-square', 'trophy', 'twitter-circle', 'unlock', 'up-circle', 'slack-square', 'slack-circle', 'usb', 'video-camera', 'warning', 'wallet', 'weibo-circle', 'weibo-square', 'yahoo', 'windows', 'wechat', 'zhihu-square', 'youtube', 'zhihu-circle', 'yuque', 'up-square', 'file-unknown'\n  ],\n  outline: [\n    'account-book', 'align-center', 'aim', 'aliyun', 'aliwangwang', 'android', 'ant-cloud', 'amazon', 'ant-design', 'api', 'appstore-add', 'appstore', 'apple', 'area-chart', 'arrow-down', 'arrow-right', 'arrow-left', 'alipay-circle', 'arrows-alt', 'audio', 'audit', 'backward', 'arrow-up', 'align-left', 'bank', 'apartment', 'bar-chart', 'alipay', 'barcode', 'behance', 'alert', 'bg-colors', 'audio-muted', 'border-bottom', 'bold', 'border-horizontal', 'border-inner', 'alibaba', 'block', 'bars', 'border-left', 'borderless-table', 'border', 'box-plot', 'border-verticle', 'border-outer', 'bug', 'book', 'border-right', 'bulb', 'calendar', 'calculator', 'camera', 'branches', 'bell', 'car', 'caret-right', 'caret-up', 'caret-down', 'behance-square', 'border-top', 'carry-out', 'caret-left', 'chrome', 'clear', 'check', 'ci', 'clock-circle', 'check-square', 'check-circle', 'ci-circle', 'close-square', 'close', 'cloud-sync', 'code-sandbox', 'code', 'cluster', 'cloud-server', 'codepen', 'codepen-circle', 'cloud-download', 'column-height', 'column-width', 'comment', 'close-circle', 'compass', 'compress', 'cloud', 'coffee', 'container', 'contacts', 'control', 'build', 'copy', 'copyright', 'copyright-circle', 'credit-card', 'customer-service', 'dashboard', 'database', 'delete', 'delete-column', 'delete-row', 'delivered-procedure', 'dingding', 'deployment-unit', 'crown', 'diff', 'dislike', 'dingtalk', 'dollar', 'cloud-upload', 'disconnect', 'down-circle', 'down', 'double-left', 'drag', 'dot-chart', 'dash', 'dropbox', 'dribbble-square', 'down-square', 'edit', 'desktop', 'dribbble', 'download', 'ellipsis', 'euro', 'euro-circle', 'enter', 'exception', 'double-right', 'exclamation-circle', 'export', 'expand', 'experiment', 'eye-invisible', 'fall', 'environment', 'fast-forward', 'facebook', 'eye', 'expand-alt', 'fast-backward', 'field-time', 'file-add', 'file-done', 'file-excel', 'field-number', 'field-binary', 'field-string', 'file', 'file-image', 'file-markdown', 'file-gif', 'exclamation', 'file-pdf', 'file-exclamation', 'file-jpg', 'file-ppt', 'file-text', 'file-unknown', 'file-protect', 'file-word', 'file-search', 'file-sync', 'filter', 'folder-add', 'flag', 'folder-open', 'folder', 'fork', 'form', 'folder-view', 'fire', 'font-size', 'font-colors', 'frown', 'forward', 'fullscreen-exit', 'format-painter', 'fund', 'dollar-circle', 'file-zip', 'gif', 'gateway', 'gift', 'fund-projection-screen', 'funnel-plot', 'gitlab', 'global', 'github', 'gold', 'group', 'fullscreen', 'google', 'google-plus', 'heart', 'align-right', 'fund-view', 'function', 'heat-map', 'history', 'home', 'html5', 'hourglass', 'hdd', 'idcard', 'inbox', 'info-circle', 'import', 'insert-row-left', 'info', 'insert-row-right', 'insert-row-above', 'instagram', 'insurance', 'insert-row-below', 'issues-close', 'laptop', 'italic', 'key', 'interaction', 'left-circle', 'layout', 'ie', 'left', 'left-square', 'like', 'line-chart', 'loading', 'line-height', 'lock', 'login', 'highlight', 'mail', 'line', 'man', 'medium', 'medicine-box', 'logout', 'meh', 'linkedin', 'mac-command', 'menu-fold', 'message', 'link', 'minus-circle', 'loading-3-quarters', 'minus-square', 'minus', 'menu', 'merge-cells', 'menu-unfold', 'money-collect', 'notification', 'node-expand', 'node-index', 'more', 'monitor', 'partition', 'pause-circle', 'ordered-list', 'node-collapse', 'percentage', 'paper-clip', 'pause', 'pic-center', 'pay-circle', 'phone', 'medium-workmark', 'one-to-one', 'mobile', 'picture', 'play-circle', 'pic-right', 'pie-chart', 'number', 'play-square', 'plus-circle', 'plus-square', 'pic-left', 'pound-circle', 'poweroff', 'pound', 'profile', 'printer', 'plus', 'property-safety', 'project', 'pull-request', 'pushpin', 'qq', 'question-circle', 'qrcode', 'question', 'radar-chart', 'radius-setting', 'radius-bottomright', 'radius-bottomleft', 'radius-upright', 'radius-upleft', 'red-envelope', 'reddit', 'reconciliation', 'read', 'reload', 'right-circle', 'right', 'retweet', 'right-square', 'rise', 'rocket', 'rollback', 'redo', 'rotate-right', 'save', 'safety-certificate', 'rotate-left', 'safety', 'schedule', 'rest', 'select', 'scan', 'send', 'security-scan', 'scissor', 'setting', 'search', 'shopping-cart', 'shopping', 'robot', 'share-alt', 'shake', 'shrink', 'sisternode', 'skin', 'sketch', 'smile', 'slack-square', 'sliders', 'shop', 'skype', 'small-dash', 'sort-descending', 'solution', 'sound', 'split-cells', 'sort-ascending', 'star', 'step-forward', 'step-backward', 'stop', 'strikethrough', 'stock', 'subnode', 'switcher', 'swap', 'swap-left', 'swap-right', 'sync', 'snippets', 'tablet', 'table', 'tag', 'taobao-circle', 'tags', 'taobao', 'console-sql', 'to-top', 'tool', 'trademark-circle', 'trademark', 'thunderbolt', 'transaction', 'team', 'translation', 'ungroup', 'underline', 'trophy', 'up-circle', 'unordered-list', 'twitter', 'up-square', 'slack', 'up', 'usb', 'user-delete', 'undo', 'upload', 'user-switch', 'user', 'user-add', 'vertical-align-bottom', 'vertical-align-middle', 'verified', 'unlock', 'vertical-align-top', 'vertical-right', 'video-camera-add', 'vertical-left', 'warning', 'wallet', 'whats-app', 'wechat', 'weibo-square', 'wifi', 'woman', 'windows', 'weibo', 'zoom-in', 'youtube', 'weibo-circle', 'video-camera', 'usergroup-delete', 'zhihu', 'yahoo', 'zoom-out', 'yuque', 'usergroup-add'\n  ],\n  twotone: [\n    'api', 'appstore', 'account-book', 'audio', 'book', 'alert', 'bell', 'bug', 'bulb', 'calculator', 'camera', 'calendar', 'box-plot', 'car', 'carry-out', 'check-square', 'ci-circle', 'check-circle', 'ci', 'clock-circle', 'cloud', 'close-circle', 'close-square', 'compass', 'contacts', 'container', 'control', 'copy', 'copyright', 'crown', 'copyright-circle', 'customer-service', 'dashboard', 'database', 'code', 'diff', 'delete', 'credit-card', 'bank', 'dislike', 'dollar', 'dollar-circle', 'down-circle', 'down-square', 'edit', 'euro-circle', 'environment', 'euro', 'experiment', 'eye-invisible', 'exclamation-circle', 'eye', 'file-add', 'file-image', 'file-excel', 'file-exclamation', 'file-markdown', 'file-pdf', 'file-word', 'file-ppt', 'file-unknown', 'fire', 'file-text', 'folder-open', 'file', 'filter', 'file-zip', 'folder', 'folder-add', 'flag', 'frown', 'fund', 'gold', 'gift', 'funnel-plot', 'heart', 'highlight', 'hdd', 'hourglass', 'html5', 'idcard', 'info-circle', 'insurance', 'interaction', 'left-circle', 'like', 'layout', 'left-square', 'home', 'medicine-box', 'message', 'meh', 'minus-circle', 'minus-square', 'mobile', 'mail', 'money-collect', 'notification', 'pause-circle', 'pie-chart', 'picture', 'play-circle', 'plus-square', 'plus-circle', 'pound-circle', 'play-square', 'printer', 'profile', 'phone', 'pushpin', 'project', 'question-circle', 'property-safety', 'reconciliation', 'red-envelope', 'lock', 'rest', 'right-circle', 'right-square', 'safety-certificate', 'save', 'schedule', 'security-scan', 'setting', 'shop', 'rocket', 'skin', 'sliders', 'shopping', 'snippets', 'smile', 'sound', 'star', 'stop', 'tablet', 'switcher', 'tag', 'thunderbolt', 'trophy', 'tool', 'trademark-circle', 'up-circle', 'usb', 'up-square', 'unlock', 'wallet', 'video-camera', 'warning', 'build', 'tags'\n  ]\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}