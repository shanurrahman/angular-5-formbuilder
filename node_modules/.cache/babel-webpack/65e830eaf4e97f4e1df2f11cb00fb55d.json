{"ast":null,"code":"import _slicedToArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Overlay, OverlayModule, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { EventEmitter, Directive, ElementRef, Renderer2, ViewContainerRef, Input, Output, NgModule, Host, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild, TemplateRef, ɵɵdefineInjectable, ɵɵinject, Injectable } from '@angular/core';\nimport { POSITION_MAP, NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject, BehaviorSubject, merge, fromEvent, EMPTY, combineLatest, Subscription } from 'rxjs';\nimport { mapTo, switchMap, filter, map, auditTime, distinctUntilChanged, takeUntil, take } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NzButtonGroupComponent, NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { MenuService, NzIsMenuInsideDropDownToken, NzMenuModule } from 'ng-zorro-antd/menu';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from 'ng-zorro-antd/button';\nimport * as ɵngcc4 from 'ng-zorro-antd/menu';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc6 from '@angular/common';\n\nfunction NzDropdownMenuComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NzDropdownMenuComponent_ng_template_0_Template_div_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.setMouseState(true);\n    })(\"mouseleave\", function NzDropdownMenuComponent_ng_template_0_Template_div_mouseleave_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.setMouseState(false);\n    });\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.nzOverlayClassName)(\"ngStyle\", ctx_r0.nzOverlayStyle)(\"@slideMotion\", \"enter\")(\"@.disabled\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation);\n  }\n}\n\nvar _c0 = [\"*\"];\nvar listOfPositions = [POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight, POSITION_MAP.topRight, POSITION_MAP.topLeft];\n\nvar NzDropDownDirective = /*#__PURE__*/function () {\n  function NzDropDownDirective(elementRef, overlay, renderer, viewContainerRef, platform) {\n    _classCallCheck(this, NzDropDownDirective);\n\n    this.elementRef = elementRef;\n    this.overlay = overlay;\n    this.renderer = renderer;\n    this.viewContainerRef = viewContainerRef;\n    this.platform = platform;\n    this.overlayRef = null;\n    this.destroy$ = new Subject();\n    this.positionStrategy = this.overlay.position().flexibleConnectedTo(this.elementRef.nativeElement).withLockedPosition().withTransformOriginOn('.ant-dropdown');\n    this.inputVisible$ = new BehaviorSubject(false);\n    this.nzTrigger$ = new BehaviorSubject('hover');\n    this.overlayClose$ = new Subject();\n    this.nzDropdownMenu = null;\n    this.nzTrigger = 'hover';\n    this.nzMatchWidthElement = null;\n    this.nzBackdrop = true;\n    this.nzClickHide = true;\n    this.nzDisabled = false;\n    this.nzVisible = false;\n    this.nzOverlayClassName = '';\n    this.nzOverlayStyle = {};\n    this.nzPlacement = 'bottomLeft';\n    this.nzVisibleChange = new EventEmitter();\n  }\n\n  _createClass(NzDropDownDirective, [{\n    key: \"setDropdownMenuValue\",\n    value: function setDropdownMenuValue(key, value) {\n      if (this.nzDropdownMenu) {\n        this.nzDropdownMenu.setValue(key, value);\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {}\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      if (this.nzDropdownMenu) {\n        var nativeElement = this.elementRef.nativeElement;\n        /** host mouse state **/\n\n        var hostMouseState$ = merge(fromEvent(nativeElement, 'mouseenter').pipe(mapTo(true)), fromEvent(nativeElement, 'mouseleave').pipe(mapTo(false)));\n        /** menu mouse state **/\n\n        var menuMouseState$ = this.nzDropdownMenu.mouseState$;\n        /** merged mouse state **/\n\n        var mergedMouseState$ = merge(menuMouseState$, hostMouseState$);\n        /** host click state **/\n\n        var hostClickState$ = fromEvent(nativeElement, 'click').pipe(mapTo(true));\n        /** visible state switch by nzTrigger **/\n\n        var visibleStateByTrigger$ = this.nzTrigger$.pipe(switchMap(function (trigger) {\n          if (trigger === 'hover') {\n            return mergedMouseState$;\n          } else if (trigger === 'click') {\n            return hostClickState$;\n          } else {\n            return EMPTY;\n          }\n        }));\n        var descendantMenuItemClick$ = this.nzDropdownMenu.descendantMenuItemClick$.pipe(filter(function () {\n          return _this.nzClickHide;\n        }), mapTo(false));\n        var domTriggerVisible$ = merge(visibleStateByTrigger$, descendantMenuItemClick$, this.overlayClose$).pipe(filter(function () {\n          return !_this.nzDisabled;\n        }));\n        var visible$ = merge(this.inputVisible$, domTriggerVisible$);\n        combineLatest([visible$, this.nzDropdownMenu.isChildSubMenuOpen$]).pipe(map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              visible = _ref2[0],\n              sub = _ref2[1];\n\n          return visible || sub;\n        }), auditTime(150), distinctUntilChanged(), filter(function () {\n          return _this.platform.isBrowser;\n        }), takeUntil(this.destroy$)).subscribe(function (visible) {\n          var element = _this.nzMatchWidthElement ? _this.nzMatchWidthElement.nativeElement : nativeElement;\n          var triggerWidth = element.getBoundingClientRect().width;\n\n          if (_this.nzVisible !== visible) {\n            _this.nzVisibleChange.emit(visible);\n          }\n\n          _this.nzVisible = visible;\n\n          if (visible) {\n            /** set up overlayRef **/\n            if (!_this.overlayRef) {\n              /** new overlay **/\n              _this.overlayRef = _this.overlay.create({\n                positionStrategy: _this.positionStrategy,\n                minWidth: triggerWidth,\n                disposeOnNavigation: true,\n                hasBackdrop: _this.nzTrigger === 'click',\n                backdropClass: _this.nzBackdrop ? undefined : 'nz-overlay-transparent-backdrop',\n                scrollStrategy: _this.overlay.scrollStrategies.reposition()\n              });\n              merge(_this.overlayRef.backdropClick(), _this.overlayRef.detachments(), _this.overlayRef.keydownEvents().pipe(filter(function (e) {\n                return e.keyCode === ESCAPE && !hasModifierKey(e);\n              }))).pipe(mapTo(false), takeUntil(_this.destroy$)).subscribe(_this.overlayClose$);\n            } else {\n              /** update overlay config **/\n              var overlayConfig = _this.overlayRef.getConfig();\n\n              overlayConfig.minWidth = triggerWidth;\n              overlayConfig.hasBackdrop = _this.nzTrigger === 'click';\n            }\n            /** open dropdown with animation **/\n\n\n            _this.positionStrategy.withPositions([POSITION_MAP[_this.nzPlacement]].concat(listOfPositions));\n            /** reset portal if needed **/\n\n\n            if (!_this.portal || _this.portal.templateRef !== _this.nzDropdownMenu.templateRef) {\n              _this.portal = new TemplatePortal(_this.nzDropdownMenu.templateRef, _this.viewContainerRef);\n            }\n\n            _this.overlayRef.attach(_this.portal);\n          } else {\n            /** detach overlayRef if needed **/\n            if (_this.overlayRef) {\n              _this.overlayRef.detach();\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n\n      if (this.overlayRef) {\n        this.overlayRef.dispose();\n        this.overlayRef = null;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzVisible = changes.nzVisible,\n          nzDisabled = changes.nzDisabled,\n          nzOverlayClassName = changes.nzOverlayClassName,\n          nzOverlayStyle = changes.nzOverlayStyle,\n          nzTrigger = changes.nzTrigger;\n\n      if (nzTrigger) {\n        this.nzTrigger$.next(this.nzTrigger);\n      }\n\n      if (nzVisible) {\n        this.inputVisible$.next(this.nzVisible);\n      }\n\n      if (nzDisabled) {\n        var nativeElement = this.elementRef.nativeElement;\n\n        if (this.nzDisabled) {\n          this.renderer.setAttribute(nativeElement, 'disabled', '');\n          this.inputVisible$.next(false);\n        } else {\n          this.renderer.removeAttribute(nativeElement, 'disabled');\n        }\n      }\n\n      if (nzOverlayClassName) {\n        this.setDropdownMenuValue('nzOverlayClassName', this.nzOverlayClassName);\n      }\n\n      if (nzOverlayStyle) {\n        this.setDropdownMenuValue('nzOverlayStyle', this.nzOverlayStyle);\n      }\n    }\n  }]);\n\n  return NzDropDownDirective;\n}();\n\nNzDropDownDirective.ɵfac = function NzDropDownDirective_Factory(t) {\n  return new (t || NzDropDownDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform));\n};\n\nNzDropDownDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzDropDownDirective,\n  selectors: [[\"\", \"nz-dropdown\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzDropDownDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-dropdown-trigger\", true);\n    }\n  },\n  inputs: {\n    nzDropdownMenu: \"nzDropdownMenu\",\n    nzTrigger: \"nzTrigger\",\n    nzMatchWidthElement: \"nzMatchWidthElement\",\n    nzBackdrop: \"nzBackdrop\",\n    nzClickHide: \"nzClickHide\",\n    nzDisabled: \"nzDisabled\",\n    nzVisible: \"nzVisible\",\n    nzOverlayClassName: \"nzOverlayClassName\",\n    nzOverlayStyle: \"nzOverlayStyle\",\n    nzPlacement: \"nzPlacement\"\n  },\n  outputs: {\n    nzVisibleChange: \"nzVisibleChange\"\n  },\n  exportAs: [\"nzDropdown\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNzDropDownDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Overlay\n  }, {\n    type: Renderer2\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: Platform\n  }];\n};\n\nNzDropDownDirective.propDecorators = {\n  nzDropdownMenu: [{\n    type: Input\n  }],\n  nzTrigger: [{\n    type: Input\n  }],\n  nzMatchWidthElement: [{\n    type: Input\n  }],\n  nzBackdrop: [{\n    type: Input\n  }],\n  nzClickHide: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzVisible: [{\n    type: Input\n  }],\n  nzOverlayClassName: [{\n    type: Input\n  }],\n  nzOverlayStyle: [{\n    type: Input\n  }],\n  nzPlacement: [{\n    type: Input\n  }],\n  nzVisibleChange: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzDropDownDirective.prototype, \"nzBackdrop\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzDropDownDirective.prototype, \"nzClickHide\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzDropDownDirective.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzDropDownDirective.prototype, \"nzVisible\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDropDownDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-dropdown]',\n      exportAs: 'nzDropdown',\n      host: {\n        '[class.ant-dropdown-trigger]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.Overlay\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc2.Platform\n    }];\n  }, {\n    nzDropdownMenu: [{\n      type: Input\n    }],\n    nzTrigger: [{\n      type: Input\n    }],\n    nzMatchWidthElement: [{\n      type: Input\n    }],\n    nzBackdrop: [{\n      type: Input\n    }],\n    nzClickHide: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzVisible: [{\n      type: Input\n    }],\n    nzOverlayClassName: [{\n      type: Input\n    }],\n    nzOverlayStyle: [{\n      type: Input\n    }],\n    nzPlacement: [{\n      type: Input\n    }],\n    nzVisibleChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzContextMenuServiceModule = function NzContextMenuServiceModule() {\n  _classCallCheck(this, NzContextMenuServiceModule);\n};\n\nNzContextMenuServiceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzContextMenuServiceModule\n});\nNzContextMenuServiceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzContextMenuServiceModule_Factory(t) {\n    return new (t || NzContextMenuServiceModule)();\n  }\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzContextMenuServiceModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzDropDownADirective = function NzDropDownADirective() {\n  _classCallCheck(this, NzDropDownADirective);\n};\n\nNzDropDownADirective.ɵfac = function NzDropDownADirective_Factory(t) {\n  return new (t || NzDropDownADirective)();\n};\n\nNzDropDownADirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzDropDownADirective,\n  selectors: [[\"a\", \"nz-dropdown\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzDropDownADirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-dropdown-link\", true);\n    }\n  }\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDropDownADirective, [{\n    type: Directive,\n    args: [{\n      selector: 'a[nz-dropdown]',\n      host: {\n        '[class.ant-dropdown-link]': 'true'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzDropdownButtonDirective = /*#__PURE__*/function () {\n  function NzDropdownButtonDirective(renderer, nzButtonGroupComponent, elementRef) {\n    _classCallCheck(this, NzDropdownButtonDirective);\n\n    this.renderer = renderer;\n    this.nzButtonGroupComponent = nzButtonGroupComponent;\n    this.elementRef = elementRef;\n  }\n\n  _createClass(NzDropdownButtonDirective, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var parentElement = this.renderer.parentNode(this.elementRef.nativeElement);\n\n      if (this.nzButtonGroupComponent && parentElement) {\n        this.renderer.addClass(parentElement, 'ant-dropdown-button');\n      }\n    }\n  }]);\n\n  return NzDropdownButtonDirective;\n}();\n\nNzDropdownButtonDirective.ɵfac = function NzDropdownButtonDirective_Factory(t) {\n  return new (t || NzDropdownButtonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NzButtonGroupComponent, 9), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNzDropdownButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzDropdownButtonDirective,\n  selectors: [[\"\", \"nz-button\", \"\", \"nz-dropdown\", \"\"]]\n});\n\nNzDropdownButtonDirective.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: NzButtonGroupComponent,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDropdownButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-button][nz-dropdown]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc3.NzButtonGroupComponent,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzDropdownMenuComponent = /*#__PURE__*/function () {\n  function NzDropdownMenuComponent(cdr, elementRef, renderer, viewContainerRef, nzMenuService, noAnimation) {\n    _classCallCheck(this, NzDropdownMenuComponent);\n\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.viewContainerRef = viewContainerRef;\n    this.nzMenuService = nzMenuService;\n    this.noAnimation = noAnimation;\n    this.mouseState$ = new BehaviorSubject(false);\n    this.isChildSubMenuOpen$ = this.nzMenuService.isChildSubMenuOpen$;\n    this.descendantMenuItemClick$ = this.nzMenuService.descendantMenuItemClick$;\n    this.nzOverlayClassName = '';\n    this.nzOverlayStyle = {};\n  }\n\n  _createClass(NzDropdownMenuComponent, [{\n    key: \"setMouseState\",\n    value: function setMouseState(visible) {\n      this.mouseState$.next(visible);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(key, value) {\n      this[key] = value;\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n    }\n  }]);\n\n  return NzDropdownMenuComponent;\n}();\n\nNzDropdownMenuComponent.ɵfac = function NzDropdownMenuComponent_Factory(t) {\n  return new (t || NzDropdownMenuComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.MenuService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.NzNoAnimationDirective, 9));\n};\n\nNzDropdownMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzDropdownMenuComponent,\n  selectors: [[\"nz-dropdown-menu\"]],\n  viewQuery: function NzDropdownMenuComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    }\n  },\n  exportAs: [\"nzDropdownMenu\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MenuService,\n  /** menu is inside dropdown-menu component **/\n  {\n    provide: NzIsMenuInsideDropDownToken,\n    useValue: true\n  }])],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"ant-dropdown\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\", \"mouseenter\", \"mouseleave\"]],\n  template: function NzDropdownMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzDropdownMenuComponent_ng_template_0_Template, 2, 5, \"ng-template\");\n    }\n  },\n  directives: [ɵngcc6.NgClass, ɵngcc6.NgStyle, ɵngcc5.NzNoAnimationDirective],\n  encapsulation: 2,\n  data: {\n    animation: [slideMotion]\n  },\n  changeDetection: 0\n});\n\nNzDropdownMenuComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: MenuService\n  }, {\n    type: NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nNzDropdownMenuComponent.propDecorators = {\n  templateRef: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: true\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDropdownMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: \"nz-dropdown-menu\",\n      exportAs: \"nzDropdownMenu\",\n      animations: [slideMotion],\n      providers: [MenuService,\n      /** menu is inside dropdown-menu component **/\n      {\n        provide: NzIsMenuInsideDropDownToken,\n        useValue: true\n      }],\n      template: \"\\n    <ng-template>\\n      <div\\n        class=\\\"ant-dropdown\\\"\\n        [ngClass]=\\\"nzOverlayClassName\\\"\\n        [ngStyle]=\\\"nzOverlayStyle\\\"\\n        [@slideMotion]=\\\"'enter'\\\"\\n        [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n        (mouseenter)=\\\"setMouseState(true)\\\"\\n        (mouseleave)=\\\"setMouseState(false)\\\"\\n      >\\n        <ng-content></ng-content>\\n      </div>\\n    </ng-template>\\n  \",\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc4.MenuService\n    }, {\n      type: ɵngcc5.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzDropDownModule = function NzDropDownModule() {\n  _classCallCheck(this, NzDropDownModule);\n};\n\nNzDropDownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzDropDownModule\n});\nNzDropDownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzDropDownModule_Factory(t) {\n    return new (t || NzDropDownModule)();\n  },\n  imports: [[CommonModule, OverlayModule, FormsModule, NzButtonModule, NzMenuModule, NzIconModule, NzNoAnimationModule, PlatformModule, NzOverlayModule, NzContextMenuServiceModule, NzOutletModule], NzMenuModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzDropDownModule, {\n    declarations: function declarations() {\n      return [NzDropDownDirective, NzDropDownADirective, NzDropdownMenuComponent, NzDropdownButtonDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, FormsModule, NzButtonModule, NzMenuModule, NzIconModule, NzNoAnimationModule, PlatformModule, NzOverlayModule, NzContextMenuServiceModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzMenuModule, NzDropDownDirective, NzDropDownADirective, NzDropdownMenuComponent, NzDropdownButtonDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDropDownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, FormsModule, NzButtonModule, NzMenuModule, NzIconModule, NzNoAnimationModule, PlatformModule, NzOverlayModule, NzContextMenuServiceModule, NzOutletModule],\n      entryComponents: [NzDropdownMenuComponent],\n      declarations: [NzDropDownDirective, NzDropDownADirective, NzDropdownMenuComponent, NzDropdownButtonDirective],\n      exports: [NzMenuModule, NzDropDownDirective, NzDropDownADirective, NzDropdownMenuComponent, NzDropdownButtonDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar listOfPositions$1 = [new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'top'\n}, {\n  overlayX: 'start',\n  overlayY: 'top'\n}), new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'top'\n}, {\n  overlayX: 'start',\n  overlayY: 'bottom'\n}), new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'top'\n}, {\n  overlayX: 'end',\n  overlayY: 'bottom'\n}), new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'top'\n}, {\n  overlayX: 'end',\n  overlayY: 'top'\n})];\n\nvar NzContextMenuService = /*#__PURE__*/function () {\n  function NzContextMenuService(overlay) {\n    _classCallCheck(this, NzContextMenuService);\n\n    this.overlay = overlay;\n    this.overlayRef = null;\n    this.closeSubscription = Subscription.EMPTY;\n  }\n\n  _createClass(NzContextMenuService, [{\n    key: \"create\",\n    value: function create($event, nzDropdownMenuComponent) {\n      var _this2 = this;\n\n      this.close(true);\n      var x = $event.x,\n          y = $event.y;\n\n      if ($event instanceof MouseEvent) {\n        $event.preventDefault();\n      }\n\n      var positionStrategy = this.overlay.position().flexibleConnectedTo({\n        x: x,\n        y: y\n      }).withPositions(listOfPositions$1).withTransformOriginOn('.ant-dropdown');\n      this.overlayRef = this.overlay.create({\n        positionStrategy: positionStrategy,\n        disposeOnNavigation: true,\n        scrollStrategy: this.overlay.scrollStrategies.close()\n      });\n      this.closeSubscription = merge(nzDropdownMenuComponent.descendantMenuItemClick$, fromEvent(document, 'click').pipe(filter(function (event) {\n        return !!_this2.overlayRef && !_this2.overlayRef.overlayElement.contains(event.target);\n      }),\n      /** handle firefox contextmenu event **/\n      filter(function (event) {\n        return event.button !== 2;\n      }), take(1))).subscribe(function () {\n        _this2.close();\n      });\n      this.overlayRef.attach(new TemplatePortal(nzDropdownMenuComponent.templateRef, nzDropdownMenuComponent.viewContainerRef));\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var clear = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.overlayRef) {\n        this.overlayRef.detach();\n\n        if (clear) {\n          this.overlayRef.dispose();\n        }\n\n        this.overlayRef = null;\n        this.closeSubscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return NzContextMenuService;\n}();\n\nNzContextMenuService.ɵfac = function NzContextMenuService_Factory(t) {\n  return new (t || NzContextMenuService)(ɵngcc0.ɵɵinject(ɵngcc1.Overlay));\n};\n\nNzContextMenuService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzContextMenuService_Factory() {\n    return new NzContextMenuService(ɵɵinject(Overlay));\n  },\n  token: NzContextMenuService,\n  providedIn: NzContextMenuServiceModule\n});\n\nNzContextMenuService.ctorParameters = function () {\n  return [{\n    type: Overlay\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzContextMenuService, [{\n    type: Injectable,\n    args: [{\n      providedIn: NzContextMenuServiceModule\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Overlay\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzContextMenuService, NzContextMenuServiceModule, NzDropDownADirective, NzDropDownDirective, NzDropDownModule, NzDropdownButtonDirective, NzDropdownMenuComponent };","map":{"version":3,"sources":["../../components/dropdown/dropdown.directive.ts","../../components/dropdown/context-menu.service.module.ts","../../components/dropdown/dropdown-a.directive.ts","../../components/dropdown/dropdown-button.directive.ts","../../components/dropdown/dropdown-menu.component.ts","../../components/dropdown/dropdown.module.ts","../../components/dropdown/context-menu.service.ts","../../components/dropdown/public-api.ts","../../components/dropdown/ng-zorro-antd-dropdown.ts"],"names":["listOfPositions"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport { POSITION_MAP } from 'ng-zorro-antd/core/overlay';\nimport { BooleanInput, IndexableObject } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { BehaviorSubject, combineLatest, EMPTY, fromEvent, merge, Subject } from 'rxjs';\nimport { auditTime, distinctUntilChanged, filter, map, mapTo, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzDropdownMenuComponent, NzPlacementType } from './dropdown-menu.component';\n\nconst listOfPositions = [POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight, POSITION_MAP.topRight, POSITION_MAP.topLeft];\n\n@Directive({\n  selector: '[nz-dropdown]',\n  exportAs: 'nzDropdown',\n  host: {\n    '[class.ant-dropdown-trigger]': 'true'\n  }\n})\nexport class NzDropDownDirective implements AfterViewInit, OnDestroy, OnChanges, OnInit {\n  static ngAcceptInputType_nzBackdrop: BooleanInput;\n  static ngAcceptInputType_nzClickHide: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzVisible: BooleanInput;\n\n  private portal?: TemplatePortal;\n  private overlayRef: OverlayRef | null = null;\n  private destroy$ = new Subject();\n  private positionStrategy = this.overlay\n    .position()\n    .flexibleConnectedTo(this.elementRef.nativeElement)\n    .withLockedPosition()\n    .withTransformOriginOn('.ant-dropdown');\n  private inputVisible$ = new BehaviorSubject<boolean>(false);\n  private nzTrigger$ = new BehaviorSubject<'click' | 'hover'>('hover');\n  private overlayClose$ = new Subject<boolean>();\n  @Input() nzDropdownMenu: NzDropdownMenuComponent | null = null;\n  @Input() nzTrigger: 'click' | 'hover' = 'hover';\n  @Input() nzMatchWidthElement: ElementRef | null = null;\n  @Input() @InputBoolean() nzBackdrop = true;\n  @Input() @InputBoolean() nzClickHide = true;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzVisible = false;\n  @Input() nzOverlayClassName: string = '';\n  @Input() nzOverlayStyle: IndexableObject = {};\n  @Input() nzPlacement: NzPlacementType = 'bottomLeft';\n  @Output() readonly nzVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n  setDropdownMenuValue<T extends keyof NzDropdownMenuComponent>(key: T, value: NzDropdownMenuComponent[T]): void {\n    if (this.nzDropdownMenu) {\n      this.nzDropdownMenu.setValue(key, value);\n    }\n  }\n\n  constructor(\n    public elementRef: ElementRef,\n    private overlay: Overlay,\n    private renderer: Renderer2,\n    private viewContainerRef: ViewContainerRef,\n    private platform: Platform\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    if (this.nzDropdownMenu) {\n      const nativeElement: HTMLElement = this.elementRef.nativeElement;\n      /** host mouse state **/\n      const hostMouseState$ = merge(\n        fromEvent(nativeElement, 'mouseenter').pipe(mapTo(true)),\n        fromEvent(nativeElement, 'mouseleave').pipe(mapTo(false))\n      );\n      /** menu mouse state **/\n      const menuMouseState$ = this.nzDropdownMenu.mouseState$;\n      /** merged mouse state **/\n      const mergedMouseState$ = merge(menuMouseState$, hostMouseState$);\n      /** host click state **/\n      const hostClickState$ = fromEvent(nativeElement, 'click').pipe(mapTo(true));\n      /** visible state switch by nzTrigger **/\n      const visibleStateByTrigger$ = this.nzTrigger$.pipe(\n        switchMap(trigger => {\n          if (trigger === 'hover') {\n            return mergedMouseState$;\n          } else if (trigger === 'click') {\n            return hostClickState$;\n          } else {\n            return EMPTY;\n          }\n        })\n      );\n      const descendantMenuItemClick$ = this.nzDropdownMenu.descendantMenuItemClick$.pipe(\n        filter(() => this.nzClickHide),\n        mapTo(false)\n      );\n      const domTriggerVisible$ = merge(visibleStateByTrigger$, descendantMenuItemClick$, this.overlayClose$).pipe(\n        filter(() => !this.nzDisabled)\n      );\n      const visible$ = merge(this.inputVisible$, domTriggerVisible$);\n      combineLatest([visible$, this.nzDropdownMenu.isChildSubMenuOpen$])\n        .pipe(\n          map(([visible, sub]) => visible || sub),\n          auditTime(150),\n          distinctUntilChanged(),\n          filter(() => this.platform.isBrowser),\n          takeUntil(this.destroy$)\n        )\n        .subscribe((visible: boolean) => {\n          const element = this.nzMatchWidthElement ? this.nzMatchWidthElement.nativeElement : nativeElement;\n          const triggerWidth = element.getBoundingClientRect().width;\n          if (this.nzVisible !== visible) {\n            this.nzVisibleChange.emit(visible);\n          }\n          this.nzVisible = visible;\n          if (visible) {\n            /** set up overlayRef **/\n            if (!this.overlayRef) {\n              /** new overlay **/\n              this.overlayRef = this.overlay.create({\n                positionStrategy: this.positionStrategy,\n                minWidth: triggerWidth,\n                disposeOnNavigation: true,\n                hasBackdrop: this.nzTrigger === 'click',\n                backdropClass: this.nzBackdrop ? undefined : 'nz-overlay-transparent-backdrop',\n                scrollStrategy: this.overlay.scrollStrategies.reposition()\n              });\n              merge(\n                this.overlayRef.backdropClick(),\n                this.overlayRef.detachments(),\n                this.overlayRef.keydownEvents().pipe(filter(e => e.keyCode === ESCAPE && !hasModifierKey(e)))\n              )\n                .pipe(mapTo(false), takeUntil(this.destroy$))\n                .subscribe(this.overlayClose$);\n            } else {\n              /** update overlay config **/\n              const overlayConfig = this.overlayRef.getConfig();\n              overlayConfig.minWidth = triggerWidth;\n              overlayConfig.hasBackdrop = this.nzTrigger === 'click';\n            }\n            /** open dropdown with animation **/\n            this.positionStrategy.withPositions([POSITION_MAP[this.nzPlacement], ...listOfPositions]);\n            /** reset portal if needed **/\n            if (!this.portal || this.portal.templateRef !== this.nzDropdownMenu!.templateRef) {\n              this.portal = new TemplatePortal(this.nzDropdownMenu!.templateRef, this.viewContainerRef);\n            }\n            this.overlayRef.attach(this.portal);\n          } else {\n            /** detach overlayRef if needed **/\n            if (this.overlayRef) {\n              this.overlayRef.detach();\n            }\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = null;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzVisible, nzDisabled, nzOverlayClassName, nzOverlayStyle, nzTrigger } = changes;\n    if (nzTrigger) {\n      this.nzTrigger$.next(this.nzTrigger);\n    }\n    if (nzVisible) {\n      this.inputVisible$.next(this.nzVisible);\n    }\n    if (nzDisabled) {\n      const nativeElement = this.elementRef.nativeElement;\n      if (this.nzDisabled) {\n        this.renderer.setAttribute(nativeElement, 'disabled', '');\n        this.inputVisible$.next(false);\n      } else {\n        this.renderer.removeAttribute(nativeElement, 'disabled');\n      }\n    }\n    if (nzOverlayClassName) {\n      this.setDropdownMenuValue('nzOverlayClassName', this.nzOverlayClassName);\n    }\n    if (nzOverlayStyle) {\n      this.setDropdownMenuValue('nzOverlayStyle', this.nzOverlayStyle);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzContextMenuServiceModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'a[nz-dropdown]',\n  host: {\n    '[class.ant-dropdown-link]': 'true'\n  }\n})\nexport class NzDropDownADirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AfterViewInit, Directive, ElementRef, Host, Optional, Renderer2 } from '@angular/core';\nimport { NzButtonGroupComponent } from 'ng-zorro-antd/button';\n\n@Directive({\n  selector: '[nz-button][nz-dropdown]'\n})\nexport class NzDropdownButtonDirective implements AfterViewInit {\n  constructor(\n    private renderer: Renderer2,\n    @Host() @Optional() private nzButtonGroupComponent: NzButtonGroupComponent,\n    private elementRef: ElementRef\n  ) {}\n  ngAfterViewInit(): void {\n    const parentElement = this.renderer.parentNode(this.elementRef.nativeElement);\n    if (this.nzButtonGroupComponent && parentElement) {\n      this.renderer.addClass(parentElement, 'ant-dropdown-button');\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Host,\n  Optional,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { IndexableObject, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { MenuService, NzIsMenuInsideDropDownToken } from 'ng-zorro-antd/menu';\nimport { BehaviorSubject } from 'rxjs';\n\nexport type NzPlacementType = 'bottomLeft' | 'bottomCenter' | 'bottomRight' | 'topLeft' | 'topCenter' | 'topRight';\n\n@Component({\n  selector: `nz-dropdown-menu`,\n  exportAs: `nzDropdownMenu`,\n  animations: [slideMotion],\n  providers: [\n    MenuService,\n    /** menu is inside dropdown-menu component **/\n    {\n      provide: NzIsMenuInsideDropDownToken,\n      useValue: true\n    }\n  ],\n  template: `\n    <ng-template>\n      <div\n        class=\"ant-dropdown\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [@slideMotion]=\"'enter'\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        (mouseenter)=\"setMouseState(true)\"\n        (mouseleave)=\"setMouseState(false)\"\n      >\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzDropdownMenuComponent implements AfterContentInit {\n  mouseState$ = new BehaviorSubject<boolean>(false);\n  isChildSubMenuOpen$ = this.nzMenuService.isChildSubMenuOpen$;\n  descendantMenuItemClick$ = this.nzMenuService.descendantMenuItemClick$;\n  nzOverlayClassName: string = '';\n  nzOverlayStyle: IndexableObject = {};\n  @ViewChild(TemplateRef, { static: true }) templateRef!: TemplateRef<NzSafeAny>;\n\n  setMouseState(visible: boolean): void {\n    this.mouseState$.next(visible);\n  }\n\n  setValue<T extends keyof NzDropdownMenuComponent>(key: T, value: this[T]): void {\n    this[key] = value;\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    public viewContainerRef: ViewContainerRef,\n    public nzMenuService: MenuService,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngAfterContentInit(): void {\n    this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzContextMenuServiceModule } from './context-menu.service.module';\nimport { NzDropDownADirective } from './dropdown-a.directive';\nimport { NzDropdownButtonDirective } from './dropdown-button.directive';\nimport { NzDropdownMenuComponent } from './dropdown-menu.component';\nimport { NzDropDownDirective } from './dropdown.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    FormsModule,\n    NzButtonModule,\n    NzMenuModule,\n    NzIconModule,\n    NzNoAnimationModule,\n    PlatformModule,\n    NzOverlayModule,\n    NzContextMenuServiceModule,\n    NzOutletModule\n  ],\n  entryComponents: [NzDropdownMenuComponent],\n  declarations: [NzDropDownDirective, NzDropDownADirective, NzDropdownMenuComponent, NzDropdownButtonDirective],\n  exports: [NzMenuModule, NzDropDownDirective, NzDropDownADirective, NzDropdownMenuComponent, NzDropdownButtonDirective]\n})\nexport class NzDropDownModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ConnectionPositionPair, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Injectable } from '@angular/core';\nimport { fromEvent, merge, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { NzContextMenuServiceModule } from './context-menu.service.module';\nimport { NzDropdownMenuComponent } from './dropdown-menu.component';\n\nconst listOfPositions = [\n  new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'top' }),\n  new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n  new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n  new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' })\n];\n\n@Injectable({\n  providedIn: NzContextMenuServiceModule\n})\nexport class NzContextMenuService {\n  private overlayRef: OverlayRef | null = null;\n  private closeSubscription = Subscription.EMPTY;\n\n  constructor(private overlay: Overlay) {}\n\n  create($event: MouseEvent | { x: number; y: number }, nzDropdownMenuComponent: NzDropdownMenuComponent): void {\n    this.close(true);\n    const { x, y } = $event;\n    if ($event instanceof MouseEvent) {\n      $event.preventDefault();\n    }\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo({ x, y })\n      .withPositions(listOfPositions)\n      .withTransformOriginOn('.ant-dropdown');\n    this.overlayRef = this.overlay.create({\n      positionStrategy,\n      disposeOnNavigation: true,\n      scrollStrategy: this.overlay.scrollStrategies.close()\n    });\n    this.closeSubscription = merge(\n      nzDropdownMenuComponent.descendantMenuItemClick$,\n      fromEvent<MouseEvent>(document, 'click').pipe(\n        filter(event => !!this.overlayRef && !this.overlayRef.overlayElement.contains(event.target as HTMLElement)),\n        /** handle firefox contextmenu event **/\n        filter(event => event.button !== 2),\n        take(1)\n      )\n    ).subscribe(() => {\n      this.close();\n    });\n    this.overlayRef.attach(new TemplatePortal(nzDropdownMenuComponent.templateRef, nzDropdownMenuComponent.viewContainerRef));\n  }\n\n  close(clear: boolean = false): void {\n    if (this.overlayRef) {\n      this.overlayRef.detach();\n      if (clear) {\n        this.overlayRef.dispose();\n      }\n      this.overlayRef = null;\n      this.closeSubscription.unsubscribe();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './dropdown.directive';\nexport * from './dropdown.module';\nexport * from './dropdown-a.directive';\nexport * from './dropdown-button.directive';\nexport * from './dropdown-menu.component';\nexport * from './context-menu.service';\nexport * from './context-menu.service.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}