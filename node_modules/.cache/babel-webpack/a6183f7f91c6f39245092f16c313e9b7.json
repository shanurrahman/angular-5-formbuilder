{"ast":null,"code":"import _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { CommonModule } from '@angular/common';\nimport { Directive, ComponentFactoryResolver, ViewContainerRef, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, TemplateRef, ContentChildren, NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/outlet';\n\nfunction NzCommentActionComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nfunction NzCommentComponent_span_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.nzAuthor);\n  }\n}\n\nfunction NzCommentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtemplate(1, NzCommentComponent_span_5_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzAuthor);\n  }\n}\n\nfunction NzCommentComponent_span_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.nzDatetime);\n  }\n}\n\nfunction NzCommentComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(1, NzCommentComponent_span_6_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.nzDatetime);\n  }\n}\n\nfunction NzCommentComponent_ul_8_li_1_ng_template_2_Template(rf, ctx) {}\n\nfunction NzCommentComponent_ul_8_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtemplate(2, NzCommentComponent_ul_8_li_1_ng_template_2_Template, 0, 0, \"ng-template\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var action_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"nzCommentActionHost\", action_r6.content);\n  }\n}\n\nfunction NzCommentComponent_ul_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 11);\n    ɵngcc0.ɵɵtemplate(1, NzCommentComponent_ul_8_li_1_Template, 3, 1, \"li\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.actions);\n  }\n}\n\nvar _c1 = [[[\"nz-avatar\", \"nz-comment-avatar\", \"\"]], [[\"nz-comment-content\"]], \"*\"];\nvar _c2 = [\"nz-avatar[nz-comment-avatar]\", \"nz-comment-content\", \"*\"];\n\nvar NzCommentAvatarDirective = function NzCommentAvatarDirective() {\n  _classCallCheck(this, NzCommentAvatarDirective);\n};\n\nNzCommentAvatarDirective.ɵfac = function NzCommentAvatarDirective_Factory(t) {\n  return new (t || NzCommentAvatarDirective)();\n};\n\nNzCommentAvatarDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzCommentAvatarDirective,\n  selectors: [[\"nz-avatar\", \"nz-comment-avatar\", \"\"]],\n  exportAs: [\"nzCommentAvatar\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCommentAvatarDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'nz-avatar[nz-comment-avatar]',\n      exportAs: 'nzCommentAvatar'\n    }]\n  }], null, null);\n})();\n\nvar NzCommentContentDirective = function NzCommentContentDirective() {\n  _classCallCheck(this, NzCommentContentDirective);\n};\n\nNzCommentContentDirective.ɵfac = function NzCommentContentDirective_Factory(t) {\n  return new (t || NzCommentContentDirective)();\n};\n\nNzCommentContentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzCommentContentDirective,\n  selectors: [[\"nz-comment-content\"], [\"\", \"nz-comment-content\", \"\"]],\n  hostAttrs: [1, \"ant-comment-content-detail\"],\n  exportAs: [\"nzCommentContent\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCommentContentDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'nz-comment-content, [nz-comment-content]',\n      exportAs: 'nzCommentContent',\n      host: {\n        class: 'ant-comment-content-detail'\n      }\n    }]\n  }], null, null);\n})();\n\nvar NzCommentActionHostDirective = /*#__PURE__*/function (_CdkPortalOutlet) {\n  _inherits(NzCommentActionHostDirective, _CdkPortalOutlet);\n\n  var _super = _createSuper(NzCommentActionHostDirective);\n\n  function NzCommentActionHostDirective(componentFactoryResolver, viewContainerRef) {\n    _classCallCheck(this, NzCommentActionHostDirective);\n\n    return _super.call(this, componentFactoryResolver, viewContainerRef);\n  }\n\n  _createClass(NzCommentActionHostDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      _get(_getPrototypeOf(NzCommentActionHostDirective.prototype), \"ngOnInit\", this).call(this);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(NzCommentActionHostDirective.prototype), \"ngOnDestroy\", this).call(this);\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.attach(this.nzCommentActionHost);\n    }\n  }]);\n\n  return NzCommentActionHostDirective;\n}(CdkPortalOutlet);\n\nNzCommentActionHostDirective.ɵfac = function NzCommentActionHostDirective_Factory(t) {\n  return new (t || NzCommentActionHostDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nNzCommentActionHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzCommentActionHostDirective,\n  selectors: [[\"\", \"nzCommentActionHost\", \"\"]],\n  inputs: {\n    nzCommentActionHost: \"nzCommentActionHost\"\n  },\n  exportAs: [\"nzCommentActionHost\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nNzCommentActionHostDirective.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }, {\n    type: ViewContainerRef\n  }];\n};\n\nNzCommentActionHostDirective.propDecorators = {\n  nzCommentActionHost: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCommentActionHostDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzCommentActionHost]',\n      exportAs: 'nzCommentActionHost'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, {\n    nzCommentActionHost: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NzCommentActionComponent = /*#__PURE__*/function () {\n  function NzCommentActionComponent(viewContainerRef) {\n    _classCallCheck(this, NzCommentActionComponent);\n\n    this.viewContainerRef = viewContainerRef;\n    this.contentPortal = null;\n  }\n\n  _createClass(NzCommentActionComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.contentPortal = new TemplatePortal(this.implicitContent, this.viewContainerRef);\n    }\n  }, {\n    key: \"content\",\n    get: function get() {\n      return this.contentPortal;\n    }\n  }]);\n\n  return NzCommentActionComponent;\n}();\n\nNzCommentActionComponent.ɵfac = function NzCommentActionComponent_Factory(t) {\n  return new (t || NzCommentActionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nNzCommentActionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzCommentActionComponent,\n  selectors: [[\"nz-comment-action\"]],\n  viewQuery: function NzCommentActionComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.implicitContent = _t.first);\n    }\n  },\n  exportAs: [\"nzCommentAction\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzCommentActionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzCommentActionComponent_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzCommentActionComponent.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }];\n};\n\nNzCommentActionComponent.propDecorators = {\n  implicitContent: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: true\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCommentActionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-comment-action',\n      exportAs: 'nzCommentAction',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<ng-template><ng-content></ng-content></ng-template>'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, {\n    implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCommentComponent = function NzCommentComponent() {\n  _classCallCheck(this, NzCommentComponent);\n};\n\nNzCommentComponent.ɵfac = function NzCommentComponent_Factory(t) {\n  return new (t || NzCommentComponent)();\n};\n\nNzCommentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzCommentComponent,\n  selectors: [[\"nz-comment\"]],\n  contentQueries: function NzCommentComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzCommentActionComponent, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.actions = _t);\n    }\n  },\n  hostAttrs: [1, \"ant-comment\"],\n  inputs: {\n    nzAuthor: \"nzAuthor\",\n    nzDatetime: \"nzDatetime\"\n  },\n  exportAs: [\"nzComment\"],\n  ngContentSelectors: _c2,\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"ant-comment-inner\"], [1, \"ant-comment-avatar\"], [1, \"ant-comment-content\"], [1, \"ant-comment-content-author\"], [\"class\", \"ant-comment-content-author-name\", 4, \"ngIf\"], [\"class\", \"ant-comment-content-author-time\", 4, \"ngIf\"], [\"class\", \"ant-comment-actions\", 4, \"ngIf\"], [1, \"ant-comment-nested\"], [1, \"ant-comment-content-author-name\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-comment-content-author-time\"], [1, \"ant-comment-actions\"], [4, \"ngFor\", \"ngForOf\"], [3, \"nzCommentActionHost\"]],\n  template: function NzCommentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n      ɵngcc0.ɵɵtemplate(5, NzCommentComponent_span_5_Template, 2, 1, \"span\", 4);\n      ɵngcc0.ɵɵtemplate(6, NzCommentComponent_span_6_Template, 2, 1, \"span\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(7, 1);\n      ɵngcc0.ɵɵtemplate(8, NzCommentComponent_ul_8_Template, 2, 1, \"ul\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(9, \"div\", 7);\n      ɵngcc0.ɵɵprojection(10, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzAuthor);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzDatetime);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.actions == null ? null : ctx.actions.length);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc2.NzStringTemplateOutletDirective, ɵngcc1.NgForOf, NzCommentActionHostDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzCommentComponent.ctorParameters = function () {\n  return [];\n};\n\nNzCommentComponent.propDecorators = {\n  nzAuthor: [{\n    type: Input\n  }],\n  nzDatetime: [{\n    type: Input\n  }],\n  actions: [{\n    type: ContentChildren,\n    args: [NzCommentActionComponent]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCommentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-comment',\n      exportAs: 'nzComment',\n      template: \"\\n    <div class=\\\"ant-comment-inner\\\">\\n      <div class=\\\"ant-comment-avatar\\\">\\n        <ng-content select=\\\"nz-avatar[nz-comment-avatar]\\\"></ng-content>\\n      </div>\\n      <div class=\\\"ant-comment-content\\\">\\n        <div class=\\\"ant-comment-content-author\\\">\\n          <span *ngIf=\\\"nzAuthor\\\" class=\\\"ant-comment-content-author-name\\\">\\n            <ng-container *nzStringTemplateOutlet=\\\"nzAuthor\\\">{{ nzAuthor }}</ng-container>\\n          </span>\\n          <span *ngIf=\\\"nzDatetime\\\" class=\\\"ant-comment-content-author-time\\\">\\n            <ng-container *nzStringTemplateOutlet=\\\"nzDatetime\\\">{{ nzDatetime }}</ng-container>\\n          </span>\\n        </div>\\n        <ng-content select=\\\"nz-comment-content\\\"></ng-content>\\n        <ul class=\\\"ant-comment-actions\\\" *ngIf=\\\"actions?.length\\\">\\n          <li *ngFor=\\\"let action of actions\\\">\\n            <span><ng-template [nzCommentActionHost]=\\\"action.content\\\"></ng-template></span>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"ant-comment-nested\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'ant-comment'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzAuthor: [{\n      type: Input\n    }],\n    nzDatetime: [{\n      type: Input\n    }],\n    actions: [{\n      type: ContentChildren,\n      args: [NzCommentActionComponent]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_COMMENT_CELLS = [NzCommentAvatarDirective, NzCommentContentDirective, NzCommentActionComponent, NzCommentActionHostDirective];\n\nvar NzCommentModule = function NzCommentModule() {\n  _classCallCheck(this, NzCommentModule);\n};\n\nNzCommentModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzCommentModule\n});\nNzCommentModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzCommentModule_Factory(t) {\n    return new (t || NzCommentModule)();\n  },\n  imports: [[CommonModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzCommentModule, {\n    declarations: function declarations() {\n      return [NzCommentComponent, NzCommentAvatarDirective, NzCommentContentDirective, NzCommentActionComponent, NzCommentActionHostDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzCommentComponent, NzCommentAvatarDirective, NzCommentContentDirective, NzCommentActionComponent, NzCommentActionHostDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCommentModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NzOutletModule],\n      exports: [NzCommentComponent].concat(NZ_COMMENT_CELLS),\n      declarations: [NzCommentComponent].concat(NZ_COMMENT_CELLS)\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCommentActionComponent, NzCommentActionHostDirective, NzCommentAvatarDirective, NzCommentComponent, NzCommentContentDirective, NzCommentModule };","map":{"version":3,"sources":["../../components/comment/comment-cells.ts","../../components/comment/comment.component.ts","../../components/comment/comment.module.ts","../../components/comment/public-api.ts","../../components/comment/ng-zorro-antd-comment.ts"],"names":["CommentAction"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyBa,wB;;;;yCAJZ,gC,CAAU,C,EAAA;AAAA,SAAA,KACT,CAAA,IAAQ,wBADC,GAAA;AACC,C;;AAA8B,wBACxC,CAAA,IADwC,GAC9B,MAAA,CAAA,iBAAA,CAAiB;AAC5B,EAAA,IAAA,EAAA,wBAD4B;AAC5B,EAAA,SAAA,EAAA,CAAA,CAAA,WAAA,EAAA,mBAAA,EAAA,EAAA,CAAA,CAD4B;AAC5B,EAAA,QAAA,EAAA,CAAA,iBAAA;AAD4B,CAAjB,CAD8B;;;;;;;;;;;AAGrC,C;;IAOQ,yB;;;;0CALZ,iC,CAAU,C,EAAA;AAAA,SAAA,KACT,CAAA,IAAQ,yBADC,GAAA;AACC,C;;AAA0C,yBAAA,CAAA,IAAA,GACpD,MAAU,CAAA,iBAAV,CAA4B;AAAA,EAAA,IAAA,EAAA,yBAAA;AACb,EAAA,SAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,EAA8B,CAAA,EAAA,EAC9C,oBAD8C,EAC9C,EAD8C,CAA9B,CADa;AAE7B,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,4BAAA,CAF6B;AAE7B,EAAA,QAAA,EAAA,CAAA,kBAAA;AAF6B,CAA5B,CADoD;;;;;;;;;;;;;;AAIjD,C;;IAMQ,4B;;;;;AAGX,wCAAY,wBAAZ,EAAgE,gBAAhE,EAAkG;AAAA;;AAAA,6BAC1F,wBAD0F,EAChE,gBADgE;AAEjG;;;;+BAEO;AACN;AACD;;;kCAEU;AACT;AACD;;;sCAEc;AACb,WAAK,MAAL,CAAY,KAAK,mBAAjB;AACD;;;;EAjB+C,e;;6CAJjD,oC,CAAU,C,EAAA;AAAA,SACT,KAAA,CAAQ,IAAE,4BAAV,EAAiC,MAAA,CAAA,iBAAA,CACvB,MAAA,CAAA,wBADuB,CAAjC,EAED,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAFC,CADS;AAGV,C;;;;;;;;;oBACI,0B;;;AAAC,4BAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAsD;AAAA,IAAA,IAAA,EA5B1D;AA4B0D,GAAtD,EA3BJ;AAAA,IAAA,IAAA,EAMA;AANA,GA2BI,CAAA;AAAA,CAAA;;AApBF,4BAAA,CAAA,cAAA,GAAA;AAGG,EAAA,mBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAkBJ;AAlBI,GAAA;AAHH,CAAA;;;;;;;;;;;;;;;;;;;;;AAqBU,C;;IA0BD,wB;AAQX,oCAAoB,gBAApB,EAAsD;AAAA;;AAAlC,SAAA,gBAAA,GAAA,gBAAA;AANZ,SAAA,aAAA,GAAuC,IAAvC;AAMkD;;;;+BAElD;AACN,WAAK,aAAL,GAAqB,IAAI,cAAJ,CAAmB,KAAK,eAAxB,EAAyC,KAAK,gBAA9C,CAArB;AACD;;;wBARU;AACT,aAAO,KAAK,aAAZ;AACD;;;;;;yCAbF,gC,CAAU,C,EAAA;AAAA,SAAA,KACT,CAAA,IAAQ,wBADC,EACoB,MAAA,CAAA,iBAAA,CACnB,MAAA,CAAA,gBADmB,CADpB,CAAA;AAEkB,C;;AAC3B,wBAAe,CAAA,IAAf,GAAe,MAAkB,CAAA,iBAAlB,CAAsB;AACrC,EAAA,IAAA,EAAA,wBADqC;AACpB,EAAA,SAAwB,EAAA,CAAA,CAAA,mBAAA,CAAA,CADJ;AAErC,EAAA,SAAU,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAsD;AAAA,QAAA,EAAA,GAAA,CAAA,EACjE;;;;;;;;;GAHsC;+BAAA;yBAAA;UAAA;SAAA;;;;;;GAAA;kBAAA;mBAIlC;AAJkC,CAAtB,CAAf;;AAII,wBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAkD;AAAA,IAAA,IAAA,EAhDtD;AAgDsD,GAAlD,CAAA;AAAA,CAAA;;AA/CF,wBAAA,CAAA,cAAA,GAAA;AAGD,EAAA,eAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EA6CA,SA7CA;AA6CS,IAAA,IAAA,EAAA,CAAC,WAAD,EAAc;AAAE,MAAA,MAAM,EAAE;AAAV,KAAd;AA7CT,GAAA;AAHC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAgD8C,C;AClElD;;;;;;IA4Ca,kB,GAKX,8BAAA;AAAA;AAAgB,C;;mCAxCjB,0B,CAAS,C,EAAC;AAAA,SAAA,KAAA,CAAA,IACT,kBADS,GAAA;AACa,C;;AACtB,kBAAA,CAAA,IAAA,GAAU,MAAA,CAAW,iBAAX,CACV;AAAA,EAAA,IAAA,EAAQ,kBAAR;AAAU,EAAA,SAAA,EAAA,CAAA,CAAA,YAAA,CAAA,CAAV;AAAU,EAAA,cAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;GAAV;+BAAA;;;;GAAA;yBAAA;yBAAA;WAAA;SAAA;wfAAA;qBAyBC,2B,CAAA,E,EAAA,G,EACD;AAAA,QAAA,EAAA,GAAa,CAAb,EAAe;AAAiB,MAAA,MAAC,CAAA,eAAD,CAAK,GAAL;YACjB,CAAA,c,CAAE,C,EAAA,K,EAAwB,C;AAAM,MAAA,MAAA,CAAA,cAAA,CACzC,CADyC,EACzC,KADyC,EACzC,CADyC;AAE7C,MAAA,MAAO,CAAA,YAAP,CAAoB,CAApB;AACD,MAAA,MAAA,CAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;GA9BD;iHAAA;kBAAA;mBAgCG;AAhCH,CADU,CAAV;;AAiCI,kBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,EAAA;AAAA,CAAA;;AACY,kBAAA,CAAA,cAAA,GAAA;AACZ,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EADH;AACG,GAAA,CADY;AAAL,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAAK;AACL,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAEV,eAFU;AAEK,IAAA,IAAA,EAAA,CAACA,wBAAD;AAFL,GAAA;AADK,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGsB,C;AChDxC;;;;;;AAkBA,IAAM,gBAAgB,GAAG,CAAC,wBAAD,EAA2B,yBAA3B,EAAsD,wBAAtD,EAAgF,4BAAhF,CAAzB;;IAOa,e;;;;8BALZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACC,eAAU,CAAA,IAAV,GAAU,MAAc,CAAA,gBAAd,CAA6B;AAAA,EAAA,OAAA,EAAA,SAChC,uBADgC,CACT,CADS,EACN;AAAA,WAAA,KAAA,CAAgB,IAAC,eAAjB,GAAA;AACjC,GAFuC;AAEvC,EAAA,OAAe,EAAA,CAAA,CAAA,YAAA,EAAkB,cAAlB,CAAA;AAFwB,CAA7B,CAAV;;AAEsD,CAAC,YAAA;AACxD,GAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,MAAA,CAAA,kBAAA,CAAA,eAAA,EAAA;AAAA,IAAA,YAAA,EAAA,wBAAA;AAAA,aAAA,CAAA,kBAAA,EAAA,wBAAA,EAAA,yBAAA,EAAA,wBAAA,EAAA,4BAAA,CAAA;AAAA,KAAA;AAAA,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,YAAA,EAAA,cAAA,CAAA;AAAA,KAAA;AAAA,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,kBAAA,EAAA,wBAAA,EAAA,yBAAA,EAAA,wBAAA,EAAA,4BAAA,CAAA;AAAA;AAAA,GAAA,CAAA;AAAA,CADuD;;;;;;;;;;;;;AAEnD,C;ACzBL;;;;;ACAA;;;;;AAIA,SAAA,wBAAA,EAAA,4BAAA,EAAA,wBAAA,EAAA,kBAAA,EAAA,yBAAA,EAAA,eAAA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentFactoryResolver,\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Directive({\n  selector: 'nz-avatar[nz-comment-avatar]',\n  exportAs: 'nzCommentAvatar'\n})\nexport class NzCommentAvatarDirective {}\n\n@Directive({\n  selector: 'nz-comment-content, [nz-comment-content]',\n  exportAs: 'nzCommentContent',\n  host: { class: 'ant-comment-content-detail' }\n})\nexport class NzCommentContentDirective {}\n\n@Directive({\n  selector: '[nzCommentActionHost]',\n  exportAs: 'nzCommentActionHost'\n})\nexport class NzCommentActionHostDirective extends CdkPortalOutlet implements OnInit, OnDestroy, AfterViewInit {\n  @Input() nzCommentActionHost?: TemplatePortal | null;\n\n  constructor(componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef) {\n    super(componentFactoryResolver, viewContainerRef);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n  ngAfterViewInit(): void {\n    this.attach(this.nzCommentActionHost);\n  }\n}\n\n@Component({\n  selector: 'nz-comment-action',\n  exportAs: 'nzCommentAction',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class NzCommentActionComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) implicitContent!: TemplateRef<void>;\n  private contentPortal: TemplatePortal | null = null;\n\n  get content(): TemplatePortal | null {\n    return this.contentPortal;\n  }\n\n  constructor(private viewContainerRef: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    this.contentPortal = new TemplatePortal(this.implicitContent, this.viewContainerRef);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ContentChildren, Input, QueryList, TemplateRef, ViewEncapsulation } from '@angular/core';\n\nimport { NzCommentActionComponent as CommentAction } from './comment-cells';\n\n@Component({\n  selector: 'nz-comment',\n  exportAs: 'nzComment',\n  template: `\n    <div class=\"ant-comment-inner\">\n      <div class=\"ant-comment-avatar\">\n        <ng-content select=\"nz-avatar[nz-comment-avatar]\"></ng-content>\n      </div>\n      <div class=\"ant-comment-content\">\n        <div class=\"ant-comment-content-author\">\n          <span *ngIf=\"nzAuthor\" class=\"ant-comment-content-author-name\">\n            <ng-container *nzStringTemplateOutlet=\"nzAuthor\">{{ nzAuthor }}</ng-container>\n          </span>\n          <span *ngIf=\"nzDatetime\" class=\"ant-comment-content-author-time\">\n            <ng-container *nzStringTemplateOutlet=\"nzDatetime\">{{ nzDatetime }}</ng-container>\n          </span>\n        </div>\n        <ng-content select=\"nz-comment-content\"></ng-content>\n        <ul class=\"ant-comment-actions\" *ngIf=\"actions?.length\">\n          <li *ngFor=\"let action of actions\">\n            <span><ng-template [nzCommentActionHost]=\"action.content\"></ng-template></span>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"ant-comment-nested\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'ant-comment'\n  }\n})\nexport class NzCommentComponent {\n  @Input() nzAuthor?: string | TemplateRef<void>;\n  @Input() nzDatetime?: string | TemplateRef<void>;\n\n  @ContentChildren(CommentAction) actions!: QueryList<CommentAction>;\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport {\n  NzCommentActionComponent,\n  NzCommentActionHostDirective,\n  NzCommentAvatarDirective,\n  NzCommentContentDirective\n} from './comment-cells';\nimport { NzCommentComponent } from './comment.component';\n\nconst NZ_COMMENT_CELLS = [NzCommentAvatarDirective, NzCommentContentDirective, NzCommentActionComponent, NzCommentActionHostDirective];\n\n@NgModule({\n  imports: [CommonModule, NzOutletModule],\n  exports: [NzCommentComponent, ...NZ_COMMENT_CELLS],\n  declarations: [NzCommentComponent, ...NZ_COMMENT_CELLS]\n})\nexport class NzCommentModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './comment.module';\nexport * from './comment.component';\nexport * from './comment-cells';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}