{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { CommonModule } from '@angular/common';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from 'ng-zorro-antd/icon';\nvar _c0 = [\"textEl\"];\n\nfunction NzAvatarComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r0.nzIcon);\n  }\n}\n\nfunction NzAvatarComponent_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"img\", 4);\n    ɵngcc0.ɵɵlistener(\"error\", function NzAvatarComponent_img_1_Template_img_error_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.imgError($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"src\", ctx_r1.nzSrc, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵattribute(\"srcset\", ctx_r1.nzSrcSet, ɵngcc0.ɵɵsanitizeUrl)(\"alt\", ctx_r1.nzAlt);\n  }\n}\n\nfunction NzAvatarComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5, 6);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r2.textStyles);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\n\nvar NZ_CONFIG_MODULE_NAME = 'avatar';\n\nvar NzAvatarComponent = /*#__PURE__*/function () {\n  function NzAvatarComponent(nzConfigService, elementRef, cdr, platform) {\n    _classCallCheck(this, NzAvatarComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.platform = platform;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzShape = 'circle';\n    this.nzSize = 'default';\n    this.nzError = new EventEmitter();\n    this.hasText = false;\n    this.hasSrc = true;\n    this.hasIcon = false;\n    this.textStyles = {};\n    this.classMap = {};\n    this.customSize = null;\n    this.el = this.elementRef.nativeElement;\n  }\n\n  _createClass(NzAvatarComponent, [{\n    key: \"imgError\",\n    value: function imgError($event) {\n      this.nzError.emit($event);\n\n      if (!$event.defaultPrevented) {\n        this.hasSrc = false;\n        this.hasIcon = false;\n        this.hasText = false;\n\n        if (this.nzIcon) {\n          this.hasIcon = true;\n        } else if (this.nzText) {\n          this.hasText = true;\n        }\n\n        this.cdr.detectChanges();\n        this.setSizeStyle();\n        this.notifyCalc();\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.hasText = !this.nzSrc && !!this.nzText;\n      this.hasIcon = !this.nzSrc && !!this.nzIcon;\n      this.hasSrc = !!this.nzSrc;\n      this.setSizeStyle();\n      this.notifyCalc();\n    }\n  }, {\n    key: \"calcStringSize\",\n    value: function calcStringSize() {\n      if (!this.hasText) {\n        return;\n      }\n\n      var childrenWidth = this.textEl.nativeElement.offsetWidth;\n      var avatarWidth = this.el.getBoundingClientRect().width;\n      var scale = avatarWidth - 8 < childrenWidth ? (avatarWidth - 8) / childrenWidth : 1;\n      this.textStyles = {\n        transform: \"scale(\".concat(scale, \") translateX(-50%)\")\n      };\n\n      if (this.customSize) {\n        Object.assign(this.textStyles, {\n          lineHeight: this.customSize\n        });\n      }\n\n      this.cdr.detectChanges();\n    }\n  }, {\n    key: \"notifyCalc\",\n    value: function notifyCalc() {\n      var _this = this;\n\n      // If use ngAfterViewChecked, always demands more computations, so......\n      if (this.platform.isBrowser) {\n        setTimeout(function () {\n          _this.calcStringSize();\n        });\n      }\n    }\n  }, {\n    key: \"setSizeStyle\",\n    value: function setSizeStyle() {\n      if (typeof this.nzSize === 'number') {\n        this.customSize = \"\".concat(this.nzSize, \"px\");\n      } else {\n        this.customSize = null;\n      }\n\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzAvatarComponent;\n}();\n\nNzAvatarComponent.ɵfac = function NzAvatarComponent_Factory(t) {\n  return new (t || NzAvatarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform));\n};\n\nNzAvatarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzAvatarComponent,\n  selectors: [[\"nz-avatar\"]],\n  viewQuery: function NzAvatarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  hostVars: 22,\n  hostBindings: function NzAvatarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.customSize)(\"height\", ctx.customSize)(\"line-height\", ctx.customSize)(\"font-size\", ctx.hasIcon && ctx.customSize ? ctx.nzSize / 2 : null, \"px\");\n      ɵngcc0.ɵɵclassProp(\"ant-avatar\", true)(\"ant-avatar-lg\", ctx.nzSize === \"large\")(\"ant-avatar-sm\", ctx.nzSize === \"small\")(\"ant-avatar-square\", ctx.nzShape === \"square\")(\"ant-avatar-circle\", ctx.nzShape === \"circle\")(\"ant-avatar-icon\", ctx.nzIcon)(\"ant-avatar-image\", ctx.hasSrc);\n    }\n  },\n  inputs: {\n    nzShape: \"nzShape\",\n    nzSize: \"nzSize\",\n    nzText: \"nzText\",\n    nzSrc: \"nzSrc\",\n    nzSrcSet: \"nzSrcSet\",\n    nzAlt: \"nzAlt\",\n    nzIcon: \"nzIcon\"\n  },\n  outputs: {\n    nzError: \"nzError\"\n  },\n  exportAs: [\"nzAvatar\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 3,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [3, \"src\", \"error\", 4, \"ngIf\"], [\"class\", \"ant-avatar-string\", 3, \"ngStyle\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"], [3, \"src\", \"error\"], [1, \"ant-avatar-string\", 3, \"ngStyle\"], [\"textEl\", \"\"]],\n  template: function NzAvatarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzAvatarComponent_i_0_Template, 1, 1, \"i\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzAvatarComponent_img_1_Template, 1, 3, \"img\", 1);\n      ɵngcc0.ɵɵtemplate(2, NzAvatarComponent_span_2_Template, 3, 2, \"span\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzIcon && ctx.hasIcon);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzSrc && ctx.hasSrc);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzText && ctx.hasText);\n    }\n  },\n  directives: [ɵngcc3.NgIf, ɵngcc4.NzIconDirective, ɵngcc3.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzAvatarComponent.ctorParameters = function () {\n  return [{\n    type: NzConfigService\n  }, {\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Platform\n  }];\n};\n\nNzAvatarComponent.propDecorators = {\n  nzShape: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  nzText: [{\n    type: Input\n  }],\n  nzSrc: [{\n    type: Input\n  }],\n  nzSrcSet: [{\n    type: Input\n  }],\n  nzAlt: [{\n    type: Input\n  }],\n  nzIcon: [{\n    type: Input\n  }],\n  nzError: [{\n    type: Output\n  }],\n  textEl: [{\n    type: ViewChild,\n    args: ['textEl', {\n      static: false\n    }]\n  }]\n};\n\n__decorate([WithConfig(), __metadata(\"design:type\", String)], NzAvatarComponent.prototype, \"nzShape\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", Object)], NzAvatarComponent.prototype, \"nzSize\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAvatarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-avatar',\n      exportAs: 'nzAvatar',\n      template: \"\\n    <i nz-icon *ngIf=\\\"nzIcon && hasIcon\\\" [nzType]=\\\"nzIcon\\\"></i>\\n    <img *ngIf=\\\"nzSrc && hasSrc\\\" [src]=\\\"nzSrc\\\" [attr.srcset]=\\\"nzSrcSet\\\" [attr.alt]=\\\"nzAlt\\\" (error)=\\\"imgError($event)\\\" />\\n    <span class=\\\"ant-avatar-string\\\" #textEl [ngStyle]=\\\"textStyles\\\" *ngIf=\\\"nzText && hasText\\\">{{ nzText }}</span>\\n  \",\n      host: {\n        '[class.ant-avatar]': 'true',\n        '[class.ant-avatar-lg]': \"nzSize === 'large'\",\n        '[class.ant-avatar-sm]': \"nzSize === 'small'\",\n        '[class.ant-avatar-square]': \"nzShape === 'square'\",\n        '[class.ant-avatar-circle]': \"nzShape === 'circle'\",\n        '[class.ant-avatar-icon]': \"nzIcon\",\n        '[class.ant-avatar-image]': \"hasSrc \",\n        '[style.width]': 'customSize',\n        '[style.height]': 'customSize',\n        '[style.line-height]': 'customSize',\n        // nzSize type is number when customSize is true\n        '[style.font-size.px]': '(hasIcon && customSize) ? $any(nzSize) / 2 : null'\n      },\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.Platform\n    }];\n  }, {\n    nzShape: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzError: [{\n      type: Output\n    }],\n    nzText: [{\n      type: Input\n    }],\n    nzSrc: [{\n      type: Input\n    }],\n    nzSrcSet: [{\n      type: Input\n    }],\n    nzAlt: [{\n      type: Input\n    }],\n    nzIcon: [{\n      type: Input\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzAvatarModule = function NzAvatarModule() {\n  _classCallCheck(this, NzAvatarModule);\n};\n\nNzAvatarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzAvatarModule\n});\nNzAvatarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzAvatarModule_Factory(t) {\n    return new (t || NzAvatarModule)();\n  },\n  imports: [[CommonModule, NzIconModule, PlatformModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzAvatarModule, {\n    declarations: function declarations() {\n      return [NzAvatarComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, NzIconModule, PlatformModule];\n    },\n    exports: function exports() {\n      return [NzAvatarComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzAvatarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzAvatarComponent],\n      exports: [NzAvatarComponent],\n      imports: [CommonModule, NzIconModule, PlatformModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzAvatarComponent, NzAvatarModule };","map":{"version":3,"sources":["../../components/avatar/avatar.component.ts","../../components/avatar/avatar.module.ts","../../components/avatar/public-api.ts","../../components/avatar/ng-zorro-antd-avatar.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NgClassInterface, NgStyleInterface, NzShapeSCType, NzSizeLDSType } from 'ng-zorro-antd/core/types';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'avatar';\n\n@Component({\n  selector: 'nz-avatar',\n  exportAs: 'nzAvatar',\n  template: `\n    <i nz-icon *ngIf=\"nzIcon && hasIcon\" [nzType]=\"nzIcon\"></i>\n    <img *ngIf=\"nzSrc && hasSrc\" [src]=\"nzSrc\" [attr.srcset]=\"nzSrcSet\" [attr.alt]=\"nzAlt\" (error)=\"imgError($event)\" />\n    <span class=\"ant-avatar-string\" #textEl [ngStyle]=\"textStyles\" *ngIf=\"nzText && hasText\">{{ nzText }}</span>\n  `,\n  host: {\n    '[class.ant-avatar]': 'true',\n    '[class.ant-avatar-lg]': `nzSize === 'large'`,\n    '[class.ant-avatar-sm]': `nzSize === 'small'`,\n    '[class.ant-avatar-square]': `nzShape === 'square'`,\n    '[class.ant-avatar-circle]': `nzShape === 'circle'`,\n    '[class.ant-avatar-icon]': `nzIcon`,\n    '[class.ant-avatar-image]': `hasSrc `,\n    '[style.width]': 'customSize',\n    '[style.height]': 'customSize',\n    '[style.line-height]': 'customSize',\n    // nzSize type is number when customSize is true\n    '[style.font-size.px]': '(hasIcon && customSize) ? $any(nzSize) / 2 : null'\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NzAvatarComponent implements OnChanges {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  @Input() @WithConfig() nzShape: NzShapeSCType = 'circle';\n  @Input() @WithConfig() nzSize: NzSizeLDSType | number = 'default';\n  @Input() nzText?: string;\n  @Input() nzSrc?: string;\n  @Input() nzSrcSet?: string;\n  @Input() nzAlt?: string;\n  @Input() nzIcon?: string;\n  @Output() readonly nzError = new EventEmitter<Event>();\n\n  hasText: boolean = false;\n  hasSrc: boolean = true;\n  hasIcon: boolean = false;\n  textStyles: NgStyleInterface = {};\n  classMap: NgClassInterface = {};\n  customSize: string | null = null;\n\n  @ViewChild('textEl', { static: false }) textEl?: ElementRef;\n\n  private el: HTMLElement = this.elementRef.nativeElement;\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private platform: Platform\n  ) {}\n\n  imgError($event: Event): void {\n    this.nzError.emit($event);\n    if (!$event.defaultPrevented) {\n      this.hasSrc = false;\n      this.hasIcon = false;\n      this.hasText = false;\n      if (this.nzIcon) {\n        this.hasIcon = true;\n      } else if (this.nzText) {\n        this.hasText = true;\n      }\n      this.cdr.detectChanges();\n      this.setSizeStyle();\n      this.notifyCalc();\n    }\n  }\n\n  ngOnChanges(): void {\n    this.hasText = !this.nzSrc && !!this.nzText;\n    this.hasIcon = !this.nzSrc && !!this.nzIcon;\n    this.hasSrc = !!this.nzSrc;\n\n    this.setSizeStyle();\n    this.notifyCalc();\n  }\n\n  private calcStringSize(): void {\n    if (!this.hasText) {\n      return;\n    }\n\n    const childrenWidth = this.textEl!.nativeElement.offsetWidth;\n    const avatarWidth = this.el.getBoundingClientRect().width;\n    const scale = avatarWidth - 8 < childrenWidth ? (avatarWidth - 8) / childrenWidth : 1;\n    this.textStyles = {\n      transform: `scale(${scale}) translateX(-50%)`\n    };\n    if (this.customSize) {\n      Object.assign(this.textStyles, {\n        lineHeight: this.customSize\n      });\n    }\n    this.cdr.detectChanges();\n  }\n\n  private notifyCalc(): void {\n    // If use ngAfterViewChecked, always demands more computations, so......\n    if (this.platform.isBrowser) {\n      setTimeout(() => {\n        this.calcStringSize();\n      });\n    }\n  }\n\n  private setSizeStyle(): void {\n    if (typeof this.nzSize === 'number') {\n      this.customSize = `${this.nzSize}px`;\n    } else {\n      this.customSize = null;\n    }\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzAvatarComponent } from './avatar.component';\n\n@NgModule({\n  declarations: [NzAvatarComponent],\n  exports: [NzAvatarComponent],\n  imports: [CommonModule, NzIconModule, PlatformModule]\n})\nexport class NzAvatarModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './avatar.component';\nexport * from './avatar.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}