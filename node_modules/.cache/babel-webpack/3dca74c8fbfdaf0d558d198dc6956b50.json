{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Clipboard, ClipboardModule } from '@angular/cdk/clipboard';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Input, Output, ViewChild, ViewContainerRef, Renderer2, Inject, NgModule } from '@angular/core';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport { NzI18nService, NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { __decorate, __metadata } from 'tslib';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { isStyleSupport, measure, InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/clipboard';\nimport * as ɵngcc2 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/trans-button';\nimport * as ɵngcc4 from 'ng-zorro-antd/tooltip';\nimport * as ɵngcc5 from 'ng-zorro-antd/icon';\nimport * as ɵngcc6 from '@angular/common';\nimport * as ɵngcc7 from 'ng-zorro-antd/input';\nimport * as ɵngcc8 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc9 from '@angular/cdk/platform';\nimport * as ɵngcc10 from 'ng-zorro-antd/core/services';\nvar _c0 = [\"textarea\"];\n\nfunction NzTextEditComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTextEditComponent_button_0_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onClick();\n    });\n    ɵngcc0.ɵɵelement(1, \"i\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzTooltipTitle\", ctx_r0.locale == null ? null : ctx_r0.locale.edit);\n  }\n}\n\nfunction NzTextEditComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"textarea\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"input\", function NzTextEditComponent_ng_container_1_Template_textarea_input_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onInput($event);\n    })(\"blur\", function NzTextEditComponent_ng_container_1_Template_textarea_blur_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.confirm();\n    })(\"keydown.esc\", function NzTextEditComponent_ng_container_1_Template_textarea_keydown_esc_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onCancel();\n    })(\"keydown.enter\", function NzTextEditComponent_ng_container_1_Template_textarea_keydown_enter_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onEnter($event);\n    });\n    ɵngcc0.ɵɵtext(3, \"      \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTextEditComponent_ng_container_1_Template_button_click_4_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.confirm();\n    });\n    ɵngcc0.ɵɵelement(5, \"i\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nvar _c1 = [\"ellipsisContainer\"];\nvar _c2 = [\"expandable\"];\nvar _c3 = [\"contentTemplate\"];\n\nfunction NzTypographyComponent_ng_template_0_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"!content\"]);\n  }\n}\n\nfunction NzTypographyComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_ng_content_0_Template, 1, 0, \"ng-content\", 1);\n    ɵngcc0.ɵɵtext(1);\n  }\n\n  if (rf & 2) {\n    var content_r5 = ctx.content;\n    ɵngcc0.ɵɵproperty(\"ngIf\", !content_r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", content_r5, \" \");\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11.nzSuffix);\n  }\n}\n\nvar _c4 = function _c4(a0) {\n  return {\n    content: a0\n  };\n};\n\nfunction NzTypographyComponent_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(3, _c4, ctx_r7.nzContent));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.nzSuffix);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r13.ellipsisStr);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.nzSuffix);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 9, 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r17.onExpand();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r15.locale == null ? null : ctx_r15.locale.expand);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", null, 7);\n    ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵtemplate(3, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵtemplate(4, NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template, 3, 1, \"a\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.isEllipsis);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.nzSuffix);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.nzExpandable && ctx_r9.isEllipsis);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_Template, 3, 5, \"ng-container\", 4);\n    ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_template_2_Template, 5, 3, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var _r8 = ɵngcc0.ɵɵreference(3);\n\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.expanded || !ctx_r2.nzExpandable && ctx_r2.nzEllipsisRows === 1 && !ctx_r2.hasEllipsisObservers || ctx_r2.canCssEllipsis || ctx_r2.nzSuffix && ctx_r2.expanded)(\"ngIfElse\", _r8);\n  }\n}\n\nfunction NzTypographyComponent_nz_text_edit_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-text-edit\", 11);\n    ɵngcc0.ɵɵlistener(\"endEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_endEditing_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var ctx_r19 = ɵngcc0.ɵɵnextContext();\n      return ctx_r19.onEndEditing($event);\n    })(\"startEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_startEditing_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var ctx_r21 = ɵngcc0.ɵɵnextContext();\n      return ctx_r21.onStartEditing();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r3.nzContent);\n  }\n}\n\nfunction NzTypographyComponent_nz_text_copy_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-text-copy\", 12);\n    ɵngcc0.ɵɵlistener(\"textCopy\", function NzTypographyComponent_nz_text_copy_4_Template_nz_text_copy_textCopy_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext();\n      return ctx_r22.onTextCopy($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r4.copyText);\n  }\n}\n\nvar _c5 = [\"*\"];\n\nvar NzTextCopyComponent = /*#__PURE__*/function () {\n  function NzTextCopyComponent(host, cdr, clipboard, i18n) {\n    _classCallCheck(this, NzTextCopyComponent);\n\n    this.host = host;\n    this.cdr = cdr;\n    this.clipboard = clipboard;\n    this.i18n = i18n;\n    this.copied = false;\n    this.copyId = -1;\n    this.nativeElement = this.host.nativeElement;\n    this.destroy$ = new Subject();\n    this.textCopy = new EventEmitter();\n  }\n\n  _createClass(NzTextCopyComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(function () {\n        _this.locale = _this.i18n.getLocaleData('Text');\n\n        _this.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      clearTimeout(this.copyId);\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      if (this.copied) {\n        return;\n      }\n\n      this.copied = true;\n      this.cdr.detectChanges();\n      var text = this.text;\n      this.textCopy.emit(text);\n      this.clipboard.copy(text);\n      this.onCopied();\n    }\n  }, {\n    key: \"onCopied\",\n    value: function onCopied() {\n      var _this2 = this;\n\n      clearTimeout(this.copyId);\n      this.copyId = setTimeout(function () {\n        _this2.copied = false;\n\n        _this2.cdr.detectChanges();\n      }, 3000);\n    }\n  }]);\n\n  return NzTextCopyComponent;\n}();\n\nNzTextCopyComponent.ɵfac = function NzTextCopyComponent_Factory(t) {\n  return new (t || NzTextCopyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Clipboard), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService));\n};\n\nNzTextCopyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTextCopyComponent,\n  selectors: [[\"nz-text-copy\"]],\n  inputs: {\n    text: \"text\"\n  },\n  outputs: {\n    textCopy: \"textCopy\"\n  },\n  exportAs: [\"nzTextCopy\"],\n  decls: 2,\n  vars: 4,\n  consts: [[\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-copy\", 3, \"nzTooltipTitle\", \"click\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzTextCopyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function NzTextCopyComponent_Template_button_click_0_listener() {\n        return ctx.onClick();\n      });\n      ɵngcc0.ɵɵelement(1, \"i\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-typography-copy-success\", ctx.copied);\n      ɵngcc0.ɵɵproperty(\"nzTooltipTitle\", ctx.copied ? ctx.locale == null ? null : ctx.locale.copied : ctx.locale == null ? null : ctx.locale.copy);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"nzType\", ctx.copied ? \"check\" : \"copy\");\n    }\n  },\n  directives: [ɵngcc3.NzTransButtonDirective, ɵngcc4.NzTooltipDirective, ɵngcc5.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTextCopyComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Clipboard\n  }, {\n    type: NzI18nService\n  }];\n};\n\nNzTextCopyComponent.propDecorators = {\n  text: [{\n    type: Input\n  }],\n  textCopy: [{\n    type: Output\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzTextEditComponent = /*#__PURE__*/function () {\n  function NzTextEditComponent(host, cdr, i18n) {\n    _classCallCheck(this, NzTextEditComponent);\n\n    this.host = host;\n    this.cdr = cdr;\n    this.i18n = i18n;\n    this.editing = false;\n    this.destroy$ = new Subject();\n    this.startEditing = new EventEmitter();\n    this.endEditing = new EventEmitter();\n    this.nativeElement = this.host.nativeElement;\n  }\n\n  _createClass(NzTextEditComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this3 = this;\n\n      this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(function () {\n        _this3.locale = _this3.i18n.getLocaleData('Text');\n\n        _this3.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      this.beforeText = this.text;\n      this.currentText = this.beforeText;\n      this.editing = true;\n      this.startEditing.emit();\n      this.focusAndSetValue();\n    }\n  }, {\n    key: \"confirm\",\n    value: function confirm() {\n      this.editing = false;\n      this.endEditing.emit(this.currentText);\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(event) {\n      var target = event.target;\n      this.currentText = target.value;\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.confirm();\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.currentText = this.beforeText;\n      this.confirm();\n    }\n  }, {\n    key: \"focusAndSetValue\",\n    value: function focusAndSetValue() {\n      var _this4 = this;\n\n      setTimeout(function () {\n        var _a;\n\n        if ((_a = _this4.textarea) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n          _this4.textarea.nativeElement.focus();\n\n          _this4.textarea.nativeElement.value = _this4.currentText || '';\n\n          _this4.autosizeDirective.resizeToFitContent();\n        }\n      });\n    }\n  }]);\n\n  return NzTextEditComponent;\n}();\n\nNzTextEditComponent.ɵfac = function NzTextEditComponent_Factory(t) {\n  return new (t || NzTextEditComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService));\n};\n\nNzTextEditComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTextEditComponent,\n  selectors: [[\"nz-text-edit\"]],\n  viewQuery: function NzTextEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n      ɵngcc0.ɵɵviewQuery(NzAutosizeDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textarea = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.autosizeDirective = _t.first);\n    }\n  },\n  inputs: {\n    text: \"text\"\n  },\n  outputs: {\n    startEditing: \"startEditing\",\n    endEditing: \"endEditing\"\n  },\n  exportAs: [\"nzTextEdit\"],\n  decls: 2,\n  vars: 2,\n  consts: [[\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", \"class\", \"ant-typography-edit\", 3, \"nzTooltipTitle\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-edit\", 3, \"nzTooltipTitle\", \"click\"], [\"nz-icon\", \"\", \"nzType\", \"edit\"], [\"nz-input\", \"\", \"nzAutosize\", \"\", 3, \"input\", \"blur\", \"keydown.esc\", \"keydown.enter\"], [\"textarea\", \"\"], [\"nz-trans-button\", \"\", 1, \"ant-typography-edit-content-confirm\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"enter\"]],\n  template: function NzTextEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzTextEditComponent_button_0_Template, 2, 1, \"button\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzTextEditComponent_ng_container_1_Template, 6, 0, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.editing);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.editing);\n    }\n  },\n  directives: [ɵngcc6.NgIf, ɵngcc3.NzTransButtonDirective, ɵngcc4.NzTooltipDirective, ɵngcc5.NzIconDirective, ɵngcc7.NzInputDirective, ɵngcc7.NzAutosizeDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTextEditComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NzI18nService\n  }];\n};\n\nNzTextEditComponent.propDecorators = {\n  text: [{\n    type: Input\n  }],\n  startEditing: [{\n    type: Output\n  }],\n  endEditing: [{\n    type: Output\n  }],\n  textarea: [{\n    type: ViewChild,\n    args: ['textarea', {\n      static: false\n    }]\n  }],\n  autosizeDirective: [{\n    type: ViewChild,\n    args: [NzAutosizeDirective, {\n      static: false\n    }]\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NZ_CONFIG_MODULE_NAME = 'typography';\nvar EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\n\nvar NzTypographyComponent = /*#__PURE__*/function () {\n  function NzTypographyComponent(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, document, resizeService) {\n    _classCallCheck(this, NzTypographyComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.host = host;\n    this.cdr = cdr;\n    this.viewContainerRef = viewContainerRef;\n    this.renderer = renderer;\n    this.platform = platform;\n    this.i18n = i18n;\n    this.resizeService = resizeService;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzCopyable = false;\n    this.nzEditable = false;\n    this.nzDisabled = false;\n    this.nzExpandable = false;\n    this.nzEllipsis = false;\n    this.nzEllipsisRows = 1;\n    this.nzContentChange = new EventEmitter();\n    this.nzCopy = new EventEmitter();\n    this.nzExpandChange = new EventEmitter(); // This is not a two-way binding output with {@link nzEllipsis}\n\n    this.nzOnEllipsis = new EventEmitter();\n    this.expandableBtnElementCache = null;\n    this.editing = false;\n    this.cssEllipsis = false;\n    this.isEllipsis = true;\n    this.expanded = false;\n    this.ellipsisStr = '...';\n    this.viewInit = false;\n    this.rfaId = -1;\n    this.destroy$ = new Subject();\n    this.windowResizeSubscription = Subscription.EMPTY;\n    this.document = document;\n  }\n\n  _createClass(NzTypographyComponent, [{\n    key: \"onTextCopy\",\n    value: function onTextCopy(text) {\n      this.nzCopy.emit(text);\n    }\n  }, {\n    key: \"onStartEditing\",\n    value: function onStartEditing() {\n      this.editing = true;\n    }\n  }, {\n    key: \"onEndEditing\",\n    value: function onEndEditing(text) {\n      this.editing = false;\n      this.nzContentChange.emit(text);\n\n      if (this.nzContent === text) {\n        this.renderOnNextFrame();\n      }\n    }\n  }, {\n    key: \"onExpand\",\n    value: function onExpand() {\n      this.isEllipsis = false;\n      this.expanded = true;\n      this.nzExpandChange.emit();\n      this.nzOnEllipsis.emit(false);\n    }\n  }, {\n    key: \"canUseCSSEllipsis\",\n    value: function canUseCSSEllipsis() {\n      if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n        return false;\n      } // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n\n\n      if (this.hasEllipsisObservers) {\n        return false;\n      }\n\n      if (this.nzEllipsisRows === 1) {\n        return isStyleSupport('textOverflow');\n      } else {\n        return isStyleSupport('webkitLineClamp');\n      }\n    }\n  }, {\n    key: \"renderOnNextFrame\",\n    value: function renderOnNextFrame() {\n      var _this5 = this;\n\n      cancelRequestAnimationFrame(this.rfaId);\n\n      if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n        return;\n      }\n\n      this.rfaId = reqAnimFrame(function () {\n        _this5.syncEllipsis();\n      });\n    }\n  }, {\n    key: \"getOriginContentViewRef\",\n    value: function getOriginContentViewRef() {\n      var _this6 = this;\n\n      var viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n        content: this.nzContent\n      });\n      viewRef.detectChanges();\n      return {\n        viewRef: viewRef,\n        removeView: function removeView() {\n          _this6.viewContainerRef.remove(_this6.viewContainerRef.indexOf(viewRef));\n        }\n      };\n    }\n  }, {\n    key: \"syncEllipsis\",\n    value: function syncEllipsis() {\n      var _this7 = this;\n\n      if (this.cssEllipsis) {\n        return;\n      }\n\n      var _this$getOriginConten = this.getOriginContentViewRef(),\n          viewRef = _this$getOriginConten.viewRef,\n          removeView = _this$getOriginConten.removeView;\n\n      var fixedNodes = [this.textCopyRef, this.textEditRef].filter(function (e) {\n        return e && e.nativeElement;\n      }).map(function (e) {\n        return e.nativeElement;\n      });\n      var expandableBtnElement = this.getExpandableBtnElement();\n\n      if (expandableBtnElement) {\n        fixedNodes.push(expandableBtnElement);\n      }\n\n      var _measure = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix),\n          contentNodes = _measure.contentNodes,\n          text = _measure.text,\n          ellipsis = _measure.ellipsis;\n\n      removeView();\n      this.ellipsisText = text;\n\n      if (ellipsis !== this.isEllipsis) {\n        this.isEllipsis = ellipsis;\n        this.nzOnEllipsis.emit(ellipsis);\n      }\n\n      var ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n\n      while (ellipsisContainerNativeElement.firstChild) {\n        this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n      }\n\n      contentNodes.forEach(function (n) {\n        _this7.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n      });\n      this.cdr.markForCheck();\n    } // Need to create the element for calculation size before view init\n\n  }, {\n    key: \"getExpandableBtnElement\",\n    value: function getExpandableBtnElement() {\n      if (this.nzExpandable) {\n        var expandText = this.locale ? this.locale.expand : '';\n        var cache = this.expandableBtnElementCache;\n\n        if (!cache || cache.innerText === expandText) {\n          var el = this.document.createElement('a');\n          el.className = EXPAND_ELEMENT_CLASSNAME;\n          el.innerText = expandText;\n          this.expandableBtnElementCache = el;\n        }\n\n        return this.expandableBtnElementCache;\n      } else {\n        this.expandableBtnElementCache = null;\n        return null;\n      }\n    }\n  }, {\n    key: \"renderAndSubscribeWindowResize\",\n    value: function renderAndSubscribeWindowResize() {\n      var _this8 = this;\n\n      if (this.platform.isBrowser) {\n        this.windowResizeSubscription.unsubscribe();\n        this.cssEllipsis = this.canUseCSSEllipsis();\n        this.renderOnNextFrame();\n        this.windowResizeSubscription = this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(function () {\n          return _this8.renderOnNextFrame();\n        });\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this9 = this;\n\n      this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(function () {\n        _this9.locale = _this9.i18n.getLocaleData('Text');\n\n        _this9.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.viewInit = true;\n      this.renderAndSubscribeWindowResize();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzCopyable = changes.nzCopyable,\n          nzEditable = changes.nzEditable,\n          nzExpandable = changes.nzExpandable,\n          nzEllipsis = changes.nzEllipsis,\n          nzContent = changes.nzContent,\n          nzEllipsisRows = changes.nzEllipsisRows,\n          nzSuffix = changes.nzSuffix;\n\n      if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n        if (this.nzEllipsis) {\n          if (this.expanded) {\n            this.windowResizeSubscription.unsubscribe();\n          } else {\n            this.renderAndSubscribeWindowResize();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.expandableBtnElementCache = null;\n      this.windowResizeSubscription.unsubscribe();\n    }\n  }, {\n    key: \"hasEllipsisObservers\",\n    get: function get() {\n      return this.nzOnEllipsis.observers.length > 0;\n    }\n  }, {\n    key: \"canCssEllipsis\",\n    get: function get() {\n      return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n    }\n  }, {\n    key: \"copyText\",\n    get: function get() {\n      return typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent;\n    }\n  }]);\n\n  return NzTypographyComponent;\n}();\n\nNzTypographyComponent.ɵfac = function NzTypographyComponent_Factory(t) {\n  return new (t || NzTypographyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc8.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NzResizeService));\n};\n\nNzTypographyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTypographyComponent,\n  selectors: [[\"nz-typography\"], [\"\", \"nz-typography\", \"\"], [\"p\", \"nz-paragraph\", \"\"], [\"span\", \"nz-text\", \"\"], [\"h1\", \"nz-title\", \"\"], [\"h2\", \"nz-title\", \"\"], [\"h3\", \"nz-title\", \"\"], [\"h4\", \"nz-title\", \"\"]],\n  viewQuery: function NzTypographyComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(NzTextEditComponent, true);\n      ɵngcc0.ɵɵviewQuery(NzTextCopyComponent, true);\n      ɵngcc0.ɵɵviewQuery(_c1, true);\n      ɵngcc0.ɵɵviewQuery(_c2, true);\n      ɵngcc0.ɵɵviewQuery(_c3, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textEditRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textCopyRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ellipsisContainer = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.expandableBtn = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  hostVars: 20,\n  hostBindings: function NzTypographyComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"-webkit-line-clamp\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1 ? ctx.nzEllipsisRows : null);\n      ɵngcc0.ɵɵclassProp(\"ant-typography\", !ctx.editing)(\"ant-typography-edit-content\", ctx.editing)(\"ant-typography-secondary\", ctx.nzType === \"secondary\")(\"ant-typography-warning\", ctx.nzType === \"warning\")(\"ant-typography-danger\", ctx.nzType === \"danger\")(\"ant-typography-disabled\", ctx.nzDisabled)(\"ant-typography-ellipsis\", ctx.nzEllipsis && !ctx.expanded)(\"ant-typography-ellipsis-single-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-multiple-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1);\n    }\n  },\n  inputs: {\n    nzCopyable: \"nzCopyable\",\n    nzEditable: \"nzEditable\",\n    nzDisabled: \"nzDisabled\",\n    nzExpandable: \"nzExpandable\",\n    nzEllipsis: \"nzEllipsis\",\n    nzEllipsisRows: \"nzEllipsisRows\",\n    nzContent: \"nzContent\",\n    nzType: \"nzType\",\n    nzCopyText: \"nzCopyText\",\n    nzSuffix: \"nzSuffix\"\n  },\n  outputs: {\n    nzContentChange: \"nzContentChange\",\n    nzCopy: \"nzCopy\",\n    nzExpandChange: \"nzExpandChange\",\n    nzOnEllipsis: \"nzOnEllipsis\"\n  },\n  exportAs: [\"nzTypography\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c5,\n  decls: 5,\n  vars: 3,\n  consts: [[\"contentTemplate\", \"\"], [4, \"ngIf\"], [3, \"text\", \"endEditing\", \"startEditing\", 4, \"ngIf\"], [3, \"text\", \"textCopy\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"jsEllipsis\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"ellipsisContainer\", \"\"], [\"class\", \"ant-typography-expand\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-typography-expand\", 3, \"click\"], [\"expandable\", \"\"], [3, \"text\", \"endEditing\", \"startEditing\"], [3, \"text\", \"textCopy\"]],\n  template: function NzTypographyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_Template, 4, 2, \"ng-container\", 1);\n      ɵngcc0.ɵɵtemplate(3, NzTypographyComponent_nz_text_edit_3_Template, 1, 1, \"nz-text-edit\", 2);\n      ɵngcc0.ɵɵtemplate(4, NzTypographyComponent_nz_text_copy_4_Template, 1, 1, \"nz-text-copy\", 3);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.editing);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzEditable);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzCopyable && !ctx.editing);\n    }\n  },\n  directives: [ɵngcc6.NgIf, ɵngcc6.NgTemplateOutlet, NzTextEditComponent, NzTextCopyComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTypographyComponent.ctorParameters = function () {\n  return [{\n    type: NzConfigService\n  }, {\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Platform\n  }, {\n    type: NzI18nService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: NzResizeService\n  }];\n};\n\nNzTypographyComponent.propDecorators = {\n  nzCopyable: [{\n    type: Input\n  }],\n  nzEditable: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzExpandable: [{\n    type: Input\n  }],\n  nzEllipsis: [{\n    type: Input\n  }],\n  nzContent: [{\n    type: Input\n  }],\n  nzEllipsisRows: [{\n    type: Input\n  }],\n  nzType: [{\n    type: Input\n  }],\n  nzCopyText: [{\n    type: Input\n  }],\n  nzSuffix: [{\n    type: Input\n  }],\n  nzContentChange: [{\n    type: Output\n  }],\n  nzCopy: [{\n    type: Output\n  }],\n  nzExpandChange: [{\n    type: Output\n  }],\n  nzOnEllipsis: [{\n    type: Output\n  }],\n  textEditRef: [{\n    type: ViewChild,\n    args: [NzTextEditComponent, {\n      static: false\n    }]\n  }],\n  textCopyRef: [{\n    type: ViewChild,\n    args: [NzTextCopyComponent, {\n      static: false\n    }]\n  }],\n  ellipsisContainer: [{\n    type: ViewChild,\n    args: ['ellipsisContainer', {\n      static: false\n    }]\n  }],\n  expandableBtn: [{\n    type: ViewChild,\n    args: ['expandable', {\n      static: false\n    }]\n  }],\n  contentTemplate: [{\n    type: ViewChild,\n    args: ['contentTemplate', {\n      static: false\n    }]\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzCopyable\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzEditable\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzExpandable\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzEllipsis\", void 0);\n\n__decorate([WithConfig(), InputNumber(), __metadata(\"design:type\", Number)], NzTypographyComponent.prototype, \"nzEllipsisRows\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTextCopyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-text-copy',\n      exportAs: 'nzTextCopy',\n      template: \"\\n    <button\\n      nz-tooltip\\n      nz-trans-button\\n      [nzTooltipTitle]=\\\"copied ? locale?.copied : locale?.copy\\\"\\n      class=\\\"ant-typography-copy\\\"\\n      [class.ant-typography-copy-success]=\\\"copied\\\"\\n      (click)=\\\"onClick()\\\"\\n    >\\n      <i nz-icon [nzType]=\\\"copied ? 'check' : 'copy'\\\"></i>\\n    </button>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.Clipboard\n    }, {\n      type: ɵngcc2.NzI18nService\n    }];\n  }, {\n    textCopy: [{\n      type: Output\n    }],\n    text: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTextEditComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-text-edit',\n      exportAs: 'nzTextEdit',\n      template: \"\\n    <button *ngIf=\\\"!editing\\\" [nzTooltipTitle]=\\\"locale?.edit\\\" nz-tooltip nz-trans-button class=\\\"ant-typography-edit\\\" (click)=\\\"onClick()\\\">\\n      <i nz-icon nzType=\\\"edit\\\"></i>\\n    </button>\\n    <ng-container *ngIf=\\\"editing\\\">\\n      <textarea\\n        #textarea\\n        nz-input\\n        nzAutosize\\n        (input)=\\\"onInput($event)\\\"\\n        (blur)=\\\"confirm()\\\"\\n        (keydown.esc)=\\\"onCancel()\\\"\\n        (keydown.enter)=\\\"onEnter($event)\\\"\\n      >\\n      </textarea>\\n      <button nz-trans-button class=\\\"ant-typography-edit-content-confirm\\\" (click)=\\\"confirm()\\\">\\n        <i nz-icon nzType=\\\"enter\\\"></i>\\n      </button>\\n    </ng-container>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.NzI18nService\n    }];\n  }, {\n    startEditing: [{\n      type: Output\n    }],\n    endEditing: [{\n      type: Output\n    }],\n    text: [{\n      type: Input\n    }],\n    textarea: [{\n      type: ViewChild,\n      args: ['textarea', {\n        static: false\n      }]\n    }],\n    autosizeDirective: [{\n      type: ViewChild,\n      args: [NzAutosizeDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTypographyComponent, [{\n    type: Component,\n    args: [{\n      selector: \"\\n  nz-typography,\\n  [nz-typography],\\n  p[nz-paragraph],\\n  span[nz-text],\\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\\n  \",\n      exportAs: 'nzTypography',\n      template: \"\\n    <ng-template #contentTemplate let-content=\\\"content\\\">\\n      <ng-content *ngIf=\\\"!content\\\"></ng-content>\\n      {{ content }}\\n    </ng-template>\\n    <ng-container *ngIf=\\\"!editing\\\">\\n      <ng-container\\n        *ngIf=\\\"\\n          expanded || (!nzExpandable && nzEllipsisRows === 1 && !hasEllipsisObservers) || canCssEllipsis || (nzSuffix && expanded);\\n          else jsEllipsis\\n        \\\"\\n      >\\n        <ng-template [ngTemplateOutlet]=\\\"contentTemplate\\\" [ngTemplateOutletContext]=\\\"{ content: nzContent }\\\"></ng-template>\\n        <ng-container *ngIf=\\\"nzSuffix\\\">{{ nzSuffix }}</ng-container>\\n      </ng-container>\\n      <ng-template #jsEllipsis>\\n        <span #ellipsisContainer></span>\\n        <ng-container *ngIf=\\\"isEllipsis\\\">{{ ellipsisStr }}</ng-container>\\n        <ng-container *ngIf=\\\"nzSuffix\\\">{{ nzSuffix }}</ng-container>\\n        <a #expandable *ngIf=\\\"nzExpandable && isEllipsis\\\" class=\\\"ant-typography-expand\\\" (click)=\\\"onExpand()\\\">{{ locale?.expand }}</a>\\n      </ng-template>\\n    </ng-container>\\n\\n    <nz-text-edit\\n      *ngIf=\\\"nzEditable\\\"\\n      [text]=\\\"nzContent\\\"\\n      (endEditing)=\\\"onEndEditing($event)\\\"\\n      (startEditing)=\\\"onStartEditing()\\\"\\n    ></nz-text-edit>\\n\\n    <nz-text-copy *ngIf=\\\"nzCopyable && !editing\\\" [text]=\\\"copyText\\\" (textCopy)=\\\"onTextCopy($event)\\\"></nz-text-copy>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      host: {\n        '[class.ant-typography]': '!editing',\n        '[class.ant-typography-edit-content]': 'editing',\n        '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n        '[class.ant-typography-warning]': 'nzType === \"warning\"',\n        '[class.ant-typography-danger]': 'nzType === \"danger\"',\n        '[class.ant-typography-disabled]': 'nzDisabled',\n        '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n        '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n        '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n        '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc8.NzConfigService\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc9.Platform\n    }, {\n      type: ɵngcc2.NzI18nService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc10.NzResizeService\n    }];\n  }, {\n    nzCopyable: [{\n      type: Input\n    }],\n    nzEditable: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzExpandable: [{\n      type: Input\n    }],\n    nzEllipsis: [{\n      type: Input\n    }],\n    nzEllipsisRows: [{\n      type: Input\n    }],\n    nzContentChange: [{\n      type: Output\n    }],\n    nzCopy: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzOnEllipsis: [{\n      type: Output\n    }],\n    nzContent: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzCopyText: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    textEditRef: [{\n      type: ViewChild,\n      args: [NzTextEditComponent, {\n        static: false\n      }]\n    }],\n    textCopyRef: [{\n      type: ViewChild,\n      args: [NzTextCopyComponent, {\n        static: false\n      }]\n    }],\n    ellipsisContainer: [{\n      type: ViewChild,\n      args: ['ellipsisContainer', {\n        static: false\n      }]\n    }],\n    expandableBtn: [{\n      type: ViewChild,\n      args: ['expandable', {\n        static: false\n      }]\n    }],\n    contentTemplate: [{\n      type: ViewChild,\n      args: ['contentTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTypographyModule = function NzTypographyModule() {\n  _classCallCheck(this, NzTypographyModule);\n};\n\nNzTypographyModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzTypographyModule\n});\nNzTypographyModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzTypographyModule_Factory(t) {\n    return new (t || NzTypographyModule)();\n  },\n  imports: [[CommonModule, NzIconModule, NzToolTipModule, NzInputModule, NzI18nModule, NzTransButtonModule, ClipboardModule], PlatformModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTypographyModule, {\n    declarations: function declarations() {\n      return [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, NzIconModule, NzToolTipModule, NzInputModule, NzI18nModule, NzTransButtonModule, ClipboardModule];\n    },\n    exports: function exports() {\n      return [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTypographyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NzIconModule, NzToolTipModule, NzInputModule, NzI18nModule, NzTransButtonModule, ClipboardModule],\n      exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule],\n      declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule };","map":{"version":3,"sources":["../../components/typography/text-copy.component.ts","../../components/typography/text-edit.component.ts","../../components/typography/typography.component.ts","../../components/typography/typography.module.ts","../../components/typography/public-api.ts","../../components/typography/ng-zorro-antd-typography.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzI18nService, NzTextI18nInterface } from 'ng-zorro-antd/i18n';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-text-copy',\n  exportAs: 'nzTextCopy',\n  template: `\n    <button\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? locale?.copied : locale?.copy\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <i nz-icon [nzType]=\"copied ? 'check' : 'copy'\"></i>\n    </button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false\n})\nexport class NzTextCopyComponent implements OnInit, OnDestroy {\n  copied = false;\n  copyId: number = -1;\n  locale!: NzTextI18nInterface;\n  nativeElement = this.host.nativeElement;\n  private destroy$ = new Subject();\n\n  @Input() text!: string;\n  @Output() readonly textCopy = new EventEmitter<string>();\n\n  constructor(private host: ElementRef, private cdr: ChangeDetectorRef, private clipboard: Clipboard, private i18n: NzI18nService) {}\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.copyId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onClick(): void {\n    if (this.copied) {\n      return;\n    }\n    this.copied = true;\n    this.cdr.detectChanges();\n    const text = this.text;\n    this.textCopy.emit(text);\n    this.clipboard.copy(text);\n    this.onCopied();\n  }\n\n  onCopied(): void {\n    clearTimeout(this.copyId);\n    this.copyId = setTimeout(() => {\n      this.copied = false;\n      this.cdr.detectChanges();\n    }, 3000);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzI18nService, NzTextI18nInterface } from 'ng-zorro-antd/i18n';\nimport { NzAutosizeDirective } from 'ng-zorro-antd/input';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-text-edit',\n  exportAs: 'nzTextEdit',\n  template: `\n    <button *ngIf=\"!editing\" [nzTooltipTitle]=\"locale?.edit\" nz-tooltip nz-trans-button class=\"ant-typography-edit\" (click)=\"onClick()\">\n      <i nz-icon nzType=\"edit\"></i>\n    </button>\n    <ng-container *ngIf=\"editing\">\n      <textarea\n        #textarea\n        nz-input\n        nzAutosize\n        (input)=\"onInput($event)\"\n        (blur)=\"confirm()\"\n        (keydown.esc)=\"onCancel()\"\n        (keydown.enter)=\"onEnter($event)\"\n      >\n      </textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <i nz-icon nzType=\"enter\"></i>\n      </button>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false\n})\nexport class NzTextEditComponent implements OnInit, OnDestroy {\n  editing = false;\n  locale!: NzTextI18nInterface;\n  private destroy$ = new Subject();\n\n  @Input() text?: string;\n  @Output() readonly startEditing = new EventEmitter<void>();\n  @Output() readonly endEditing = new EventEmitter<string>();\n  @ViewChild('textarea', { static: false }) textarea!: ElementRef<HTMLTextAreaElement>;\n  @ViewChild(NzAutosizeDirective, { static: false }) autosizeDirective!: NzAutosizeDirective;\n\n  beforeText?: string;\n  currentText?: string;\n  nativeElement = this.host.nativeElement;\n  constructor(private host: ElementRef, private cdr: ChangeDetectorRef, private i18n: NzI18nService) {}\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onClick(): void {\n    this.beforeText = this.text;\n    this.currentText = this.beforeText;\n    this.editing = true;\n    this.startEditing.emit();\n    this.focusAndSetValue();\n  }\n\n  confirm(): void {\n    this.editing = false;\n    this.endEditing.emit(this.currentText);\n  }\n\n  onInput(event: Event): void {\n    const target = event.target as HTMLTextAreaElement;\n    this.currentText = target.value;\n  }\n\n  onEnter(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n    this.confirm();\n  }\n\n  onCancel(): void {\n    this.currentText = this.beforeText;\n    this.confirm();\n  }\n\n  focusAndSetValue(): void {\n    setTimeout(() => {\n      if (this.textarea?.nativeElement) {\n        this.textarea.nativeElement.focus();\n        this.textarea.nativeElement.value = this.currentText || '';\n        this.autosizeDirective.resizeToFitContent();\n      }\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput, NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, InputNumber, isStyleSupport, measure } from 'ng-zorro-antd/core/util';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzI18nService, NzTextI18nInterface } from 'ng-zorro-antd/i18n';\n\nimport { NzTextCopyComponent } from './text-copy.component';\nimport { NzTextEditComponent } from './text-edit.component';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\n\n@Component({\n  selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n  exportAs: 'nzTypography',\n  template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded || (!nzExpandable && nzEllipsisRows === 1 && !hasEllipsisObservers) || canCssEllipsis || (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template [ngTemplateOutlet]=\"contentTemplate\" [ngTemplateOutletContext]=\"{ content: nzContent }\"></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">{{ locale?.expand }}</a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy *ngIf=\"nzCopyable && !editing\" [text]=\"copyText\" (textCopy)=\"onTextCopy($event)\"></nz-text-copy>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-typography]': '!editing',\n    '[class.ant-typography-edit-content]': 'editing',\n    '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n    '[class.ant-typography-warning]': 'nzType === \"warning\"',\n    '[class.ant-typography-danger]': 'nzType === \"danger\"',\n    '[class.ant-typography-disabled]': 'nzDisabled',\n    '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n    '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n    '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n    '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n  }\n})\nexport class NzTypographyComponent implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzCopyable: BooleanInput;\n  static ngAcceptInputType_nzEditable: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzExpandable: BooleanInput;\n  static ngAcceptInputType_nzEllipsis: BooleanInput;\n  static ngAcceptInputType_nzEllipsisRows: NumberInput;\n\n  @Input() @InputBoolean() nzCopyable = false;\n  @Input() @InputBoolean() nzEditable = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzExpandable = false;\n  @Input() @InputBoolean() nzEllipsis = false;\n  @Input() nzContent?: string;\n  @Input() @WithConfig() @InputNumber() nzEllipsisRows: number = 1;\n  @Input() nzType: 'secondary' | 'warning' | 'danger' | undefined;\n  @Input() nzCopyText: string | undefined;\n  @Input() nzSuffix: string | undefined;\n  @Output() readonly nzContentChange = new EventEmitter<string>();\n  @Output() readonly nzCopy = new EventEmitter<string>();\n  @Output() readonly nzExpandChange = new EventEmitter<void>();\n  // This is not a two-way binding output with {@link nzEllipsis}\n  @Output() readonly nzOnEllipsis = new EventEmitter<boolean>();\n\n  @ViewChild(NzTextEditComponent, { static: false }) textEditRef?: NzTextEditComponent;\n  @ViewChild(NzTextCopyComponent, { static: false }) textCopyRef?: NzTextCopyComponent;\n  @ViewChild('ellipsisContainer', { static: false }) ellipsisContainer?: ElementRef<HTMLSpanElement>;\n  @ViewChild('expandable', { static: false }) expandableBtn?: ElementRef<HTMLSpanElement>;\n  @ViewChild('contentTemplate', { static: false }) contentTemplate?: TemplateRef<{ content: string }>;\n\n  locale!: NzTextI18nInterface;\n  document: Document;\n  expandableBtnElementCache: HTMLElement | null = null;\n  editing = false;\n  ellipsisText: string | undefined;\n  cssEllipsis: boolean = false;\n  isEllipsis: boolean = true;\n  expanded: boolean = false;\n  ellipsisStr = '...';\n\n  get hasEllipsisObservers(): boolean {\n    return this.nzOnEllipsis.observers.length > 0;\n  }\n\n  get canCssEllipsis(): boolean {\n    return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n  }\n\n  private viewInit = false;\n  private rfaId: number = -1;\n  private destroy$ = new Subject();\n  private windowResizeSubscription = Subscription.EMPTY;\n  get copyText(): string {\n    return (typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent)!;\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private host: ElementRef<HTMLElement>,\n    private cdr: ChangeDetectorRef,\n    private viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private platform: Platform,\n    private i18n: NzI18nService,\n    @Inject(DOCUMENT) document: NzSafeAny,\n    private resizeService: NzResizeService\n  ) {\n    this.document = document;\n  }\n\n  onTextCopy(text: string): void {\n    this.nzCopy.emit(text);\n  }\n\n  onStartEditing(): void {\n    this.editing = true;\n  }\n\n  onEndEditing(text: string): void {\n    this.editing = false;\n    this.nzContentChange.emit(text);\n    if (this.nzContent === text) {\n      this.renderOnNextFrame();\n    }\n  }\n\n  onExpand(): void {\n    this.isEllipsis = false;\n    this.expanded = true;\n    this.nzExpandChange.emit();\n    this.nzOnEllipsis.emit(false);\n  }\n\n  canUseCSSEllipsis(): boolean {\n    if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n      return false;\n    }\n    // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n    if (this.hasEllipsisObservers) {\n      return false;\n    }\n    if (this.nzEllipsisRows === 1) {\n      return isStyleSupport('textOverflow');\n    } else {\n      return isStyleSupport('webkitLineClamp');\n    }\n  }\n\n  renderOnNextFrame(): void {\n    cancelRequestAnimationFrame(this.rfaId);\n    if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n      return;\n    }\n    this.rfaId = reqAnimFrame(() => {\n      this.syncEllipsis();\n    });\n  }\n\n  getOriginContentViewRef(): { viewRef: EmbeddedViewRef<{ content: string }>; removeView(): void } {\n    const viewRef = this.viewContainerRef.createEmbeddedView<{ content: string }>(this.contentTemplate!, {\n      content: this.nzContent!\n    });\n    viewRef.detectChanges();\n    return {\n      viewRef,\n      removeView: () => {\n        this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n      }\n    };\n  }\n\n  syncEllipsis(): void {\n    if (this.cssEllipsis) {\n      return;\n    }\n    const { viewRef, removeView } = this.getOriginContentViewRef();\n    const fixedNodes = [this.textCopyRef, this.textEditRef].filter(e => e && e.nativeElement).map(e => e!.nativeElement);\n    const expandableBtnElement = this.getExpandableBtnElement();\n    if (expandableBtnElement) {\n      fixedNodes.push(expandableBtnElement);\n    }\n    const { contentNodes, text, ellipsis } = measure(\n      this.host.nativeElement,\n      this.nzEllipsisRows,\n      viewRef.rootNodes,\n      fixedNodes,\n      this.ellipsisStr,\n      this.nzSuffix\n    );\n\n    removeView();\n\n    this.ellipsisText = text;\n    if (ellipsis !== this.isEllipsis) {\n      this.isEllipsis = ellipsis;\n      this.nzOnEllipsis.emit(ellipsis);\n    }\n    const ellipsisContainerNativeElement = this.ellipsisContainer!.nativeElement;\n    while (ellipsisContainerNativeElement.firstChild) {\n      this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n    }\n    contentNodes.forEach(n => {\n      this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n    });\n    this.cdr.markForCheck();\n  }\n\n  // Need to create the element for calculation size before view init\n  private getExpandableBtnElement(): HTMLElement | null {\n    if (this.nzExpandable) {\n      const expandText = this.locale ? this.locale.expand : '';\n      const cache = this.expandableBtnElementCache;\n      if (!cache || cache.innerText === expandText) {\n        const el = this.document.createElement('a');\n        el.className = EXPAND_ELEMENT_CLASSNAME;\n        el.innerText = expandText;\n        this.expandableBtnElementCache = el;\n      }\n      return this.expandableBtnElementCache;\n    } else {\n      this.expandableBtnElementCache = null;\n      return null;\n    }\n  }\n\n  private renderAndSubscribeWindowResize(): void {\n    if (this.platform.isBrowser) {\n      this.windowResizeSubscription.unsubscribe();\n      this.cssEllipsis = this.canUseCSSEllipsis();\n      this.renderOnNextFrame();\n      this.windowResizeSubscription = this.resizeService\n        .subscribe()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => this.renderOnNextFrame());\n    }\n  }\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.viewInit = true;\n    this.renderAndSubscribeWindowResize();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzCopyable, nzEditable, nzExpandable, nzEllipsis, nzContent, nzEllipsisRows, nzSuffix } = changes;\n    if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n      if (this.nzEllipsis) {\n        if (this.expanded) {\n          this.windowResizeSubscription.unsubscribe();\n        } else {\n          this.renderAndSubscribeWindowResize();\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.expandableBtnElementCache = null;\n    this.windowResizeSubscription.unsubscribe();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\n\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { NzTextCopyComponent } from './text-copy.component';\nimport { NzTextEditComponent } from './text-edit.component';\nimport { NzTypographyComponent } from './typography.component';\n\n@NgModule({\n  imports: [CommonModule, NzIconModule, NzToolTipModule, NzInputModule, NzI18nModule, NzTransButtonModule, ClipboardModule],\n  exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule],\n  declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n})\nexport class NzTypographyModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport { NzTypographyModule } from './typography.module';\nexport { NzTypographyComponent } from './typography.component';\nexport { NzTextCopyComponent } from './text-copy.component';\nexport { NzTextEditComponent } from './text-edit.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}