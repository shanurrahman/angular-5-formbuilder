{"ast":null,"code":"import _toConsumableArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectorRef, Input, Output, ChangeDetectionStrategy, NgModule, ɵɵdefineInjectable, ɵɵinject, INJECTOR, Injectable, Injector } from '@angular/core';\nimport { notificationMotion } from 'ng-zorro-antd/core/animation';\nimport { NzMNComponent, NzMNContainerComponent, NzMNService } from 'ng-zorro-antd/message';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng-zorro-antd/icon';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/services';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\n\nfunction NzNotificationComponent_div_1_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 16);\n  }\n}\n\nfunction NzNotificationComponent_div_1_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 17);\n  }\n}\n\nfunction NzNotificationComponent_div_1_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 18);\n  }\n}\n\nfunction NzNotificationComponent_div_1_i_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 19);\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    \"ant-notification-notice-with-icon\": a0\n  };\n};\n\nfunction NzNotificationComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵelementContainerStart(3, 9);\n    ɵngcc0.ɵɵtemplate(4, NzNotificationComponent_div_1_i_4_Template, 1, 0, \"i\", 10);\n    ɵngcc0.ɵɵtemplate(5, NzNotificationComponent_div_1_i_5_Template, 1, 0, \"i\", 11);\n    ɵngcc0.ɵɵtemplate(6, NzNotificationComponent_div_1_i_6_Template, 1, 0, \"i\", 12);\n    ɵngcc0.ɵɵtemplate(7, NzNotificationComponent_div_1_i_7_Template, 1, 0, \"i\", 13);\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵelement(8, \"div\", 14);\n    ɵngcc0.ɵɵelement(9, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(10, _c0, ctx_r0.instance.type !== \"blank\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ant-notification-notice-with-icon\", ctx_r0.instance.type !== \"blank\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r0.instance.type);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"info\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"warning\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.instance.title, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.instance.content, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzNotificationComponent_ng_template_2_Template(rf, ctx) {}\n\nfunction NzNotificationComponent_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 21);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var closeIcon_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", closeIcon_r10);\n  }\n}\n\nfunction NzNotificationComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzNotificationComponent_ng_container_5_ng_container_1_Template, 2, 1, \"ng-container\", 20);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.instance.options == null ? null : ctx_r2.instance.options.nzCloseIcon);\n  }\n}\n\nfunction NzNotificationComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 22);\n  }\n}\n\nvar _c1 = function _c1(a0, a1) {\n  return {\n    $implicit: a0,\n    data: a1\n  };\n};\n\nfunction NzNotificationContainerComponent_nz_notification_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-notification\", 5);\n    ɵngcc0.ɵɵlistener(\"destroyed\", function NzNotificationContainerComponent_nz_notification_1_Template_nz_notification_destroyed_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.remove($event.id, $event.userAction);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var instance_r4 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"instance\", instance_r4)(\"placement\", ctx_r0.config.nzPlacement);\n  }\n}\n\nfunction NzNotificationContainerComponent_nz_notification_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-notification\", 5);\n    ɵngcc0.ɵɵlistener(\"destroyed\", function NzNotificationContainerComponent_nz_notification_3_Template_nz_notification_destroyed_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.remove($event.id, $event.userAction);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var instance_r7 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"instance\", instance_r7)(\"placement\", ctx_r1.config.nzPlacement);\n  }\n}\n\nfunction NzNotificationContainerComponent_nz_notification_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-notification\", 5);\n    ɵngcc0.ɵɵlistener(\"destroyed\", function NzNotificationContainerComponent_nz_notification_5_Template_nz_notification_destroyed_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.remove($event.id, $event.userAction);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var instance_r10 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"instance\", instance_r10)(\"placement\", ctx_r2.config.nzPlacement);\n  }\n}\n\nfunction NzNotificationContainerComponent_nz_notification_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-notification\", 5);\n    ɵngcc0.ɵɵlistener(\"destroyed\", function NzNotificationContainerComponent_nz_notification_7_Template_nz_notification_destroyed_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.remove($event.id, $event.userAction);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var instance_r13 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"instance\", instance_r13)(\"placement\", ctx_r3.config.nzPlacement);\n  }\n}\n\nvar NzNotificationComponent = /*#__PURE__*/function (_NzMNComponent) {\n  _inherits(NzNotificationComponent, _NzMNComponent);\n\n  var _super = _createSuper(NzNotificationComponent);\n\n  function NzNotificationComponent(cdr) {\n    var _this;\n\n    _classCallCheck(this, NzNotificationComponent);\n\n    _this = _super.call(this, cdr);\n    _this.destroyed = new EventEmitter();\n    return _this;\n  }\n\n  _createClass(NzNotificationComponent, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(NzNotificationComponent.prototype), \"ngOnDestroy\", this).call(this);\n\n      this.instance.onClick.complete();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      this.instance.onClick.next(event);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.destroy(true);\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      if (this.instance.state === 'enter') {\n        if (this.placement === 'topLeft' || this.placement === 'bottomLeft') {\n          return 'enterLeft';\n        } else {\n          return 'enterRight';\n        }\n      } else {\n        return this.instance.state;\n      }\n    }\n  }]);\n\n  return NzNotificationComponent;\n}(NzMNComponent);\n\nNzNotificationComponent.ɵfac = function NzNotificationComponent_Factory(t) {\n  return new (t || NzNotificationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzNotificationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzNotificationComponent,\n  selectors: [[\"nz-notification\"]],\n  inputs: {\n    instance: \"instance\",\n    placement: \"placement\",\n    index: \"index\"\n  },\n  outputs: {\n    destroyed: \"destroyed\"\n  },\n  exportAs: [\"nzNotification\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 8,\n  vars: 12,\n  consts: [[1, \"ant-notification-notice\", \"ant-notification-notice-closable\", 3, \"ngStyle\", \"ngClass\", \"click\", \"mouseenter\", \"mouseleave\"], [\"class\", \"ant-notification-notice-content\", 4, \"ngIf\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"tabindex\", \"0\", 1, \"ant-notification-notice-close\", 3, \"click\"], [1, \"ant-notification-notice-close-x\"], [4, \"ngIf\", \"ngIfElse\"], [\"iconTpl\", \"\"], [1, \"ant-notification-notice-content\"], [1, \"ant-notification-notice-content\", 3, \"ngClass\"], [3, \"ngSwitch\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\", \"class\", \"ant-notification-notice-icon ant-notification-notice-icon-success\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\", \"class\", \"ant-notification-notice-icon ant-notification-notice-icon-info\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\", \"class\", \"ant-notification-notice-icon ant-notification-notice-icon-warning\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"class\", \"ant-notification-notice-icon ant-notification-notice-icon-error\", 4, \"ngSwitchCase\"], [1, \"ant-notification-notice-message\", 3, \"innerHTML\"], [1, \"ant-notification-notice-description\", 3, \"innerHTML\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\", 1, \"ant-notification-notice-icon\", \"ant-notification-notice-icon-success\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\", 1, \"ant-notification-notice-icon\", \"ant-notification-notice-icon-info\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\", 1, \"ant-notification-notice-icon\", \"ant-notification-notice-icon-warning\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", 1, \"ant-notification-notice-icon\", \"ant-notification-notice-icon-error\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"], [\"nz-icon\", \"\", \"nzType\", \"close\", 1, \"ant-notification-close-icon\"]],\n  template: function NzNotificationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function NzNotificationComponent_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"mouseenter\", function NzNotificationComponent_Template_div_mouseenter_0_listener() {\n        return ctx.onEnter();\n      })(\"mouseleave\", function NzNotificationComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onLeave();\n      });\n      ɵngcc0.ɵɵtemplate(1, NzNotificationComponent_div_1_Template, 10, 12, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, NzNotificationComponent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"a\", 3);\n      ɵngcc0.ɵɵlistener(\"click\", function NzNotificationComponent_Template_a_click_3_listener() {\n        return ctx.close();\n      });\n      ɵngcc0.ɵɵelementStart(4, \"span\", 4);\n      ɵngcc0.ɵɵtemplate(5, NzNotificationComponent_ng_container_5_Template, 2, 1, \"ng-container\", 5);\n      ɵngcc0.ɵɵtemplate(6, NzNotificationComponent_ng_template_6_Template, 1, 0, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var _r3 = ɵngcc0.ɵɵreference(7);\n\n      ɵngcc0.ɵɵproperty(\"ngStyle\", (ctx.instance.options == null ? null : ctx.instance.options.nzStyle) || null)(\"ngClass\", (ctx.instance.options == null ? null : ctx.instance.options.nzClass) || \"\")(\"@notificationMotion\", ctx.state);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.instance.template);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.instance.template)(\"ngTemplateOutlet\", ctx.instance.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(9, _c1, ctx, ctx.instance.options == null ? null : ctx.instance.options.nzData));\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.instance.options == null ? null : ctx.instance.options.nzCloseIcon)(\"ngIfElse\", _r3);\n    }\n  },\n  directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc2.NzIconDirective, ɵngcc3.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  data: {\n    animation: [notificationMotion]\n  }\n});\n\nNzNotificationComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\nNzNotificationComponent.propDecorators = {\n  instance: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  index: [{\n    type: Input\n  }],\n  destroyed: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzNotificationComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-notification',\n      exportAs: 'nzNotification',\n      preserveWhitespaces: false,\n      animations: [notificationMotion],\n      template: \"\\n    <div\\n      class=\\\"ant-notification-notice ant-notification-notice-closable\\\"\\n      [ngStyle]=\\\"instance.options?.nzStyle || null\\\"\\n      [ngClass]=\\\"instance.options?.nzClass || ''\\\"\\n      [@notificationMotion]=\\\"state\\\"\\n      (click)=\\\"onClick($event)\\\"\\n      (mouseenter)=\\\"onEnter()\\\"\\n      (mouseleave)=\\\"onLeave()\\\"\\n    >\\n      <div *ngIf=\\\"!instance.template\\\" class=\\\"ant-notification-notice-content\\\">\\n        <div class=\\\"ant-notification-notice-content\\\" [ngClass]=\\\"{ 'ant-notification-notice-with-icon': instance.type !== 'blank' }\\\">\\n          <div [class.ant-notification-notice-with-icon]=\\\"instance.type !== 'blank'\\\">\\n            <ng-container [ngSwitch]=\\\"instance.type\\\">\\n              <i\\n                *ngSwitchCase=\\\"'success'\\\"\\n                nz-icon\\n                nzType=\\\"check-circle\\\"\\n                class=\\\"ant-notification-notice-icon ant-notification-notice-icon-success\\\"\\n              ></i>\\n              <i\\n                *ngSwitchCase=\\\"'info'\\\"\\n                nz-icon\\n                nzType=\\\"info-circle\\\"\\n                class=\\\"ant-notification-notice-icon ant-notification-notice-icon-info\\\"\\n              ></i>\\n              <i\\n                *ngSwitchCase=\\\"'warning'\\\"\\n                nz-icon\\n                nzType=\\\"exclamation-circle\\\"\\n                class=\\\"ant-notification-notice-icon ant-notification-notice-icon-warning\\\"\\n              ></i>\\n              <i\\n                *ngSwitchCase=\\\"'error'\\\"\\n                nz-icon\\n                nzType=\\\"close-circle\\\"\\n                class=\\\"ant-notification-notice-icon ant-notification-notice-icon-error\\\"\\n              ></i>\\n            </ng-container>\\n            <div class=\\\"ant-notification-notice-message\\\" [innerHTML]=\\\"instance.title\\\"></div>\\n            <div class=\\\"ant-notification-notice-description\\\" [innerHTML]=\\\"instance.content\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n      <ng-template\\n        [ngIf]=\\\"instance.template\\\"\\n        [ngTemplateOutlet]=\\\"instance.template!\\\"\\n        [ngTemplateOutletContext]=\\\"{ $implicit: this, data: instance.options?.nzData }\\\"\\n      >\\n      </ng-template>\\n      <a tabindex=\\\"0\\\" class=\\\"ant-notification-notice-close\\\" (click)=\\\"close()\\\">\\n        <span class=\\\"ant-notification-notice-close-x\\\">\\n          <ng-container *ngIf=\\\"instance.options?.nzCloseIcon; else iconTpl\\\">\\n            <ng-container *nzStringTemplateOutlet=\\\"instance.options?.nzCloseIcon; let closeIcon\\\">\\n              <i nz-icon [nzType]=\\\"closeIcon\\\"></i>\\n            </ng-container>\\n          </ng-container>\\n          <ng-template #iconTpl>\\n            <i nz-icon nzType=\\\"close\\\" class=\\\"ant-notification-close-icon\\\"></i>\\n          </ng-template>\\n        </span>\\n      </a>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    destroyed: [{\n      type: Output\n    }],\n    instance: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_CONFIG_MODULE_NAME = 'notification';\nvar NZ_NOTIFICATION_DEFAULT_CONFIG = {\n  nzTop: '24px',\n  nzBottom: '24px',\n  nzPlacement: 'topRight',\n  nzDuration: 4500,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzAnimate: true\n};\n\nvar NzNotificationContainerComponent = /*#__PURE__*/function (_NzMNContainerCompone) {\n  _inherits(NzNotificationContainerComponent, _NzMNContainerCompone);\n\n  var _super2 = _createSuper(NzNotificationContainerComponent);\n\n  function NzNotificationContainerComponent(cdr, nzConfigService) {\n    var _this2;\n\n    _classCallCheck(this, NzNotificationContainerComponent);\n\n    _this2 = _super2.call(this, cdr, nzConfigService);\n    _this2.instances = [];\n    _this2.topLeftInstances = [];\n    _this2.topRightInstances = [];\n    _this2.bottomLeftInstances = [];\n    _this2.bottomRightInstances = [];\n    return _this2;\n  }\n\n  _createClass(NzNotificationContainerComponent, [{\n    key: \"create\",\n    value: function create(notification) {\n      var noti = this.onCreate(notification);\n      var key = noti.options.nzKey;\n      var notificationWithSameKey = this.instances.find(function (msg) {\n        return msg.options.nzKey === notification.options.nzKey;\n      });\n\n      if (key && notificationWithSameKey) {\n        this.replaceNotification(notificationWithSameKey, noti);\n      } else {\n        if (this.instances.length >= this.config.nzMaxStack) {\n          this.instances = this.instances.slice(1);\n        }\n\n        this.instances = [].concat(_toConsumableArray(this.instances), [noti]);\n      }\n\n      this.readyInstances();\n      return noti;\n    }\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(instance) {\n      instance.options = this.mergeOptions(instance.options);\n      instance.onClose = new Subject();\n      instance.onClick = new Subject();\n      return instance;\n    }\n  }, {\n    key: \"subscribeConfigChange\",\n    value: function subscribeConfigChange() {\n      var _this3 = this;\n\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(function () {\n        return _this3.updateConfig();\n      });\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig() {\n      this.config = Object.assign(Object.assign(Object.assign({}, NZ_NOTIFICATION_DEFAULT_CONFIG), this.config), this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME));\n      this.top = toCssPixel(this.config.nzTop);\n      this.bottom = toCssPixel(this.config.nzBottom);\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"replaceNotification\",\n    value: function replaceNotification(old, _new) {\n      old.title = _new.title;\n      old.content = _new.content;\n      old.template = _new.template;\n      old.type = _new.type;\n      old.options = _new.options;\n    }\n  }, {\n    key: \"readyInstances\",\n    value: function readyInstances() {\n      this.topLeftInstances = this.instances.filter(function (m) {\n        return m.options.nzPlacement === 'topLeft';\n      });\n      this.topRightInstances = this.instances.filter(function (m) {\n        return m.options.nzPlacement === 'topRight' || !m.options.nzPlacement;\n      });\n      this.bottomLeftInstances = this.instances.filter(function (m) {\n        return m.options.nzPlacement === 'bottomLeft';\n      });\n      this.bottomRightInstances = this.instances.filter(function (m) {\n        return m.options.nzPlacement === 'bottomRight';\n      });\n      this.cdr.detectChanges();\n    }\n  }, {\n    key: \"mergeOptions\",\n    value: function mergeOptions(options) {\n      var _this$config = this.config,\n          nzDuration = _this$config.nzDuration,\n          nzAnimate = _this$config.nzAnimate,\n          nzPauseOnHover = _this$config.nzPauseOnHover,\n          nzPlacement = _this$config.nzPlacement;\n      return Object.assign({\n        nzDuration: nzDuration,\n        nzAnimate: nzAnimate,\n        nzPauseOnHover: nzPauseOnHover,\n        nzPlacement: nzPlacement\n      }, options);\n    }\n  }]);\n\n  return NzNotificationContainerComponent;\n}(NzMNContainerComponent);\n\nNzNotificationContainerComponent.ɵfac = function NzNotificationContainerComponent_Factory(t) {\n  return new (t || NzNotificationContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NzConfigService));\n};\n\nNzNotificationContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzNotificationContainerComponent,\n  selectors: [[\"nz-notification-container\"]],\n  exportAs: [\"nzNotificationContainer\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 8,\n  vars: 20,\n  consts: [[1, \"ant-notification\", \"ant-notification-topLeft\"], [3, \"instance\", \"placement\", \"destroyed\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-notification\", \"ant-notification-topRight\"], [1, \"ant-notification\", \"ant-notification-bottomLeft\"], [1, \"ant-notification\", \"ant-notification-bottomRight\"], [3, \"instance\", \"placement\", \"destroyed\"]],\n  template: function NzNotificationContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzNotificationContainerComponent_nz_notification_1_Template, 1, 2, \"nz-notification\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, NzNotificationContainerComponent_nz_notification_3_Template, 1, 2, \"nz-notification\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n      ɵngcc0.ɵɵtemplate(5, NzNotificationContainerComponent_nz_notification_5_Template, 1, 2, \"nz-notification\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 4);\n      ɵngcc0.ɵɵtemplate(7, NzNotificationContainerComponent_nz_notification_7_Template, 1, 2, \"nz-notification\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"top\", ctx.top)(\"left\", \"0px\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.topLeftInstances);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"top\", ctx.top)(\"right\", \"0px\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.topRightInstances);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"bottom\", ctx.bottom)(\"left\", \"0px\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.bottomLeftInstances);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"bottom\", ctx.bottom)(\"right\", \"0px\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.bottomRightInstances);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, NzNotificationComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzNotificationContainerComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NzConfigService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzNotificationContainerComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-notification-container',\n      exportAs: 'nzNotificationContainer',\n      preserveWhitespaces: false,\n      template: \"\\n    <div class=\\\"ant-notification ant-notification-topLeft\\\" [style.top]=\\\"top\\\" [style.left]=\\\"'0px'\\\">\\n      <nz-notification\\n        *ngFor=\\\"let instance of topLeftInstances\\\"\\n        [instance]=\\\"instance\\\"\\n        [placement]=\\\"config.nzPlacement\\\"\\n        (destroyed)=\\\"remove($event.id, $event.userAction)\\\"\\n      ></nz-notification>\\n    </div>\\n    <div class=\\\"ant-notification ant-notification-topRight\\\" [style.top]=\\\"top\\\" [style.right]=\\\"'0px'\\\">\\n      <nz-notification\\n        *ngFor=\\\"let instance of topRightInstances\\\"\\n        [instance]=\\\"instance\\\"\\n        [placement]=\\\"config.nzPlacement\\\"\\n        (destroyed)=\\\"remove($event.id, $event.userAction)\\\"\\n      ></nz-notification>\\n    </div>\\n    <div class=\\\"ant-notification ant-notification-bottomLeft\\\" [style.bottom]=\\\"bottom\\\" [style.left]=\\\"'0px'\\\">\\n      <nz-notification\\n        *ngFor=\\\"let instance of bottomLeftInstances\\\"\\n        [instance]=\\\"instance\\\"\\n        [placement]=\\\"config.nzPlacement\\\"\\n        (destroyed)=\\\"remove($event.id, $event.userAction)\\\"\\n      ></nz-notification>\\n    </div>\\n    <div class=\\\"ant-notification ant-notification-bottomRight\\\" [style.bottom]=\\\"bottom\\\" [style.right]=\\\"'0px'\\\">\\n      <nz-notification\\n        *ngFor=\\\"let instance of bottomRightInstances\\\"\\n        [instance]=\\\"instance\\\"\\n        [placement]=\\\"config.nzPlacement\\\"\\n        (destroyed)=\\\"remove($event.id, $event.userAction)\\\"\\n      ></nz-notification>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc4.NzConfigService\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzNotificationServiceModule = function NzNotificationServiceModule() {\n  _classCallCheck(this, NzNotificationServiceModule);\n};\n\nNzNotificationServiceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzNotificationServiceModule\n});\nNzNotificationServiceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzNotificationServiceModule_Factory(t) {\n    return new (t || NzNotificationServiceModule)();\n  }\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzNotificationServiceModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzNotificationModule = function NzNotificationModule() {\n  _classCallCheck(this, NzNotificationModule);\n};\n\nNzNotificationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzNotificationModule\n});\nNzNotificationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzNotificationModule_Factory(t) {\n    return new (t || NzNotificationModule)();\n  },\n  imports: [[CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzNotificationModule, {\n    declarations: function declarations() {\n      return [NzNotificationComponent, NzNotificationContainerComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzNotificationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule],\n      declarations: [NzNotificationComponent, NzNotificationContainerComponent],\n      entryComponents: [NzNotificationContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar notificationId = 0;\n\nvar NzNotificationService = /*#__PURE__*/function (_NzMNService) {\n  _inherits(NzNotificationService, _NzMNService);\n\n  var _super3 = _createSuper(NzNotificationService);\n\n  function NzNotificationService(nzSingletonService, overlay, injector) {\n    var _this4;\n\n    _classCallCheck(this, NzNotificationService);\n\n    _this4 = _super3.call(this, nzSingletonService, overlay, injector);\n    _this4.componentPrefix = 'notification-';\n    return _this4;\n  }\n\n  _createClass(NzNotificationService, [{\n    key: \"success\",\n    value: function success(title, content, options) {\n      return this.createInstance({\n        type: 'success',\n        title: title,\n        content: content\n      }, options);\n    }\n  }, {\n    key: \"error\",\n    value: function error(title, content, options) {\n      return this.createInstance({\n        type: 'error',\n        title: title,\n        content: content\n      }, options);\n    }\n  }, {\n    key: \"info\",\n    value: function info(title, content, options) {\n      return this.createInstance({\n        type: 'info',\n        title: title,\n        content: content\n      }, options);\n    }\n  }, {\n    key: \"warning\",\n    value: function warning(title, content, options) {\n      return this.createInstance({\n        type: 'warning',\n        title: title,\n        content: content\n      }, options);\n    }\n  }, {\n    key: \"blank\",\n    value: function blank(title, content, options) {\n      return this.createInstance({\n        type: 'blank',\n        title: title,\n        content: content\n      }, options);\n    }\n  }, {\n    key: \"create\",\n    value: function create(type, title, content, options) {\n      return this.createInstance({\n        type: type,\n        title: title,\n        content: content\n      }, options);\n    }\n  }, {\n    key: \"template\",\n    value: function template(_template, options) {\n      return this.createInstance({\n        template: _template\n      }, options);\n    }\n  }, {\n    key: \"generateMessageId\",\n    value: function generateMessageId() {\n      return \"\".concat(this.componentPrefix, \"-\").concat(notificationId++);\n    }\n  }, {\n    key: \"createInstance\",\n    value: function createInstance(message, options) {\n      this.container = this.withContainer(NzNotificationContainerComponent);\n      return this.container.create(Object.assign(Object.assign({}, message), {\n        createdAt: new Date(),\n        messageId: this.generateMessageId(),\n        options: options\n      }));\n    }\n  }]);\n\n  return NzNotificationService;\n}(NzMNService);\n\nNzNotificationService.ɵfac = function NzNotificationService_Factory(t) {\n  return new (t || NzNotificationService)(ɵngcc0.ɵɵinject(ɵngcc5.NzSingletonService), ɵngcc0.ɵɵinject(ɵngcc6.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector));\n};\n\nNzNotificationService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzNotificationService_Factory() {\n    return new NzNotificationService(ɵɵinject(NzSingletonService), ɵɵinject(Overlay), ɵɵinject(INJECTOR));\n  },\n  token: NzNotificationService,\n  providedIn: NzNotificationServiceModule\n});\n\nNzNotificationService.ctorParameters = function () {\n  return [{\n    type: NzSingletonService\n  }, {\n    type: Overlay\n  }, {\n    type: Injector\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzNotificationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: NzNotificationServiceModule\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc5.NzSingletonService\n    }, {\n      type: ɵngcc6.Overlay\n    }, {\n      type: ɵngcc0.Injector\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzNotificationComponent, NzNotificationContainerComponent, NzNotificationModule, NzNotificationService, NzNotificationServiceModule };","map":{"version":3,"sources":["../../components/notification/notification.component.ts","../../components/notification/notification-container.component.ts","../../components/notification/notification.service.module.ts","../../components/notification/notification.module.ts","../../components/notification/typings.ts","../../components/notification/notification.service.ts","../../components/notification/public-api.ts","../../components/notification/ng-zorro-antd-notification.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, Output, ViewEncapsulation } from '@angular/core';\nimport { notificationMotion } from 'ng-zorro-antd/core/animation';\nimport { NzMNComponent } from 'ng-zorro-antd/message';\n\nimport { NzNotificationData } from './typings';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-notification',\n  exportAs: 'nzNotification',\n  preserveWhitespaces: false,\n  animations: [notificationMotion],\n  template: `\n    <div\n      class=\"ant-notification-notice ant-notification-notice-closable\"\n      [ngStyle]=\"instance.options?.nzStyle || null\"\n      [ngClass]=\"instance.options?.nzClass || ''\"\n      [@notificationMotion]=\"state\"\n      (click)=\"onClick($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div *ngIf=\"!instance.template\" class=\"ant-notification-notice-content\">\n        <div class=\"ant-notification-notice-content\" [ngClass]=\"{ 'ant-notification-notice-with-icon': instance.type !== 'blank' }\">\n          <div [class.ant-notification-notice-with-icon]=\"instance.type !== 'blank'\">\n            <ng-container [ngSwitch]=\"instance.type\">\n              <i\n                *ngSwitchCase=\"'success'\"\n                nz-icon\n                nzType=\"check-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-success\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'info'\"\n                nz-icon\n                nzType=\"info-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-info\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'warning'\"\n                nz-icon\n                nzType=\"exclamation-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-warning\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'error'\"\n                nz-icon\n                nzType=\"close-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-error\"\n              ></i>\n            </ng-container>\n            <div class=\"ant-notification-notice-message\" [innerHTML]=\"instance.title\"></div>\n            <div class=\"ant-notification-notice-description\" [innerHTML]=\"instance.content\"></div>\n          </div>\n        </div>\n      </div>\n      <ng-template\n        [ngIf]=\"instance.template\"\n        [ngTemplateOutlet]=\"instance.template!\"\n        [ngTemplateOutletContext]=\"{ $implicit: this, data: instance.options?.nzData }\"\n      >\n      </ng-template>\n      <a tabindex=\"0\" class=\"ant-notification-notice-close\" (click)=\"close()\">\n        <span class=\"ant-notification-notice-close-x\">\n          <ng-container *ngIf=\"instance.options?.nzCloseIcon; else iconTpl\">\n            <ng-container *nzStringTemplateOutlet=\"instance.options?.nzCloseIcon; let closeIcon\">\n              <i nz-icon [nzType]=\"closeIcon\"></i>\n            </ng-container>\n          </ng-container>\n          <ng-template #iconTpl>\n            <i nz-icon nzType=\"close\" class=\"ant-notification-close-icon\"></i>\n          </ng-template>\n        </span>\n      </a>\n    </div>\n  `\n})\nexport class NzNotificationComponent extends NzMNComponent implements OnDestroy {\n  @Input() instance!: Required<NzNotificationData>;\n  @Input() placement?: string;\n  @Input() index!: number;\n  @Output() readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  constructor(cdr: ChangeDetectorRef) {\n    super(cdr);\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.instance.onClick.complete();\n  }\n\n  onClick(event: MouseEvent): void {\n    this.instance.onClick.next(event);\n  }\n\n  close(): void {\n    this.destroy(true);\n  }\n\n  get state(): string | undefined {\n    if (this.instance.state === 'enter') {\n      if (this.placement === 'topLeft' || this.placement === 'bottomLeft') {\n        return 'enterLeft';\n      } else {\n        return 'enterRight';\n      }\n    } else {\n      return this.instance.state;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { NotificationConfig, NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\n\nimport { NzMNContainerComponent } from 'ng-zorro-antd/message';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzNotificationData, NzNotificationDataOptions } from './typings';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'notification';\n\nconst NZ_NOTIFICATION_DEFAULT_CONFIG: Required<NotificationConfig> = {\n  nzTop: '24px',\n  nzBottom: '24px',\n  nzPlacement: 'topRight',\n  nzDuration: 4500,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzAnimate: true\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-notification-container',\n  exportAs: 'nzNotificationContainer',\n  preserveWhitespaces: false,\n  template: `\n    <div class=\"ant-notification ant-notification-topLeft\" [style.top]=\"top\" [style.left]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of topLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div class=\"ant-notification ant-notification-topRight\" [style.top]=\"top\" [style.right]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of topRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div class=\"ant-notification ant-notification-bottomLeft\" [style.bottom]=\"bottom\" [style.left]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of bottomLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div class=\"ant-notification ant-notification-bottomRight\" [style.bottom]=\"bottom\" [style.right]=\"'0px'\">\n      <nz-notification\n        *ngFor=\"let instance of bottomRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n  `\n})\nexport class NzNotificationContainerComponent extends NzMNContainerComponent {\n  bottom?: string | null;\n  top?: string | null;\n  config!: Required<NotificationConfig>; // initialized by parent class constructor\n  instances: Array<Required<NzNotificationData>> = [];\n  topLeftInstances: Array<Required<NzNotificationData>> = [];\n  topRightInstances: Array<Required<NzNotificationData>> = [];\n  bottomLeftInstances: Array<Required<NzNotificationData>> = [];\n  bottomRightInstances: Array<Required<NzNotificationData>> = [];\n\n  constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService) {\n    super(cdr, nzConfigService);\n  }\n\n  create(notification: NzNotificationData): Required<NzNotificationData> {\n    const noti = this.onCreate(notification);\n    const key = noti.options.nzKey;\n    const notificationWithSameKey = this.instances.find(\n      msg => msg.options.nzKey === (notification.options as Required<NzNotificationDataOptions>).nzKey\n    );\n    if (key && notificationWithSameKey) {\n      this.replaceNotification(notificationWithSameKey, noti);\n    } else {\n      if (this.instances.length >= this.config.nzMaxStack) {\n        this.instances = this.instances.slice(1);\n      }\n      this.instances = [...this.instances, noti];\n    }\n\n    this.readyInstances();\n\n    return noti;\n  }\n\n  protected onCreate(instance: NzNotificationData): Required<NzNotificationData> {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject<boolean>();\n    instance.onClick = new Subject<MouseEvent>();\n    return instance as Required<NzNotificationData>;\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.updateConfig());\n  }\n\n  protected updateConfig(): void {\n    this.config = {\n      ...NZ_NOTIFICATION_DEFAULT_CONFIG,\n      ...this.config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME)\n    };\n\n    this.top = toCssPixel(this.config.nzTop!);\n    this.bottom = toCssPixel(this.config.nzBottom!);\n\n    this.cdr.markForCheck();\n  }\n\n  private replaceNotification(old: NzNotificationData, _new: NzNotificationData): void {\n    old.title = _new.title;\n    old.content = _new.content;\n    old.template = _new.template;\n    old.type = _new.type;\n    old.options = _new.options;\n  }\n\n  protected readyInstances(): void {\n    this.topLeftInstances = this.instances.filter(m => m.options.nzPlacement === 'topLeft');\n    this.topRightInstances = this.instances.filter(m => m.options.nzPlacement === 'topRight' || !m.options.nzPlacement);\n    this.bottomLeftInstances = this.instances.filter(m => m.options.nzPlacement === 'bottomLeft');\n    this.bottomRightInstances = this.instances.filter(m => m.options.nzPlacement === 'bottomRight');\n\n    this.cdr.detectChanges();\n  }\n\n  protected mergeOptions(options?: NzNotificationDataOptions): NzNotificationDataOptions {\n    const { nzDuration, nzAnimate, nzPauseOnHover, nzPlacement } = this.config;\n    return { nzDuration, nzAnimate, nzPauseOnHover, nzPlacement: nzPlacement, ...options };\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzNotificationServiceModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzNotificationContainerComponent } from './notification-container.component';\nimport { NzNotificationComponent } from './notification.component';\nimport { NzNotificationServiceModule } from './notification.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule],\n  declarations: [NzNotificationComponent, NzNotificationContainerComponent],\n  entryComponents: [NzNotificationContainerComponent]\n})\nexport class NzNotificationModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\n\nimport { NgClassInterface, NgStyleInterface } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\n\nexport type NzNotificationPlacement = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nexport interface NzNotificationDataOptions<T = {}> {\n  nzKey?: string;\n  nzStyle?: NgStyleInterface;\n  nzClass?: NgClassInterface | string;\n  nzCloseIcon?: TemplateRef<void> | string;\n  nzPlacement?: NzNotificationPlacement;\n  nzData?: T;\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\nexport interface NzNotificationData {\n  content?: string | TemplateRef<void>;\n  createdAt?: Date;\n  messageId?: string;\n  options?: NzNotificationDataOptions;\n  state?: 'enter' | 'leave';\n  template?: TemplateRef<{}>;\n  title?: string;\n  type?: 'success' | 'info' | 'warning' | 'error' | 'blank' | string;\n\n  // observables exposed to users\n  onClose?: Subject<boolean>;\n  onClick?: Subject<MouseEvent>;\n}\n\nexport type NzNotificationRef = Pick<Required<NzNotificationData>, 'onClose' | 'onClick' | 'messageId'>;\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Injectable, Injector, TemplateRef } from '@angular/core';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { NzMNService } from 'ng-zorro-antd/message';\n\nimport { NzNotificationContainerComponent } from './notification-container.component';\nimport { NzNotificationServiceModule } from './notification.service.module';\nimport { NzNotificationData, NzNotificationDataOptions, NzNotificationRef } from './typings';\n\nlet notificationId = 0;\n\n@Injectable({\n  providedIn: NzNotificationServiceModule\n})\nexport class NzNotificationService extends NzMNService {\n  protected container!: NzNotificationContainerComponent;\n  protected componentPrefix = 'notification-';\n\n  constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector) {\n    super(nzSingletonService, overlay, injector);\n  }\n\n  success(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'success', title, content }, options);\n  }\n\n  error(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'error', title, content }, options);\n  }\n\n  info(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'info', title, content }, options);\n  }\n\n  warning(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'warning', title, content }, options);\n  }\n\n  blank(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ type: 'blank', title, content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'blank' | string,\n    title: string,\n    content: string,\n    options?: NzNotificationDataOptions\n  ): NzNotificationRef {\n    return this.createInstance({ type, title, content }, options);\n  }\n\n  template(template: TemplateRef<{}>, options?: NzNotificationDataOptions): NzNotificationRef {\n    return this.createInstance({ template }, options);\n  }\n\n  protected generateMessageId(): string {\n    return `${this.componentPrefix}-${notificationId++}`;\n  }\n\n  private createInstance(message: NzNotificationData, options?: NzNotificationDataOptions): NzNotificationRef {\n    this.container = this.withContainer(NzNotificationContainerComponent);\n\n    return this.container.create({\n      ...message,\n      ...{\n        createdAt: new Date(),\n        messageId: this.generateMessageId(),\n        options\n      }\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './notification.component';\nexport * from './notification.module';\nexport * from './typings';\nexport * from './notification.service';\nexport * from './notification.service.module';\nexport * from './notification-container.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}