{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { CdkConnectedOverlay, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport { Directive, NgModule } from '@angular/core';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\n\nvar NzConnectedOverlayDirective = function NzConnectedOverlayDirective(cdkConnectedOverlay) {\n  _classCallCheck(this, NzConnectedOverlayDirective);\n\n  this.cdkConnectedOverlay = cdkConnectedOverlay;\n  this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\n};\n\nNzConnectedOverlayDirective.ɵfac = function NzConnectedOverlayDirective_Factory(t) {\n  return new (t || NzConnectedOverlayDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkConnectedOverlay));\n};\n\nNzConnectedOverlayDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzConnectedOverlayDirective,\n  selectors: [[\"\", \"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\"]],\n  exportAs: [\"nzConnectedOverlay\"]\n});\n\nNzConnectedOverlayDirective.ctorParameters = function () {\n  return [{\n    type: CdkConnectedOverlay\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzConnectedOverlayDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkConnectedOverlay][nzConnectedOverlay]',\n      exportAs: 'nzConnectedOverlay'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.CdkConnectedOverlay\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzOverlayModule = function NzOverlayModule() {\n  _classCallCheck(this, NzOverlayModule);\n};\n\nNzOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzOverlayModule\n});\nNzOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzOverlayModule_Factory(t) {\n    return new (t || NzOverlayModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzOverlayModule, {\n    declarations: [NzConnectedOverlayDirective],\n    exports: [NzConnectedOverlayDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzOverlayModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzConnectedOverlayDirective],\n      exports: [NzConnectedOverlayDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar POSITION_MAP = {\n  top: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'top'\n  }, {\n    overlayX: 'center',\n    overlayY: 'bottom'\n  }),\n  topCenter: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'top'\n  }, {\n    overlayX: 'center',\n    overlayY: 'bottom'\n  }),\n  topLeft: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'top'\n  }, {\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }),\n  topRight: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'top'\n  }, {\n    overlayX: 'end',\n    overlayY: 'bottom'\n  }),\n  right: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'center'\n  }, {\n    overlayX: 'start',\n    overlayY: 'center'\n  }),\n  rightTop: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'top'\n  }, {\n    overlayX: 'start',\n    overlayY: 'top'\n  }),\n  rightBottom: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'bottom'\n  }, {\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }),\n  bottom: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'bottom'\n  }, {\n    overlayX: 'center',\n    overlayY: 'top'\n  }),\n  bottomCenter: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'bottom'\n  }, {\n    overlayX: 'center',\n    overlayY: 'top'\n  }),\n  bottomLeft: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'bottom'\n  }, {\n    overlayX: 'start',\n    overlayY: 'top'\n  }),\n  bottomRight: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'bottom'\n  }, {\n    overlayX: 'end',\n    overlayY: 'top'\n  }),\n  left: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'center'\n  }, {\n    overlayX: 'end',\n    overlayY: 'center'\n  }),\n  leftTop: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'top'\n  }, {\n    overlayX: 'end',\n    overlayY: 'top'\n  }),\n  leftBottom: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'bottom'\n  }, {\n    overlayX: 'end',\n    overlayY: 'bottom'\n  })\n};\nvar DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\nvar DEFAULT_CASCADER_POSITIONS = [POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight, POSITION_MAP.topLeft, POSITION_MAP.topRight];\nvar DEFAULT_MENTION_TOP_POSITIONS = [new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'bottom'\n}, {\n  overlayX: 'start',\n  overlayY: 'bottom'\n}), new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'bottom'\n}, {\n  overlayX: 'end',\n  overlayY: 'bottom'\n})];\nvar DEFAULT_MENTION_BOTTOM_POSITIONS = [POSITION_MAP.bottomLeft, new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'bottom'\n}, {\n  overlayX: 'end',\n  overlayY: 'top'\n})];\n\nfunction getPlacementName(position) {\n  for (var placement in POSITION_MAP) {\n    if (position.connectionPair.originX === POSITION_MAP[placement].originX && position.connectionPair.originY === POSITION_MAP[placement].originY && position.connectionPair.overlayX === POSITION_MAP[placement].overlayX && position.connectionPair.overlayY === POSITION_MAP[placement].overlayY) {\n      return placement;\n    }\n  }\n\n  return undefined;\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DEFAULT_CASCADER_POSITIONS, DEFAULT_MENTION_BOTTOM_POSITIONS, DEFAULT_MENTION_TOP_POSITIONS, DEFAULT_TOOLTIP_POSITIONS, NzConnectedOverlayDirective, NzOverlayModule, POSITION_MAP, getPlacementName };","map":{"version":3,"sources":["../../components/core/overlay/nz-connected-overlay.ts","../../components/core/overlay/nz-overlay.module.ts","../../components/core/overlay/overlay-position.ts","../../components/core/overlay/public-api.ts","../../components/core/overlay/ng-zorro-antd-core-overlay.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkConnectedOverlay } from '@angular/cdk/overlay';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[cdkConnectedOverlay][nzConnectedOverlay]',\n  exportAs: 'nzConnectedOverlay'\n})\nexport class NzConnectedOverlayDirective {\n  constructor(private cdkConnectedOverlay: CdkConnectedOverlay) {\n    this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\nimport { NzConnectedOverlayDirective } from './nz-connected-overlay';\n\n@NgModule({\n  declarations: [NzConnectedOverlayDirective],\n  exports: [NzConnectedOverlayDirective]\n})\nexport class NzOverlayModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ConnectedOverlayPositionChange, ConnectionPositionPair } from '@angular/cdk/overlay';\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n  top: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\n  topCenter: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\n  topLeft: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n  topRight: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n  right: new ConnectionPositionPair({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }),\n  rightTop: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'top' }),\n  rightBottom: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\n  bottom: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\n  bottomCenter: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\n  bottomLeft: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n  bottomRight: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n  left: new ConnectionPositionPair({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }),\n  leftTop: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' }),\n  leftBottom: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\n};\n\nexport const DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\n\nexport const DEFAULT_CASCADER_POSITIONS = [POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight, POSITION_MAP.topLeft, POSITION_MAP.topRight];\n\nexport const DEFAULT_MENTION_TOP_POSITIONS = [\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\n];\n\nexport const DEFAULT_MENTION_BOTTOM_POSITIONS = [\n  POSITION_MAP.bottomLeft,\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' })\n];\n\nexport function getPlacementName(position: ConnectedOverlayPositionChange): string | undefined {\n  for (const placement in POSITION_MAP) {\n    if (\n      position.connectionPair.originX === POSITION_MAP[placement].originX &&\n      position.connectionPair.originY === POSITION_MAP[placement].originY &&\n      position.connectionPair.overlayX === POSITION_MAP[placement].overlayX &&\n      position.connectionPair.overlayY === POSITION_MAP[placement].overlayY\n    ) {\n      return placement;\n    }\n  }\n  return undefined;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './nz-connected-overlay';\nexport * from './nz-overlay.module';\nexport * from './overlay-position';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}