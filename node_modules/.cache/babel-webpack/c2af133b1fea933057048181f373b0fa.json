{"ast":null,"code":"import _toConsumableArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata } from 'tslib';\nimport { BACKSPACE } from '@angular/cdk/keycodes';\nimport { CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { Injectable, EventEmitter, Component, Self, Injector, forwardRef, Renderer2, ChangeDetectorRef, ElementRef, Host, Optional, Input, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { slideMotion, zoomMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzTreeBaseService, NzTreeBase, NzTreeHigherOrderServiceToken } from 'ng-zorro-antd/core/tree';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzSelectSearchComponent, NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\nimport { merge, of } from 'rxjs';\nimport { tap, filter } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/overlay';\nimport * as ɵngcc5 from '@angular/common';\nimport * as ɵngcc6 from 'ng-zorro-antd/tree';\nimport * as ɵngcc7 from 'ng-zorro-antd/empty';\nimport * as ɵngcc8 from 'ng-zorro-antd/select';\nvar _c0 = [\"nzTreeTemplate\"];\nvar _c1 = [\"treeRef\"];\n\nfunction NzTreeSelectComponent_ng_template_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 11);\n    ɵngcc0.ɵɵelement(1, \"nz-embed-empty\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzComponentName\", \"tree-select\")(\"specificContent\", ctx_r8.nzNotFoundContent);\n  }\n}\n\nvar _c2 = function _c2() {\n  return [];\n};\n\nfunction NzTreeSelectComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"nz-tree\", 8, 9);\n    ɵngcc0.ɵɵlistener(\"nzExpandChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzExpandChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onExpandedKeysChange($event);\n    })(\"nzClick\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzClick_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.nzTreeClick.emit($event);\n    })(\"nzCheckedKeysChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzCheckedKeysChange_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.updateSelectedNodes();\n    })(\"nzSelectedKeysChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzSelectedKeysChange_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.updateSelectedNodes();\n    })(\"nzCheckBoxChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzCheckBoxChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.nzTreeCheckBoxChange.emit($event);\n    })(\"nzSearchValueChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzSearchValueChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.setSearchValues($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NzTreeSelectComponent_ng_template_0_span_3_Template, 2, 2, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-select-dropdown-placement-bottomLeft\", ctx_r0.dropDownPosition === \"bottom\")(\"ant-select-dropdown-placement-topLeft\", ctx_r0.dropDownPosition === \"top\");\n    ɵngcc0.ɵɵproperty(\"@slideMotion\", \"enter\")(\"ngClass\", ctx_r0.dropdownClassName)(\"@.disabled\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"ngStyle\", ctx_r0.nzDropdownStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hidden\", ctx_r0.isNotFound)(\"nzData\", ctx_r0.nzNodes)(\"nzMultiple\", ctx_r0.nzMultiple)(\"nzSearchValue\", ctx_r0.inputValue)(\"nzHideUnMatched\", ctx_r0.nzHideUnMatched)(\"nzShowIcon\", ctx_r0.nzShowIcon)(\"nzCheckable\", ctx_r0.nzCheckable)(\"nzAsyncData\", ctx_r0.nzAsyncData)(\"nzShowExpand\", ctx_r0.nzShowExpand)(\"nzShowLine\", ctx_r0.nzShowLine)(\"nzExpandedIcon\", ctx_r0.nzExpandedIcon)(\"nzExpandAll\", ctx_r0.nzDefaultExpandAll)(\"nzExpandedKeys\", ctx_r0.expandedKeys)(\"nzCheckedKeys\", ctx_r0.nzCheckable ? ctx_r0.value : ɵngcc0.ɵɵpureFunction0(31, _c2))(\"nzSelectedKeys\", !ctx_r0.nzCheckable ? ctx_r0.value : ɵngcc0.ɵɵpureFunction0(32, _c2))(\"nzTreeTemplate\", ctx_r0.treeTemplate)(\"nzCheckStrictly\", ctx_r0.nzCheckStrictly)(\"nzVirtualItemSize\", ctx_r0.nzVirtualItemSize)(\"nzVirtualMaxBufferPx\", ctx_r0.nzVirtualMaxBufferPx)(\"nzVirtualMinBufferPx\", ctx_r0.nzVirtualMinBufferPx)(\"nzVirtualHeight\", ctx_r0.nzVirtualHeight);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.nzNodes.length === 0 || ctx_r0.isNotFound);\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-select-item\", 15);\n    ɵngcc0.ɵɵlistener(\"@zoomMotion.done\", function NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template_nz_select_item_animation_zoomMotion_done_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r19.updatePosition();\n    })(\"delete\", function NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template_nz_select_item_delete_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var node_r18 = ctx.$implicit;\n      var ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r21.removeSelected(node_r18, true);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var node_r18 = ctx.$implicit;\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"@zoomMotion\", undefined)(\"@.disabled\", ctx_r16.noAnimation == null ? null : ctx_r16.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r16.noAnimation == null ? null : ctx_r16.noAnimation.nzNoAnimation)(\"deletable\", true)(\"disabled\", node_r18.isDisabled || ctx_r16.nzDisabled)(\"label\", ctx_r16.nzDisplayWith(node_r18));\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_nz_select_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-select-item\", 16);\n    ɵngcc0.ɵɵlistener(\"@zoomMotion.done\", function NzTreeSelectComponent_ng_container_2_nz_select_item_3_Template_nz_select_item_animation_zoomMotion_done_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r22.updatePosition();\n    });\n    ɵngcc0.ɵɵpipe(1, \"slice\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"@zoomMotion\", undefined)(\"@.disabled\", ctx_r17.noAnimation == null ? null : ctx_r17.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r17.noAnimation == null ? null : ctx_r17.noAnimation.nzNoAnimation)(\"contentTemplateOutlet\", ctx_r17.nzMaxTagPlaceholder)(\"contentTemplateOutletContext\", ɵngcc0.ɵɵpipeBind2(1, 8, ctx_r17.selectedNodes, ctx_r17.nzMaxTagCount))(\"deletable\", false)(\"disabled\", false)(\"label\", \"+ \" + (ctx_r17.selectedNodes.length - ctx_r17.nzMaxTagCount) + \" ...\");\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template, 1, 6, \"nz-select-item\", 13);\n    ɵngcc0.ɵɵpipe(2, \"slice\");\n    ɵngcc0.ɵɵtemplate(3, NzTreeSelectComponent_ng_container_2_nz_select_item_3_Template, 2, 11, \"nz-select-item\", 14);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind3(2, 3, ctx_r1.selectedNodes, 0, ctx_r1.nzMaxTagCount))(\"ngForTrackBy\", ctx_r1.trackValue);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.selectedNodes.length > ctx_r1.nzMaxTagCount);\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_search_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-select-search\", 17);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NzTreeSelectComponent_nz_select_search_3_Template_nz_select_search_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.onKeyDownInput($event);\n    })(\"isComposingChange\", function NzTreeSelectComponent_nz_select_search_3_Template_nz_select_search_isComposingChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r26 = ɵngcc0.ɵɵnextContext();\n      return ctx_r26.isComposing = $event;\n    })(\"valueChange\", function NzTreeSelectComponent_nz_select_search_3_Template_nz_select_search_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r27 = ɵngcc0.ɵɵnextContext();\n      return ctx_r27.setInputValue($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r2.inputValue)(\"mirrorSync\", ctx_r2.isMultiple)(\"disabled\", ctx_r2.nzDisabled)(\"showInput\", ctx_r2.nzOpen);\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_placeholder_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-select-placeholder\", 18);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"display\", ctx_r3.placeHolderDisplay);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r3.nzPlaceHolder);\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-select-item\", 19);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"deletable\", false)(\"disabled\", false)(\"label\", ctx_r4.nzDisplayWith(ctx_r4.selectedNodes[0]));\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_arrow_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-select-arrow\");\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_clear_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r29 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-select-clear\", 20);\n    ɵngcc0.ɵɵlistener(\"clear\", function NzTreeSelectComponent_nz_select_clear_7_Template_nz_select_clear_clear_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r29);\n      var ctx_r28 = ɵngcc0.ɵɵnextContext();\n      return ctx_r28.onClearSelection();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar NzTreeSelectService = /*#__PURE__*/function (_NzTreeBaseService) {\n  _inherits(NzTreeSelectService, _NzTreeBaseService);\n\n  var _super = _createSuper(NzTreeSelectService);\n\n  function NzTreeSelectService() {\n    _classCallCheck(this, NzTreeSelectService);\n\n    return _super.apply(this, arguments);\n  }\n\n  return NzTreeSelectService;\n}(NzTreeBaseService);\n\nNzTreeSelectService.ɵfac = function NzTreeSelectService_Factory(t) {\n  return ɵNzTreeSelectService_BaseFactory(t || NzTreeSelectService);\n};\n\nNzTreeSelectService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NzTreeSelectService,\n  factory: NzTreeSelectService.ɵfac\n});\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction higherOrderServiceFactory(injector) {\n  return injector.get(NzTreeSelectService);\n}\n\nvar NZ_CONFIG_MODULE_NAME = 'treeSelect';\nvar TREE_SELECT_DEFAULT_CLASS = 'ant-select-dropdown ant-select-tree-dropdown';\n\nvar NzTreeSelectComponent = /*#__PURE__*/function (_NzTreeBase) {\n  _inherits(NzTreeSelectComponent, _NzTreeBase);\n\n  var _super2 = _createSuper(NzTreeSelectComponent);\n\n  function NzTreeSelectComponent(nzTreeService, nzConfigService, renderer, cdr, elementRef, noAnimation) {\n    var _this;\n\n    _classCallCheck(this, NzTreeSelectComponent);\n\n    _this = _super2.call(this, nzTreeService);\n    _this.nzConfigService = nzConfigService;\n    _this.renderer = renderer;\n    _this.cdr = cdr;\n    _this.elementRef = elementRef;\n    _this.noAnimation = noAnimation;\n    _this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    _this.nzAllowClear = true;\n    _this.nzShowExpand = true;\n    _this.nzShowLine = false;\n    _this.nzDropdownMatchSelectWidth = true;\n    _this.nzCheckable = false;\n    _this.nzHideUnMatched = false;\n    _this.nzShowIcon = false;\n    _this.nzShowSearch = false;\n    _this.nzDisabled = false;\n    _this.nzAsyncData = false;\n    _this.nzMultiple = false;\n    _this.nzDefaultExpandAll = false;\n    _this.nzCheckStrictly = false;\n    _this.nzVirtualItemSize = 28;\n    _this.nzVirtualMaxBufferPx = 500;\n    _this.nzVirtualMinBufferPx = 28;\n    _this.nzVirtualHeight = null;\n    _this.nzNodes = [];\n    _this.nzOpen = false;\n    _this.nzSize = 'default';\n    _this.nzPlaceHolder = '';\n    _this.nzDropdownStyle = null;\n\n    _this.nzDisplayWith = function (node) {\n      return node.title;\n    };\n\n    _this.nzMaxTagPlaceholder = null;\n    _this.nzOpenChange = new EventEmitter();\n    _this.nzCleared = new EventEmitter();\n    _this.nzRemoved = new EventEmitter();\n    _this.nzExpandChange = new EventEmitter();\n    _this.nzTreeClick = new EventEmitter();\n    _this.nzTreeCheckBoxChange = new EventEmitter();\n    _this.dropdownClassName = TREE_SELECT_DEFAULT_CLASS;\n    _this.isComposing = false;\n    _this.isDestroy = true;\n    _this.isNotFound = false;\n    _this.inputValue = '';\n    _this.dropDownPosition = 'bottom';\n    _this.selectedNodes = [];\n    _this.expandedKeys = [];\n    _this.value = [];\n\n    _this.onChange = function (_value) {};\n\n    _this.onTouched = function () {};\n\n    _this.renderer.addClass(_this.elementRef.nativeElement, 'ant-select');\n\n    _this.renderer.addClass(_this.elementRef.nativeElement, 'ant-tree-select');\n\n    return _this;\n  }\n\n  _createClass(NzTreeSelectComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.isDestroy = false;\n      this.selectionChangeSubscription = this.subscribeSelectionChange();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.isDestroy = true;\n      this.closeDropDown();\n      this.selectionChangeSubscription.unsubscribe();\n    }\n  }, {\n    key: \"isComposingChange\",\n    value: function isComposingChange(isComposing) {\n      this.isComposing = isComposing;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.nzDisabled = isDisabled;\n      this.closeDropDown();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzNodes = changes.nzNodes,\n          nzDropdownClassName = changes.nzDropdownClassName;\n\n      if (nzNodes) {\n        this.updateSelectedNodes(true);\n      }\n\n      if (nzDropdownClassName) {\n        var className = this.nzDropdownClassName && this.nzDropdownClassName.trim();\n        this.dropdownClassName = className ? \"\".concat(TREE_SELECT_DEFAULT_CLASS, \" \").concat(className) : TREE_SELECT_DEFAULT_CLASS;\n      }\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      var _this2 = this;\n\n      if (isNotNil(value)) {\n        if (this.isMultiple && Array.isArray(value)) {\n          this.value = value;\n        } else {\n          this.value = [value];\n        }\n\n        this.updateSelectedNodes(true);\n      } else {\n        this.value = [];\n        this.selectedNodes.forEach(function (node) {\n          _this2.removeSelected(node, false);\n        });\n        this.selectedNodes = [];\n      }\n\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger() {\n      if (this.nzDisabled || !this.nzDisabled && this.nzOpen) {\n        this.closeDropDown();\n      } else {\n        this.openDropdown();\n\n        if (this.nzShowSearch || this.isMultiple) {\n          this.focusOnInput();\n        }\n      }\n    }\n  }, {\n    key: \"openDropdown\",\n    value: function openDropdown() {\n      if (!this.nzDisabled) {\n        this.nzOpen = true;\n        this.nzOpenChange.emit(this.nzOpen);\n        this.updateCdkConnectedOverlayStatus();\n      }\n    }\n  }, {\n    key: \"closeDropDown\",\n    value: function closeDropDown() {\n      this.onTouched();\n      this.nzOpen = false;\n      this.inputValue = '';\n      this.isNotFound = false;\n      this.nzOpenChange.emit(this.nzOpen);\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"onKeyDownInput\",\n    value: function onKeyDownInput(e) {\n      var keyCode = e.keyCode;\n      var eventTarget = e.target;\n\n      if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\n        e.preventDefault();\n\n        if (this.selectedNodes.length) {\n          var removeNode = this.selectedNodes[this.selectedNodes.length - 1];\n          this.removeSelected(removeNode);\n        }\n      }\n    }\n  }, {\n    key: \"onExpandedKeysChange\",\n    value: function onExpandedKeysChange(value) {\n      this.nzExpandChange.emit(value);\n      this.expandedKeys = _toConsumableArray(value.keys);\n    }\n  }, {\n    key: \"setInputValue\",\n    value: function setInputValue(value) {\n      this.inputValue = value;\n      this.updatePosition();\n    }\n  }, {\n    key: \"removeSelected\",\n    value: function removeSelected(node) {\n      var emit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      node.isSelected = false;\n      node.isChecked = false;\n\n      if (this.nzCheckable) {\n        this.nzTreeService.conduct(node, this.nzCheckStrictly);\n      } else {\n        this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\n      }\n\n      if (emit) {\n        this.nzRemoved.emit(node);\n      }\n    }\n  }, {\n    key: \"focusOnInput\",\n    value: function focusOnInput() {\n      if (this.nzSelectSearchComponent) {\n        this.nzSelectSearchComponent.focus();\n      }\n    }\n  }, {\n    key: \"subscribeSelectionChange\",\n    value: function subscribeSelectionChange() {\n      var _this3 = this;\n\n      return merge(this.nzTreeClick.pipe(tap(function (event) {\n        var node = event.node;\n\n        if (_this3.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\n          node.isChecked = !node.isChecked;\n          node.isHalfChecked = false;\n\n          if (!_this3.nzCheckStrictly) {\n            _this3.nzTreeService.conduct(node);\n          }\n        }\n\n        if (_this3.nzCheckable) {\n          node.isSelected = false;\n        }\n      }), filter(function (event) {\n        var node = event.node;\n        return _this3.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled && node.isSelectable;\n      })), this.nzCheckable ? this.nzTreeCheckBoxChange : of(), this.nzCleared, this.nzRemoved).subscribe(function () {\n        _this3.updateSelectedNodes();\n\n        var value = _this3.selectedNodes.map(function (node) {\n          return node.key;\n        });\n\n        _this3.value = _toConsumableArray(value);\n\n        if (_this3.nzShowSearch || _this3.isMultiple) {\n          _this3.inputValue = '';\n          _this3.isNotFound = false;\n        }\n\n        if (_this3.isMultiple) {\n          _this3.onChange(value);\n\n          _this3.focusOnInput();\n\n          _this3.updatePosition();\n        } else {\n          _this3.closeDropDown();\n\n          _this3.onChange(value.length ? value[0] : null);\n        }\n      });\n    }\n  }, {\n    key: \"updateSelectedNodes\",\n    value: function updateSelectedNodes() {\n      var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (init) {\n        var nodes = this.coerceTreeNodes(this.nzNodes);\n        this.nzTreeService.isMultiple = this.isMultiple;\n        this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n        this.nzTreeService.initTree(nodes);\n\n        if (this.nzCheckable) {\n          this.nzTreeService.conductCheck(this.value, this.nzCheckStrictly);\n        } else {\n          this.nzTreeService.conductSelectedKeys(this.value, this.isMultiple);\n        }\n      }\n\n      this.selectedNodes = _toConsumableArray(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList());\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var _this4 = this;\n\n      setTimeout(function () {\n        if (_this4.cdkConnectedOverlay && _this4.cdkConnectedOverlay.overlayRef) {\n          _this4.cdkConnectedOverlay.overlayRef.updatePosition();\n        }\n      });\n    }\n  }, {\n    key: \"onPositionChange\",\n    value: function onPositionChange(position) {\n      this.dropDownPosition = position.connectionPair.originY;\n    }\n  }, {\n    key: \"onClearSelection\",\n    value: function onClearSelection() {\n      var _this5 = this;\n\n      this.selectedNodes.forEach(function (node) {\n        _this5.removeSelected(node, false);\n      });\n      this.nzCleared.emit();\n    }\n  }, {\n    key: \"setSearchValues\",\n    value: function setSearchValues($event) {\n      var _this6 = this;\n\n      Promise.resolve().then(function () {\n        _this6.isNotFound = (_this6.nzShowSearch || _this6.isMultiple) && !!_this6.inputValue && $event.matchedKeys.length === 0;\n      });\n    }\n  }, {\n    key: \"updateCdkConnectedOverlayStatus\",\n    value: function updateCdkConnectedOverlayStatus() {\n      this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n    }\n  }, {\n    key: \"trackValue\",\n    value: function trackValue(_index, option) {\n      return option.key;\n    }\n  }, {\n    key: \"nzExpandedKeys\",\n    set: function set(value) {\n      this.expandedKeys = value;\n    },\n    get: function get() {\n      return this.expandedKeys;\n    }\n  }, {\n    key: \"treeTemplate\",\n    get: function get() {\n      return this.nzTreeTemplate || this.nzTreeTemplateChild;\n    }\n  }, {\n    key: \"placeHolderDisplay\",\n    get: function get() {\n      return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\n    }\n  }, {\n    key: \"isMultiple\",\n    get: function get() {\n      return this.nzMultiple || this.nzCheckable;\n    }\n  }]);\n\n  return NzTreeSelectComponent;\n}(NzTreeBase);\n\nNzTreeSelectComponent.ɵfac = function NzTreeSelectComponent_Factory(t) {\n  return new (t || NzTreeSelectComponent)(ɵngcc0.ɵɵdirectiveInject(NzTreeSelectService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzNoAnimationDirective, 9));\n};\n\nNzTreeSelectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTreeSelectComponent,\n  selectors: [[\"nz-tree-select\"]],\n  contentQueries: function NzTreeSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, _c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzTreeTemplateChild = _t.first);\n    }\n  },\n  viewQuery: function NzTreeSelectComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(NzSelectSearchComponent, true);\n      ɵngcc0.ɵɵviewQuery(_c1, true);\n      ɵngcc0.ɵɵstaticViewQuery(CdkOverlayOrigin, true);\n      ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzSelectSearchComponent = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.treeRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cdkConnectedOverlay = _t.first);\n    }\n  },\n  hostVars: 20,\n  hostBindings: function NzTreeSelectComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NzTreeSelectComponent_click_HostBindingHandler() {\n        return ctx.trigger();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-select-lg\", ctx.nzSize === \"large\")(\"ant-select-sm\", ctx.nzSize === \"small\")(\"ant-select-enabled\", !ctx.nzDisabled)(\"ant-select-disabled\", ctx.nzDisabled)(\"ant-select-single\", !ctx.isMultiple)(\"ant-select-show-arrow\", !ctx.isMultiple)(\"ant-select-show-search\", !ctx.isMultiple)(\"ant-select-multiple\", ctx.isMultiple)(\"ant-select-allow-clear\", ctx.nzAllowClear)(\"ant-select-open\", ctx.nzOpen);\n    }\n  },\n  inputs: {\n    nzAllowClear: \"nzAllowClear\",\n    nzShowExpand: \"nzShowExpand\",\n    nzShowLine: \"nzShowLine\",\n    nzDropdownMatchSelectWidth: \"nzDropdownMatchSelectWidth\",\n    nzCheckable: \"nzCheckable\",\n    nzHideUnMatched: \"nzHideUnMatched\",\n    nzShowIcon: \"nzShowIcon\",\n    nzShowSearch: \"nzShowSearch\",\n    nzDisabled: \"nzDisabled\",\n    nzAsyncData: \"nzAsyncData\",\n    nzMultiple: \"nzMultiple\",\n    nzDefaultExpandAll: \"nzDefaultExpandAll\",\n    nzCheckStrictly: \"nzCheckStrictly\",\n    nzVirtualItemSize: \"nzVirtualItemSize\",\n    nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\",\n    nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\",\n    nzVirtualHeight: \"nzVirtualHeight\",\n    nzNodes: \"nzNodes\",\n    nzOpen: \"nzOpen\",\n    nzSize: \"nzSize\",\n    nzPlaceHolder: \"nzPlaceHolder\",\n    nzDropdownStyle: \"nzDropdownStyle\",\n    nzDisplayWith: \"nzDisplayWith\",\n    nzMaxTagPlaceholder: \"nzMaxTagPlaceholder\",\n    nzExpandedKeys: \"nzExpandedKeys\",\n    nzExpandedIcon: \"nzExpandedIcon\",\n    nzNotFoundContent: \"nzNotFoundContent\",\n    nzDropdownClassName: \"nzDropdownClassName\",\n    nzMaxTagCount: \"nzMaxTagCount\",\n    nzTreeTemplate: \"nzTreeTemplate\"\n  },\n  outputs: {\n    nzOpenChange: \"nzOpenChange\",\n    nzCleared: \"nzCleared\",\n    nzRemoved: \"nzRemoved\",\n    nzExpandChange: \"nzExpandChange\",\n    nzTreeClick: \"nzTreeClick\",\n    nzTreeCheckBoxChange: \"nzTreeCheckBoxChange\"\n  },\n  exportAs: [\"nzTreeSelect\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NzTreeSelectService, {\n    provide: NzTreeHigherOrderServiceToken,\n    useFactory: higherOrderServiceFactory,\n    deps: [[new Self(), Injector]]\n  }, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NzTreeSelectComponent;\n    }),\n    multi: true\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 12,\n  consts: [[\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayWidth\", \"backdropClick\", \"detach\", \"positionChange\"], [\"cdkOverlayOrigin\", \"\", 1, \"ant-select-selector\"], [4, \"ngIf\"], [3, \"value\", \"mirrorSync\", \"disabled\", \"showInput\", \"keydown\", \"isComposingChange\", \"valueChange\", 4, \"ngIf\"], [3, \"placeholder\", \"display\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"clear\", 4, \"ngIf\"], [3, \"ngClass\", \"nzNoAnimation\", \"ngStyle\"], [\"nzNoAnimation\", \"\", \"nzSelectMode\", \"\", \"nzBlockNode\", \"\", 3, \"hidden\", \"nzData\", \"nzMultiple\", \"nzSearchValue\", \"nzHideUnMatched\", \"nzShowIcon\", \"nzCheckable\", \"nzAsyncData\", \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzExpandAll\", \"nzExpandedKeys\", \"nzCheckedKeys\", \"nzSelectedKeys\", \"nzTreeTemplate\", \"nzCheckStrictly\", \"nzVirtualItemSize\", \"nzVirtualMaxBufferPx\", \"nzVirtualMinBufferPx\", \"nzVirtualHeight\", \"nzExpandChange\", \"nzClick\", \"nzCheckedKeysChange\", \"nzSelectedKeysChange\", \"nzCheckBoxChange\", \"nzSearchValueChange\"], [\"treeRef\", \"\"], [\"class\", \"ant-select-not-found\", 4, \"ngIf\"], [1, \"ant-select-not-found\"], [3, \"nzComponentName\", \"specificContent\"], [3, \"nzNoAnimation\", \"deletable\", \"disabled\", \"label\", \"delete\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"nzNoAnimation\", \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"nzNoAnimation\", \"deletable\", \"disabled\", \"label\", \"delete\"], [3, \"nzNoAnimation\", \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\"], [3, \"value\", \"mirrorSync\", \"disabled\", \"showInput\", \"keydown\", \"isComposingChange\", \"valueChange\"], [3, \"placeholder\"], [3, \"deletable\", \"disabled\", \"label\"], [3, \"clear\"]],\n  template: function NzTreeSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzTreeSelectComponent_ng_template_0_Template, 4, 33, \"ng-template\", 0);\n      ɵngcc0.ɵɵlistener(\"backdropClick\", function NzTreeSelectComponent_Template_ng_template_backdropClick_0_listener() {\n        return ctx.closeDropDown();\n      })(\"detach\", function NzTreeSelectComponent_Template_ng_template_detach_0_listener() {\n        return ctx.closeDropDown();\n      })(\"positionChange\", function NzTreeSelectComponent_Template_ng_template_positionChange_0_listener($event) {\n        return ctx.onPositionChange($event);\n      });\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, NzTreeSelectComponent_ng_container_2_Template, 4, 7, \"ng-container\", 2);\n      ɵngcc0.ɵɵtemplate(3, NzTreeSelectComponent_nz_select_search_3_Template, 1, 4, \"nz-select-search\", 3);\n      ɵngcc0.ɵɵtemplate(4, NzTreeSelectComponent_nz_select_placeholder_4_Template, 1, 3, \"nz-select-placeholder\", 4);\n      ɵngcc0.ɵɵtemplate(5, NzTreeSelectComponent_nz_select_item_5_Template, 1, 3, \"nz-select-item\", 5);\n      ɵngcc0.ɵɵtemplate(6, NzTreeSelectComponent_nz_select_arrow_6_Template, 1, 0, \"nz-select-arrow\", 2);\n      ɵngcc0.ɵɵtemplate(7, NzTreeSelectComponent_nz_select_clear_7_Template, 1, 0, \"nz-select-clear\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayOrigin\", ctx.cdkOverlayOrigin)(\"cdkConnectedOverlayOpen\", ctx.nzOpen)(\"cdkConnectedOverlayHasBackdrop\", true)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-select-tree-dropdown\")(\"cdkConnectedOverlayMinWidth\", ctx.nzDropdownMatchSelectWidth ? null : ctx.triggerWidth)(\"cdkConnectedOverlayWidth\", ctx.nzDropdownMatchSelectWidth ? ctx.triggerWidth : null);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isMultiple);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowSearch);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzPlaceHolder && ctx.selectedNodes.length === 0);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isMultiple && ctx.selectedNodes.length === 1 && !ctx.isComposing && ctx.inputValue === \"\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isMultiple);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzAllowClear && !ctx.nzDisabled && ctx.selectedNodes.length);\n    }\n  },\n  directives: [ɵngcc3.CdkConnectedOverlay, ɵngcc4.NzConnectedOverlayDirective, ɵngcc3.CdkOverlayOrigin, ɵngcc5.NgIf, ɵngcc5.NgClass, ɵngcc2.NzNoAnimationDirective, ɵngcc5.NgStyle, ɵngcc6.NzTreeComponent, ɵngcc7.NzEmbedEmptyComponent, ɵngcc5.NgForOf, ɵngcc8.NzSelectItemComponent, ɵngcc8.NzSelectSearchComponent, ɵngcc8.NzSelectPlaceholderComponent, ɵngcc8.NzSelectArrowComponent, ɵngcc8.NzSelectClearComponent],\n  pipes: [ɵngcc5.SlicePipe],\n  encapsulation: 2,\n  data: {\n    animation: [slideMotion, zoomMotion]\n  }\n});\n\nNzTreeSelectComponent.ctorParameters = function () {\n  return [{\n    type: NzTreeSelectService\n  }, {\n    type: NzConfigService\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nNzTreeSelectComponent.propDecorators = {\n  nzAllowClear: [{\n    type: Input\n  }],\n  nzShowExpand: [{\n    type: Input\n  }],\n  nzShowLine: [{\n    type: Input\n  }],\n  nzDropdownMatchSelectWidth: [{\n    type: Input\n  }],\n  nzCheckable: [{\n    type: Input\n  }],\n  nzHideUnMatched: [{\n    type: Input\n  }],\n  nzShowIcon: [{\n    type: Input\n  }],\n  nzShowSearch: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzAsyncData: [{\n    type: Input\n  }],\n  nzMultiple: [{\n    type: Input\n  }],\n  nzDefaultExpandAll: [{\n    type: Input\n  }],\n  nzCheckStrictly: [{\n    type: Input\n  }],\n  nzVirtualItemSize: [{\n    type: Input\n  }],\n  nzVirtualMaxBufferPx: [{\n    type: Input\n  }],\n  nzVirtualMinBufferPx: [{\n    type: Input\n  }],\n  nzVirtualHeight: [{\n    type: Input\n  }],\n  nzExpandedIcon: [{\n    type: Input\n  }],\n  nzNotFoundContent: [{\n    type: Input\n  }],\n  nzNodes: [{\n    type: Input\n  }],\n  nzOpen: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  nzPlaceHolder: [{\n    type: Input\n  }],\n  nzDropdownStyle: [{\n    type: Input\n  }],\n  nzDropdownClassName: [{\n    type: Input\n  }],\n  nzExpandedKeys: [{\n    type: Input\n  }],\n  nzDisplayWith: [{\n    type: Input\n  }],\n  nzMaxTagCount: [{\n    type: Input\n  }],\n  nzMaxTagPlaceholder: [{\n    type: Input\n  }],\n  nzOpenChange: [{\n    type: Output\n  }],\n  nzCleared: [{\n    type: Output\n  }],\n  nzRemoved: [{\n    type: Output\n  }],\n  nzExpandChange: [{\n    type: Output\n  }],\n  nzTreeClick: [{\n    type: Output\n  }],\n  nzTreeCheckBoxChange: [{\n    type: Output\n  }],\n  nzSelectSearchComponent: [{\n    type: ViewChild,\n    args: [NzSelectSearchComponent, {\n      static: false\n    }]\n  }],\n  treeRef: [{\n    type: ViewChild,\n    args: ['treeRef', {\n      static: false\n    }]\n  }],\n  cdkOverlayOrigin: [{\n    type: ViewChild,\n    args: [CdkOverlayOrigin, {\n      static: true\n    }]\n  }],\n  cdkConnectedOverlay: [{\n    type: ViewChild,\n    args: [CdkConnectedOverlay, {\n      static: false\n    }]\n  }],\n  nzTreeTemplate: [{\n    type: Input\n  }],\n  nzTreeTemplateChild: [{\n    type: ContentChild,\n    args: ['nzTreeTemplate', {\n      static: true\n    }]\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzTreeSelectComponent.prototype, \"nzAllowClear\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzTreeSelectComponent.prototype, \"nzShowExpand\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzTreeSelectComponent.prototype, \"nzShowLine\", void 0);\n\n__decorate([InputBoolean(), WithConfig(), __metadata(\"design:type\", Boolean)], NzTreeSelectComponent.prototype, \"nzDropdownMatchSelectWidth\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzTreeSelectComponent.prototype, \"nzCheckable\", void 0);\n\n__decorate([InputBoolean(), WithConfig(), __metadata(\"design:type\", Boolean)], NzTreeSelectComponent.prototype, \"nzHideUnMatched\", void 0);\n\n__decorate([InputBoolean(), WithConfig(), __metadata(\"design:type\", Boolean)], NzTreeSelectComponent.prototype, \"nzShowIcon\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzTreeSelectComponent.prototype, \"nzShowSearch\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTreeSelectComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTreeSelectComponent.prototype, \"nzAsyncData\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTreeSelectComponent.prototype, \"nzMultiple\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTreeSelectComponent.prototype, \"nzDefaultExpandAll\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTreeSelectComponent.prototype, \"nzCheckStrictly\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", String)], NzTreeSelectComponent.prototype, \"nzSize\", void 0);\n\nvar ɵNzTreeSelectService_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NzTreeSelectService);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTreeSelectService, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTreeSelectComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-select',\n      exportAs: 'nzTreeSelect',\n      animations: [slideMotion, zoomMotion],\n      template: \"\\n    <ng-template\\n      cdkConnectedOverlay\\n      nzConnectedOverlay\\n      [cdkConnectedOverlayOrigin]=\\\"cdkOverlayOrigin\\\"\\n      [cdkConnectedOverlayOpen]=\\\"nzOpen\\\"\\n      [cdkConnectedOverlayHasBackdrop]=\\\"true\\\"\\n      [cdkConnectedOverlayTransformOriginOn]=\\\"'.ant-select-tree-dropdown'\\\"\\n      [cdkConnectedOverlayMinWidth]=\\\"$any(nzDropdownMatchSelectWidth ? null : triggerWidth)\\\"\\n      [cdkConnectedOverlayWidth]=\\\"$any(nzDropdownMatchSelectWidth ? triggerWidth : null)\\\"\\n      (backdropClick)=\\\"closeDropDown()\\\"\\n      (detach)=\\\"closeDropDown()\\\"\\n      (positionChange)=\\\"onPositionChange($event)\\\"\\n    >\\n      <div\\n        [@slideMotion]=\\\"'enter'\\\"\\n        [ngClass]=\\\"dropdownClassName\\\"\\n        [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [class.ant-select-dropdown-placement-bottomLeft]=\\\"dropDownPosition === 'bottom'\\\"\\n        [class.ant-select-dropdown-placement-topLeft]=\\\"dropDownPosition === 'top'\\\"\\n        [ngStyle]=\\\"nzDropdownStyle\\\"\\n      >\\n        <nz-tree\\n          #treeRef\\n          [hidden]=\\\"isNotFound\\\"\\n          nzNoAnimation\\n          nzSelectMode\\n          nzBlockNode\\n          [nzData]=\\\"nzNodes\\\"\\n          [nzMultiple]=\\\"nzMultiple\\\"\\n          [nzSearchValue]=\\\"inputValue\\\"\\n          [nzHideUnMatched]=\\\"nzHideUnMatched\\\"\\n          [nzShowIcon]=\\\"nzShowIcon\\\"\\n          [nzCheckable]=\\\"nzCheckable\\\"\\n          [nzAsyncData]=\\\"nzAsyncData\\\"\\n          [nzShowExpand]=\\\"nzShowExpand\\\"\\n          [nzShowLine]=\\\"nzShowLine\\\"\\n          [nzExpandedIcon]=\\\"nzExpandedIcon\\\"\\n          [nzExpandAll]=\\\"nzDefaultExpandAll\\\"\\n          [nzExpandedKeys]=\\\"expandedKeys\\\"\\n          [nzCheckedKeys]=\\\"nzCheckable ? value : []\\\"\\n          [nzSelectedKeys]=\\\"!nzCheckable ? value : []\\\"\\n          [nzTreeTemplate]=\\\"treeTemplate\\\"\\n          [nzCheckStrictly]=\\\"nzCheckStrictly\\\"\\n          [nzVirtualItemSize]=\\\"nzVirtualItemSize\\\"\\n          [nzVirtualMaxBufferPx]=\\\"nzVirtualMaxBufferPx\\\"\\n          [nzVirtualMinBufferPx]=\\\"nzVirtualMinBufferPx\\\"\\n          [nzVirtualHeight]=\\\"nzVirtualHeight\\\"\\n          (nzExpandChange)=\\\"onExpandedKeysChange($event)\\\"\\n          (nzClick)=\\\"nzTreeClick.emit($event)\\\"\\n          (nzCheckedKeysChange)=\\\"updateSelectedNodes()\\\"\\n          (nzSelectedKeysChange)=\\\"updateSelectedNodes()\\\"\\n          (nzCheckBoxChange)=\\\"nzTreeCheckBoxChange.emit($event)\\\"\\n          (nzSearchValueChange)=\\\"setSearchValues($event)\\\"\\n        ></nz-tree>\\n        <span *ngIf=\\\"nzNodes.length === 0 || isNotFound\\\" class=\\\"ant-select-not-found\\\">\\n          <nz-embed-empty [nzComponentName]=\\\"'tree-select'\\\" [specificContent]=\\\"nzNotFoundContent\\\"></nz-embed-empty>\\n        </span>\\n      </div>\\n    </ng-template>\\n\\n    <div cdkOverlayOrigin class=\\\"ant-select-selector\\\">\\n      <ng-container *ngIf=\\\"isMultiple\\\">\\n        <nz-select-item\\n          *ngFor=\\\"let node of selectedNodes | slice: 0:nzMaxTagCount; trackBy: trackValue\\\"\\n          [@zoomMotion]\\n          [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n          [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n          [deletable]=\\\"true\\\"\\n          [disabled]=\\\"node.isDisabled || nzDisabled\\\"\\n          [label]=\\\"nzDisplayWith(node)\\\"\\n          (@zoomMotion.done)=\\\"updatePosition()\\\"\\n          (delete)=\\\"removeSelected(node, true)\\\"\\n        ></nz-select-item>\\n\\n        <nz-select-item\\n          *ngIf=\\\"selectedNodes.length > nzMaxTagCount\\\"\\n          [@zoomMotion]\\n          (@zoomMotion.done)=\\\"updatePosition()\\\"\\n          [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n          [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n          [contentTemplateOutlet]=\\\"nzMaxTagPlaceholder\\\"\\n          [contentTemplateOutletContext]=\\\"selectedNodes | slice: nzMaxTagCount\\\"\\n          [deletable]=\\\"false\\\"\\n          [disabled]=\\\"false\\\"\\n          [label]=\\\"'+ ' + (selectedNodes.length - nzMaxTagCount) + ' ...'\\\"\\n        ></nz-select-item>\\n      </ng-container>\\n\\n      <nz-select-search\\n        *ngIf=\\\"nzShowSearch\\\"\\n        (keydown)=\\\"onKeyDownInput($event)\\\"\\n        (isComposingChange)=\\\"isComposing = $event\\\"\\n        (valueChange)=\\\"setInputValue($event)\\\"\\n        [value]=\\\"inputValue\\\"\\n        [mirrorSync]=\\\"isMultiple\\\"\\n        [disabled]=\\\"nzDisabled\\\"\\n        [showInput]=\\\"nzOpen\\\"\\n      ></nz-select-search>\\n\\n      <nz-select-placeholder\\n        *ngIf=\\\"nzPlaceHolder && selectedNodes.length === 0\\\"\\n        [placeholder]=\\\"nzPlaceHolder\\\"\\n        [style.display]=\\\"placeHolderDisplay\\\"\\n      ></nz-select-placeholder>\\n\\n      <nz-select-item\\n        *ngIf=\\\"!isMultiple && selectedNodes.length === 1 && !isComposing && inputValue === ''\\\"\\n        [deletable]=\\\"false\\\"\\n        [disabled]=\\\"false\\\"\\n        [label]=\\\"nzDisplayWith(selectedNodes[0])\\\"\\n      ></nz-select-item>\\n\\n      <nz-select-arrow *ngIf=\\\"!isMultiple\\\"></nz-select-arrow>\\n\\n      <nz-select-clear *ngIf=\\\"nzAllowClear && !nzDisabled && selectedNodes.length\\\" (clear)=\\\"onClearSelection()\\\"></nz-select-clear>\\n    </div>\\n  \",\n      providers: [NzTreeSelectService, {\n        provide: NzTreeHigherOrderServiceToken,\n        useFactory: higherOrderServiceFactory,\n        deps: [[new Self(), Injector]]\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NzTreeSelectComponent;\n        }),\n        multi: true\n      }],\n      host: {\n        '[class.ant-select-lg]': 'nzSize===\"large\"',\n        '[class.ant-select-sm]': 'nzSize===\"small\"',\n        '[class.ant-select-enabled]': '!nzDisabled',\n        '[class.ant-select-disabled]': 'nzDisabled',\n        '[class.ant-select-single]': '!isMultiple',\n        '[class.ant-select-show-arrow]': '!isMultiple',\n        '[class.ant-select-show-search]': '!isMultiple',\n        '[class.ant-select-multiple]': 'isMultiple',\n        '[class.ant-select-allow-clear]': 'nzAllowClear',\n        '[class.ant-select-open]': 'nzOpen',\n        '(click)': 'trigger()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzTreeSelectService\n    }, {\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzAllowClear: [{\n      type: Input\n    }],\n    nzShowExpand: [{\n      type: Input\n    }],\n    nzShowLine: [{\n      type: Input\n    }],\n    nzDropdownMatchSelectWidth: [{\n      type: Input\n    }],\n    nzCheckable: [{\n      type: Input\n    }],\n    nzHideUnMatched: [{\n      type: Input\n    }],\n    nzShowIcon: [{\n      type: Input\n    }],\n    nzShowSearch: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzAsyncData: [{\n      type: Input\n    }],\n    nzMultiple: [{\n      type: Input\n    }],\n    nzDefaultExpandAll: [{\n      type: Input\n    }],\n    nzCheckStrictly: [{\n      type: Input\n    }],\n    nzVirtualItemSize: [{\n      type: Input\n    }],\n    nzVirtualMaxBufferPx: [{\n      type: Input\n    }],\n    nzVirtualMinBufferPx: [{\n      type: Input\n    }],\n    nzVirtualHeight: [{\n      type: Input\n    }],\n    nzNodes: [{\n      type: Input\n    }],\n    nzOpen: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzPlaceHolder: [{\n      type: Input\n    }],\n    nzDropdownStyle: [{\n      type: Input\n    }],\n    nzDisplayWith: [{\n      type: Input\n    }],\n    nzMaxTagPlaceholder: [{\n      type: Input\n    }],\n    nzOpenChange: [{\n      type: Output\n    }],\n    nzCleared: [{\n      type: Output\n    }],\n    nzRemoved: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzTreeClick: [{\n      type: Output\n    }],\n    nzTreeCheckBoxChange: [{\n      type: Output\n    }],\n    nzExpandedKeys: [{\n      type: Input\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }],\n    nzNotFoundContent: [{\n      type: Input\n    }],\n    nzDropdownClassName: [{\n      type: Input\n    }],\n    nzMaxTagCount: [{\n      type: Input\n    }],\n    nzSelectSearchComponent: [{\n      type: ViewChild,\n      args: [NzSelectSearchComponent, {\n        static: false\n      }]\n    }],\n    treeRef: [{\n      type: ViewChild,\n      args: ['treeRef', {\n        static: false\n      }]\n    }],\n    cdkOverlayOrigin: [{\n      type: ViewChild,\n      args: [CdkOverlayOrigin, {\n        static: true\n      }]\n    }],\n    cdkConnectedOverlay: [{\n      type: ViewChild,\n      args: [CdkConnectedOverlay, {\n        static: false\n      }]\n    }],\n    nzTreeTemplate: [{\n      type: Input\n    }],\n    nzTreeTemplateChild: [{\n      type: ContentChild,\n      args: ['nzTreeTemplate', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTreeSelectModule = function NzTreeSelectModule() {\n  _classCallCheck(this, NzTreeSelectModule);\n};\n\nNzTreeSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzTreeSelectModule\n});\nNzTreeSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzTreeSelectModule_Factory(t) {\n    return new (t || NzTreeSelectModule)();\n  },\n  imports: [[CommonModule, OverlayModule, FormsModule, NzSelectModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTreeSelectModule, {\n    declarations: function declarations() {\n      return [NzTreeSelectComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, FormsModule, NzSelectModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule];\n    },\n    exports: function exports() {\n      return [NzTreeSelectComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTreeSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, FormsModule, NzSelectModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule],\n      declarations: [NzTreeSelectComponent],\n      exports: [NzTreeSelectComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTreeSelectComponent, NzTreeSelectModule, NzTreeSelectService, higherOrderServiceFactory };","map":{"version":3,"sources":["../../components/tree-select/tree-select.service.ts","../../components/tree-select/tree-select.component.ts","../../components/tree-select/tree-select.module.ts","../../components/tree-select/public-api.ts","../../components/tree-select/ng-zorro-antd-tree-select.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NzTreeBaseService } from 'ng-zorro-antd/core/tree';\n\n@Injectable()\nexport class NzTreeSelectService extends NzTreeBaseService {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BACKSPACE } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  Self,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { slideMotion, zoomMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\n\nimport {\n  NzFormatEmitEvent,\n  NzTreeBase,\n  NzTreeBaseService,\n  NzTreeHigherOrderServiceToken,\n  NzTreeNode,\n  NzTreeNodeOptions\n} from 'ng-zorro-antd/core/tree';\nimport { BooleanInput, NgStyleInterface, NzSizeLDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport { NzSelectSearchComponent } from 'ng-zorro-antd/select';\nimport { NzTreeComponent } from 'ng-zorro-antd/tree';\n\nimport { merge, of as observableOf, Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\n\nimport { NzTreeSelectService } from './tree-select.service';\n\nexport function higherOrderServiceFactory(injector: Injector): NzTreeBaseService {\n  return injector.get(NzTreeSelectService);\n}\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'treeSelect';\nconst TREE_SELECT_DEFAULT_CLASS = 'ant-select-dropdown ant-select-tree-dropdown';\n\n@Component({\n  selector: 'nz-tree-select',\n  exportAs: 'nzTreeSelect',\n  animations: [slideMotion, zoomMotion],\n  template: `\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayOrigin]=\"cdkOverlayOrigin\"\n      [cdkConnectedOverlayOpen]=\"nzOpen\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-select-tree-dropdown'\"\n      [cdkConnectedOverlayMinWidth]=\"$any(nzDropdownMatchSelectWidth ? null : triggerWidth)\"\n      [cdkConnectedOverlayWidth]=\"$any(nzDropdownMatchSelectWidth ? triggerWidth : null)\"\n      (backdropClick)=\"closeDropDown()\"\n      (detach)=\"closeDropDown()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        [@slideMotion]=\"'enter'\"\n        [ngClass]=\"dropdownClassName\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [class.ant-select-dropdown-placement-bottomLeft]=\"dropDownPosition === 'bottom'\"\n        [class.ant-select-dropdown-placement-topLeft]=\"dropDownPosition === 'top'\"\n        [ngStyle]=\"nzDropdownStyle\"\n      >\n        <nz-tree\n          #treeRef\n          [hidden]=\"isNotFound\"\n          nzNoAnimation\n          nzSelectMode\n          nzBlockNode\n          [nzData]=\"nzNodes\"\n          [nzMultiple]=\"nzMultiple\"\n          [nzSearchValue]=\"inputValue\"\n          [nzHideUnMatched]=\"nzHideUnMatched\"\n          [nzShowIcon]=\"nzShowIcon\"\n          [nzCheckable]=\"nzCheckable\"\n          [nzAsyncData]=\"nzAsyncData\"\n          [nzShowExpand]=\"nzShowExpand\"\n          [nzShowLine]=\"nzShowLine\"\n          [nzExpandedIcon]=\"nzExpandedIcon\"\n          [nzExpandAll]=\"nzDefaultExpandAll\"\n          [nzExpandedKeys]=\"expandedKeys\"\n          [nzCheckedKeys]=\"nzCheckable ? value : []\"\n          [nzSelectedKeys]=\"!nzCheckable ? value : []\"\n          [nzTreeTemplate]=\"treeTemplate\"\n          [nzCheckStrictly]=\"nzCheckStrictly\"\n          [nzVirtualItemSize]=\"nzVirtualItemSize\"\n          [nzVirtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [nzVirtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [nzVirtualHeight]=\"nzVirtualHeight\"\n          (nzExpandChange)=\"onExpandedKeysChange($event)\"\n          (nzClick)=\"nzTreeClick.emit($event)\"\n          (nzCheckedKeysChange)=\"updateSelectedNodes()\"\n          (nzSelectedKeysChange)=\"updateSelectedNodes()\"\n          (nzCheckBoxChange)=\"nzTreeCheckBoxChange.emit($event)\"\n          (nzSearchValueChange)=\"setSearchValues($event)\"\n        ></nz-tree>\n        <span *ngIf=\"nzNodes.length === 0 || isNotFound\" class=\"ant-select-not-found\">\n          <nz-embed-empty [nzComponentName]=\"'tree-select'\" [specificContent]=\"nzNotFoundContent\"></nz-embed-empty>\n        </span>\n      </div>\n    </ng-template>\n\n    <div cdkOverlayOrigin class=\"ant-select-selector\">\n      <ng-container *ngIf=\"isMultiple\">\n        <nz-select-item\n          *ngFor=\"let node of selectedNodes | slice: 0:nzMaxTagCount; trackBy: trackValue\"\n          [@zoomMotion]\n          [@.disabled]=\"noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [deletable]=\"true\"\n          [disabled]=\"node.isDisabled || nzDisabled\"\n          [label]=\"nzDisplayWith(node)\"\n          (@zoomMotion.done)=\"updatePosition()\"\n          (delete)=\"removeSelected(node, true)\"\n        ></nz-select-item>\n\n        <nz-select-item\n          *ngIf=\"selectedNodes.length > nzMaxTagCount\"\n          [@zoomMotion]\n          (@zoomMotion.done)=\"updatePosition()\"\n          [@.disabled]=\"noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [contentTemplateOutlet]=\"nzMaxTagPlaceholder\"\n          [contentTemplateOutletContext]=\"selectedNodes | slice: nzMaxTagCount\"\n          [deletable]=\"false\"\n          [disabled]=\"false\"\n          [label]=\"'+ ' + (selectedNodes.length - nzMaxTagCount) + ' ...'\"\n        ></nz-select-item>\n      </ng-container>\n\n      <nz-select-search\n        *ngIf=\"nzShowSearch\"\n        (keydown)=\"onKeyDownInput($event)\"\n        (isComposingChange)=\"isComposing = $event\"\n        (valueChange)=\"setInputValue($event)\"\n        [value]=\"inputValue\"\n        [mirrorSync]=\"isMultiple\"\n        [disabled]=\"nzDisabled\"\n        [showInput]=\"nzOpen\"\n      ></nz-select-search>\n\n      <nz-select-placeholder\n        *ngIf=\"nzPlaceHolder && selectedNodes.length === 0\"\n        [placeholder]=\"nzPlaceHolder\"\n        [style.display]=\"placeHolderDisplay\"\n      ></nz-select-placeholder>\n\n      <nz-select-item\n        *ngIf=\"!isMultiple && selectedNodes.length === 1 && !isComposing && inputValue === ''\"\n        [deletable]=\"false\"\n        [disabled]=\"false\"\n        [label]=\"nzDisplayWith(selectedNodes[0])\"\n      ></nz-select-item>\n\n      <nz-select-arrow *ngIf=\"!isMultiple\"></nz-select-arrow>\n\n      <nz-select-clear *ngIf=\"nzAllowClear && !nzDisabled && selectedNodes.length\" (clear)=\"onClearSelection()\"></nz-select-clear>\n    </div>\n  `,\n  providers: [\n    NzTreeSelectService,\n    {\n      provide: NzTreeHigherOrderServiceToken,\n      useFactory: higherOrderServiceFactory,\n      deps: [[new Self(), Injector]]\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeSelectComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-select-lg]': 'nzSize===\"large\"',\n    '[class.ant-select-sm]': 'nzSize===\"small\"',\n    '[class.ant-select-enabled]': '!nzDisabled',\n    '[class.ant-select-disabled]': 'nzDisabled',\n    '[class.ant-select-single]': '!isMultiple',\n    '[class.ant-select-show-arrow]': '!isMultiple',\n    '[class.ant-select-show-search]': '!isMultiple',\n    '[class.ant-select-multiple]': 'isMultiple',\n    '[class.ant-select-allow-clear]': 'nzAllowClear',\n    '[class.ant-select-open]': 'nzOpen',\n    '(click)': 'trigger()'\n  }\n})\nexport class NzTreeSelectComponent extends NzTreeBase implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzAllowClear: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzDropdownMatchSelectWidth: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n  static ngAcceptInputType_nzShowSearch: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzMultiple: BooleanInput;\n  static ngAcceptInputType_nzDefaultExpandAll: BooleanInput;\n  static ngAcceptInputType_nzCheckStrictly: BooleanInput;\n\n  @Input() @InputBoolean() nzAllowClear: boolean = true;\n  @Input() @InputBoolean() nzShowExpand: boolean = true;\n  @Input() @InputBoolean() nzShowLine: boolean = false;\n  @Input() @InputBoolean() @WithConfig() nzDropdownMatchSelectWidth: boolean = true;\n  @Input() @InputBoolean() nzCheckable: boolean = false;\n  @Input() @InputBoolean() @WithConfig() nzHideUnMatched: boolean = false;\n  @Input() @InputBoolean() @WithConfig() nzShowIcon: boolean = false;\n  @Input() @InputBoolean() nzShowSearch: boolean = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzAsyncData = false;\n  @Input() @InputBoolean() nzMultiple = false;\n  @Input() @InputBoolean() nzDefaultExpandAll = false;\n  @Input() @InputBoolean() nzCheckStrictly = false;\n  @Input() nzVirtualItemSize = 28;\n  @Input() nzVirtualMaxBufferPx = 500;\n  @Input() nzVirtualMinBufferPx = 28;\n  @Input() nzVirtualHeight: string | null = null;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzNotFoundContent?: string;\n  @Input() nzNodes: Array<NzTreeNode | NzTreeNodeOptions> = [];\n  @Input() nzOpen = false;\n  @Input() @WithConfig() nzSize: NzSizeLDSType = 'default';\n  @Input() nzPlaceHolder = '';\n  @Input() nzDropdownStyle: NgStyleInterface | null = null;\n  @Input() nzDropdownClassName?: string;\n  @Input()\n  set nzExpandedKeys(value: string[]) {\n    this.expandedKeys = value;\n  }\n  get nzExpandedKeys(): string[] {\n    return this.expandedKeys;\n  }\n\n  @Input() nzDisplayWith: (node: NzTreeNode) => string | undefined = (node: NzTreeNode) => node.title;\n  @Input() nzMaxTagCount!: number;\n  @Input() nzMaxTagPlaceholder: TemplateRef<{ $implicit: NzTreeNode[] }> | null = null;\n  @Output() readonly nzOpenChange = new EventEmitter<boolean>();\n  @Output() readonly nzCleared = new EventEmitter<void>();\n  @Output() readonly nzRemoved = new EventEmitter<NzTreeNode>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzTreeClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzTreeCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n\n  @ViewChild(NzSelectSearchComponent, { static: false }) nzSelectSearchComponent!: NzSelectSearchComponent;\n  @ViewChild('treeRef', { static: false }) treeRef!: NzTreeComponent;\n  @ViewChild(CdkOverlayOrigin, { static: true }) cdkOverlayOrigin!: CdkOverlayOrigin;\n  @ViewChild(CdkConnectedOverlay, { static: false }) cdkConnectedOverlay!: CdkConnectedOverlay;\n\n  @Input() nzTreeTemplate!: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @ContentChild('nzTreeTemplate', { static: true }) nzTreeTemplateChild!: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  get treeTemplate(): TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }> {\n    return this.nzTreeTemplate || this.nzTreeTemplateChild;\n  }\n\n  dropdownClassName = TREE_SELECT_DEFAULT_CLASS;\n  triggerWidth?: number;\n  isComposing = false;\n  isDestroy = true;\n  isNotFound = false;\n  inputValue = '';\n  dropDownPosition: 'top' | 'center' | 'bottom' = 'bottom';\n  selectionChangeSubscription!: Subscription;\n  selectedNodes: NzTreeNode[] = [];\n  expandedKeys: string[] = [];\n  value: string[] = [];\n\n  onChange: OnChangeType = _value => {};\n  onTouched: OnTouchedType = () => {};\n\n  get placeHolderDisplay(): string {\n    return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\n  }\n\n  get isMultiple(): boolean {\n    return this.nzMultiple || this.nzCheckable;\n  }\n\n  constructor(\n    nzTreeService: NzTreeSelectService,\n    public nzConfigService: NzConfigService,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    super(nzTreeService);\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-select');\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-select');\n  }\n\n  ngOnInit(): void {\n    this.isDestroy = false;\n    this.selectionChangeSubscription = this.subscribeSelectionChange();\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroy = true;\n    this.closeDropDown();\n    this.selectionChangeSubscription.unsubscribe();\n  }\n\n  isComposingChange(isComposing: boolean): void {\n    this.isComposing = isComposing;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.closeDropDown();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzNodes, nzDropdownClassName } = changes;\n    if (nzNodes) {\n      this.updateSelectedNodes(true);\n    }\n    if (nzDropdownClassName) {\n      const className = this.nzDropdownClassName && this.nzDropdownClassName.trim();\n      this.dropdownClassName = className ? `${TREE_SELECT_DEFAULT_CLASS} ${className}` : TREE_SELECT_DEFAULT_CLASS;\n    }\n  }\n\n  writeValue(value: string[] | string): void {\n    if (isNotNil(value)) {\n      if (this.isMultiple && Array.isArray(value)) {\n        this.value = value;\n      } else {\n        this.value = [value as string];\n      }\n      this.updateSelectedNodes(true);\n    } else {\n      this.value = [];\n      this.selectedNodes.forEach(node => {\n        this.removeSelected(node, false);\n      });\n      this.selectedNodes = [];\n    }\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: string[] | string | null) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  trigger(): void {\n    if (this.nzDisabled || (!this.nzDisabled && this.nzOpen)) {\n      this.closeDropDown();\n    } else {\n      this.openDropdown();\n      if (this.nzShowSearch || this.isMultiple) {\n        this.focusOnInput();\n      }\n    }\n  }\n\n  openDropdown(): void {\n    if (!this.nzDisabled) {\n      this.nzOpen = true;\n      this.nzOpenChange.emit(this.nzOpen);\n      this.updateCdkConnectedOverlayStatus();\n    }\n  }\n\n  closeDropDown(): void {\n    this.onTouched();\n    this.nzOpen = false;\n    this.inputValue = '';\n    this.isNotFound = false;\n    this.nzOpenChange.emit(this.nzOpen);\n    this.cdr.markForCheck();\n  }\n\n  onKeyDownInput(e: KeyboardEvent): void {\n    const keyCode = e.keyCode;\n    const eventTarget = e.target as HTMLInputElement;\n    if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\n      e.preventDefault();\n      if (this.selectedNodes.length) {\n        const removeNode = this.selectedNodes[this.selectedNodes.length - 1];\n        this.removeSelected(removeNode);\n      }\n    }\n  }\n\n  onExpandedKeysChange(value: NzFormatEmitEvent): void {\n    this.nzExpandChange.emit(value);\n    this.expandedKeys = [...value.keys!];\n  }\n\n  setInputValue(value: string): void {\n    this.inputValue = value;\n    this.updatePosition();\n  }\n\n  removeSelected(node: NzTreeNode, emit: boolean = true): void {\n    node.isSelected = false;\n    node.isChecked = false;\n    if (this.nzCheckable) {\n      this.nzTreeService.conduct(node, this.nzCheckStrictly);\n    } else {\n      this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\n    }\n\n    if (emit) {\n      this.nzRemoved.emit(node);\n    }\n  }\n\n  focusOnInput(): void {\n    if (this.nzSelectSearchComponent) {\n      this.nzSelectSearchComponent.focus();\n    }\n  }\n\n  subscribeSelectionChange(): Subscription {\n    return merge(\n      this.nzTreeClick.pipe(\n        tap((event: NzFormatEmitEvent) => {\n          const node = event.node!;\n          if (this.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\n            node.isChecked = !node.isChecked;\n            node.isHalfChecked = false;\n            if (!this.nzCheckStrictly) {\n              this.nzTreeService.conduct(node);\n            }\n          }\n          if (this.nzCheckable) {\n            node.isSelected = false;\n          }\n        }),\n        filter((event: NzFormatEmitEvent) => {\n          const node = event.node!;\n          return this.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled && node.isSelectable;\n        })\n      ),\n      this.nzCheckable ? this.nzTreeCheckBoxChange : observableOf(),\n      this.nzCleared,\n      this.nzRemoved\n    ).subscribe(() => {\n      this.updateSelectedNodes();\n      const value = this.selectedNodes.map(node => node.key!);\n      this.value = [...value];\n      if (this.nzShowSearch || this.isMultiple) {\n        this.inputValue = '';\n        this.isNotFound = false;\n      }\n      if (this.isMultiple) {\n        this.onChange(value);\n        this.focusOnInput();\n        this.updatePosition();\n      } else {\n        this.closeDropDown();\n        this.onChange(value.length ? value[0] : null);\n      }\n    });\n  }\n\n  updateSelectedNodes(init: boolean = false): void {\n    if (init) {\n      const nodes = this.coerceTreeNodes(this.nzNodes);\n      this.nzTreeService.isMultiple = this.isMultiple;\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n      this.nzTreeService.initTree(nodes);\n      if (this.nzCheckable) {\n        this.nzTreeService.conductCheck(this.value, this.nzCheckStrictly);\n      } else {\n        this.nzTreeService.conductSelectedKeys(this.value, this.isMultiple);\n      }\n    }\n\n    this.selectedNodes = [...(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList())];\n  }\n\n  updatePosition(): void {\n    setTimeout(() => {\n      if (this.cdkConnectedOverlay && this.cdkConnectedOverlay.overlayRef) {\n        this.cdkConnectedOverlay.overlayRef.updatePosition();\n      }\n    });\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.dropDownPosition = position.connectionPair.originY;\n  }\n\n  onClearSelection(): void {\n    this.selectedNodes.forEach(node => {\n      this.removeSelected(node, false);\n    });\n    this.nzCleared.emit();\n  }\n\n  setSearchValues($event: NzFormatEmitEvent): void {\n    Promise.resolve().then(() => {\n      this.isNotFound = (this.nzShowSearch || this.isMultiple) && !!this.inputValue && $event.matchedKeys!.length === 0;\n    });\n  }\n\n  updateCdkConnectedOverlayStatus(): void {\n    this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n  }\n\n  trackValue(_index: number, option: NzTreeNode): string {\n    return option.key!;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\n\nimport { NzTreeSelectComponent } from './tree-select.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    FormsModule,\n    NzSelectModule,\n    NzTreeModule,\n    NzIconModule,\n    NzEmptyModule,\n    NzOverlayModule,\n    NzNoAnimationModule\n  ],\n  declarations: [NzTreeSelectComponent],\n  exports: [NzTreeSelectComponent]\n})\nexport class NzTreeSelectModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './tree-select.component';\nexport * from './tree-select.module';\nexport * from './tree-select.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}