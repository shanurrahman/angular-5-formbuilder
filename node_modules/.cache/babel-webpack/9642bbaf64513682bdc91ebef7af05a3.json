{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Input, EventEmitter, Host, Output, NgModule } from '@angular/core';\nimport { collapseMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc4 from 'ng-zorro-antd/icon';\nvar _c0 = [\"*\"];\n\nfunction NzCollapsePanelComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var expandedIcon_r4 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", expandedIcon_r4 || \"right\")(\"nzRotate\", ctx_r3.nzActive ? 90 : 0);\n  }\n}\n\nfunction NzCollapsePanelComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzCollapsePanelComponent_ng_container_1_ng_container_1_Template, 2, 2, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzExpandedIcon);\n  }\n}\n\nfunction NzCollapsePanelComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.nzHeader);\n  }\n}\n\nfunction NzCollapsePanelComponent_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.nzExtra);\n  }\n}\n\nfunction NzCollapsePanelComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(1, NzCollapsePanelComponent_div_3_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzExtra);\n  }\n}\n\nvar NZ_CONFIG_MODULE_NAME = 'collapse';\n\nvar NzCollapseComponent = /*#__PURE__*/function () {\n  function NzCollapseComponent(nzConfigService, cdr) {\n    var _this = this;\n\n    _classCallCheck(this, NzCollapseComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzAccordion = false;\n    this.nzBordered = true;\n    this.nzGhost = false;\n    this.nzExpandIconPosition = 'left';\n    this.listOfNzCollapsePanelComponent = [];\n    this.destroy$ = new Subject();\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(function () {\n      _this.cdr.markForCheck();\n    });\n  }\n\n  _createClass(NzCollapseComponent, [{\n    key: \"addPanel\",\n    value: function addPanel(value) {\n      this.listOfNzCollapsePanelComponent.push(value);\n    }\n  }, {\n    key: \"removePanel\",\n    value: function removePanel(value) {\n      this.listOfNzCollapsePanelComponent.splice(this.listOfNzCollapsePanelComponent.indexOf(value), 1);\n    }\n  }, {\n    key: \"click\",\n    value: function click(collapse) {\n      if (this.nzAccordion && !collapse.nzActive) {\n        this.listOfNzCollapsePanelComponent.filter(function (item) {\n          return item !== collapse;\n        }).forEach(function (item) {\n          if (item.nzActive) {\n            item.nzActive = false;\n            item.nzActiveChange.emit(item.nzActive);\n            item.markForCheck();\n          }\n        });\n      }\n\n      collapse.nzActive = !collapse.nzActive;\n      collapse.nzActiveChange.emit(collapse.nzActive);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzCollapseComponent;\n}();\n\nNzCollapseComponent.ɵfac = function NzCollapseComponent_Factory(t) {\n  return new (t || NzCollapseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzCollapseComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzCollapseComponent,\n  selectors: [[\"nz-collapse\"]],\n  hostVars: 10,\n  hostBindings: function NzCollapseComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-collapse\", true)(\"ant-collapse-icon-position-left\", ctx.nzExpandIconPosition === \"left\")(\"ant-collapse-icon-position-right\", ctx.nzExpandIconPosition === \"right\")(\"ant-collapse-ghost\", ctx.nzGhost)(\"ant-collapse-borderless\", !ctx.nzBordered);\n    }\n  },\n  inputs: {\n    nzAccordion: \"nzAccordion\",\n    nzBordered: \"nzBordered\",\n    nzGhost: \"nzGhost\",\n    nzExpandIconPosition: \"nzExpandIconPosition\"\n  },\n  exportAs: [\"nzCollapse\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzCollapseComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzCollapseComponent.ctorParameters = function () {\n  return [{\n    type: NzConfigService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNzCollapseComponent.propDecorators = {\n  nzAccordion: [{\n    type: Input\n  }],\n  nzBordered: [{\n    type: Input\n  }],\n  nzGhost: [{\n    type: Input\n  }],\n  nzExpandIconPosition: [{\n    type: Input\n  }]\n};\n\n__decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzCollapseComponent.prototype, \"nzAccordion\", void 0);\n\n__decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzCollapseComponent.prototype, \"nzBordered\", void 0);\n\n__decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzCollapseComponent.prototype, \"nzGhost\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_CONFIG_MODULE_NAME$1 = 'collapsePanel';\n\nvar NzCollapsePanelComponent = /*#__PURE__*/function () {\n  function NzCollapsePanelComponent(nzConfigService, cdr, nzCollapseComponent) {\n    var _this2 = this;\n\n    _classCallCheck(this, NzCollapsePanelComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.nzCollapseComponent = nzCollapseComponent;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME$1;\n    this.nzActive = false;\n    this.nzDisabled = false;\n    this.nzShowArrow = true;\n    this.nzActiveChange = new EventEmitter();\n    this.destroy$ = new Subject();\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME$1).pipe(takeUntil(this.destroy$)).subscribe(function () {\n      _this2.cdr.markForCheck();\n    });\n  }\n\n  _createClass(NzCollapsePanelComponent, [{\n    key: \"clickHeader\",\n    value: function clickHeader() {\n      if (!this.nzDisabled) {\n        this.nzCollapseComponent.click(this);\n      }\n    }\n  }, {\n    key: \"markForCheck\",\n    value: function markForCheck() {\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.nzCollapseComponent.addPanel(this);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.nzCollapseComponent.removePanel(this);\n    }\n  }]);\n\n  return NzCollapsePanelComponent;\n}();\n\nNzCollapsePanelComponent.ɵfac = function NzCollapsePanelComponent_Factory(t) {\n  return new (t || NzCollapsePanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NzCollapseComponent, 1));\n};\n\nNzCollapsePanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzCollapsePanelComponent,\n  selectors: [[\"nz-collapse-panel\"]],\n  hostVars: 8,\n  hostBindings: function NzCollapsePanelComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-collapse-item\", true)(\"ant-collapse-no-arrow\", !ctx.nzShowArrow)(\"ant-collapse-item-active\", ctx.nzActive)(\"ant-collapse-item-disabled\", ctx.nzDisabled);\n    }\n  },\n  inputs: {\n    nzActive: \"nzActive\",\n    nzDisabled: \"nzDisabled\",\n    nzShowArrow: \"nzShowArrow\",\n    nzExtra: \"nzExtra\",\n    nzHeader: \"nzHeader\",\n    nzExpandedIcon: \"nzExpandedIcon\"\n  },\n  outputs: {\n    nzActiveChange: \"nzActiveChange\"\n  },\n  exportAs: [\"nzCollapsePanel\"],\n  ngContentSelectors: _c0,\n  decls: 7,\n  vars: 7,\n  consts: [[\"role\", \"tab\", 1, \"ant-collapse-header\", 3, \"click\"], [4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [\"class\", \"ant-collapse-extra\", 4, \"ngIf\"], [1, \"ant-collapse-content\"], [1, \"ant-collapse-content-box\"], [\"nz-icon\", \"\", 1, \"ant-collapse-arrow\", 3, \"nzType\", \"nzRotate\"], [1, \"ant-collapse-extra\"]],\n  template: function NzCollapsePanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function NzCollapsePanelComponent_Template_div_click_0_listener() {\n        return ctx.clickHeader();\n      });\n      ɵngcc0.ɵɵtemplate(1, NzCollapsePanelComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      ɵngcc0.ɵɵtemplate(2, NzCollapsePanelComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n      ɵngcc0.ɵɵtemplate(3, NzCollapsePanelComponent_div_3_Template, 2, 1, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵprojection(6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.nzActive);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowArrow);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzHeader);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzExtra);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"ant-collapse-content-active\", ctx.nzActive);\n      ɵngcc0.ɵɵproperty(\"@collapseMotion\", ctx.nzActive ? \"expanded\" : \"hidden\");\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc3.NzStringTemplateOutletDirective, ɵngcc4.NzIconDirective],\n  encapsulation: 2,\n  data: {\n    animation: [collapseMotion]\n  },\n  changeDetection: 0\n});\n\nNzCollapsePanelComponent.ctorParameters = function () {\n  return [{\n    type: NzConfigService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NzCollapseComponent,\n    decorators: [{\n      type: Host\n    }]\n  }];\n};\n\nNzCollapsePanelComponent.propDecorators = {\n  nzActive: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzShowArrow: [{\n    type: Input\n  }],\n  nzExtra: [{\n    type: Input\n  }],\n  nzHeader: [{\n    type: Input\n  }],\n  nzExpandedIcon: [{\n    type: Input\n  }],\n  nzActiveChange: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCollapsePanelComponent.prototype, \"nzActive\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCollapsePanelComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzCollapsePanelComponent.prototype, \"nzShowArrow\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCollapseComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-collapse',\n      exportAs: 'nzCollapse',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-content></ng-content>\\n  \",\n      host: {\n        '[class.ant-collapse]': 'true',\n        '[class.ant-collapse-icon-position-left]': \"nzExpandIconPosition === 'left'\",\n        '[class.ant-collapse-icon-position-right]': \"nzExpandIconPosition === 'right'\",\n        '[class.ant-collapse-ghost]': \"nzGhost\",\n        '[class.ant-collapse-borderless]': '!nzBordered'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    nzAccordion: [{\n      type: Input\n    }],\n    nzBordered: [{\n      type: Input\n    }],\n    nzGhost: [{\n      type: Input\n    }],\n    nzExpandIconPosition: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCollapsePanelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-collapse-panel',\n      exportAs: 'nzCollapsePanel',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [collapseMotion],\n      template: \"\\n    <div role=\\\"tab\\\" [attr.aria-expanded]=\\\"nzActive\\\" class=\\\"ant-collapse-header\\\" (click)=\\\"clickHeader()\\\">\\n      <ng-container *ngIf=\\\"nzShowArrow\\\">\\n        <ng-container *nzStringTemplateOutlet=\\\"nzExpandedIcon; let expandedIcon\\\">\\n          <i nz-icon [nzType]=\\\"expandedIcon || 'right'\\\" class=\\\"ant-collapse-arrow\\\" [nzRotate]=\\\"nzActive ? 90 : 0\\\"></i>\\n        </ng-container>\\n      </ng-container>\\n      <ng-container *nzStringTemplateOutlet=\\\"nzHeader\\\">{{ nzHeader }}</ng-container>\\n      <div class=\\\"ant-collapse-extra\\\" *ngIf=\\\"nzExtra\\\">\\n        <ng-container *nzStringTemplateOutlet=\\\"nzExtra\\\">{{ nzExtra }}</ng-container>\\n      </div>\\n    </div>\\n    <div class=\\\"ant-collapse-content\\\" [class.ant-collapse-content-active]=\\\"nzActive\\\" [@collapseMotion]=\\\"nzActive ? 'expanded' : 'hidden'\\\">\\n      <div class=\\\"ant-collapse-content-box\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </div>\\n  \",\n      host: {\n        '[class.ant-collapse-item]': 'true',\n        '[class.ant-collapse-no-arrow]': '!nzShowArrow',\n        '[class.ant-collapse-item-active]': 'nzActive',\n        '[class.ant-collapse-item-disabled]': 'nzDisabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NzCollapseComponent,\n      decorators: [{\n        type: Host\n      }]\n    }];\n  }, {\n    nzActive: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzShowArrow: [{\n      type: Input\n    }],\n    nzActiveChange: [{\n      type: Output\n    }],\n    nzExtra: [{\n      type: Input\n    }],\n    nzHeader: [{\n      type: Input\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCollapseModule = function NzCollapseModule() {\n  _classCallCheck(this, NzCollapseModule);\n};\n\nNzCollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzCollapseModule\n});\nNzCollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzCollapseModule_Factory(t) {\n    return new (t || NzCollapseModule)();\n  },\n  imports: [[CommonModule, NzIconModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzCollapseModule, {\n    declarations: function declarations() {\n      return [NzCollapsePanelComponent, NzCollapseComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, NzIconModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzCollapsePanelComponent, NzCollapseComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCollapseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzCollapsePanelComponent, NzCollapseComponent],\n      exports: [NzCollapsePanelComponent, NzCollapseComponent],\n      imports: [CommonModule, NzIconModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCollapseComponent, NzCollapseModule, NzCollapsePanelComponent };","map":{"version":3,"sources":["../../components/collapse/collapse.component.ts","../../components/collapse/collapse-panel.component.ts","../../components/collapse/collapse.module.ts","../../components/collapse/public-api.ts","../../components/collapse/ng-zorro-antd-collapse.ts"],"names":["NZ_CONFIG_MODULE_NAME"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, ViewEncapsulation } from '@angular/core';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzCollapsePanelComponent } from './collapse-panel.component';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'collapse';\n\n@Component({\n  selector: 'nz-collapse',\n  exportAs: 'nzCollapse',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-collapse]': 'true',\n    '[class.ant-collapse-icon-position-left]': `nzExpandIconPosition === 'left'`,\n    '[class.ant-collapse-icon-position-right]': `nzExpandIconPosition === 'right'`,\n    '[class.ant-collapse-ghost]': `nzGhost`,\n    '[class.ant-collapse-borderless]': '!nzBordered'\n  }\n})\nexport class NzCollapseComponent implements OnDestroy {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzAccordion: BooleanInput;\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzGhost: BooleanInput;\n\n  @Input() @WithConfig() @InputBoolean() nzAccordion: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzBordered: boolean = true;\n  @Input() @WithConfig() @InputBoolean() nzGhost: boolean = false;\n  @Input() nzExpandIconPosition: 'left' | 'right' = 'left';\n  private listOfNzCollapsePanelComponent: NzCollapsePanelComponent[] = [];\n  private destroy$ = new Subject();\n  constructor(public nzConfigService: NzConfigService, private cdr: ChangeDetectorRef) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  addPanel(value: NzCollapsePanelComponent): void {\n    this.listOfNzCollapsePanelComponent.push(value);\n  }\n\n  removePanel(value: NzCollapsePanelComponent): void {\n    this.listOfNzCollapsePanelComponent.splice(this.listOfNzCollapsePanelComponent.indexOf(value), 1);\n  }\n\n  click(collapse: NzCollapsePanelComponent): void {\n    if (this.nzAccordion && !collapse.nzActive) {\n      this.listOfNzCollapsePanelComponent\n        .filter(item => item !== collapse)\n        .forEach(item => {\n          if (item.nzActive) {\n            item.nzActive = false;\n            item.nzActiveChange.emit(item.nzActive);\n            item.markForCheck();\n          }\n        });\n    }\n    collapse.nzActive = !collapse.nzActive;\n    collapse.nzActiveChange.emit(collapse.nzActive);\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { collapseMotion } from 'ng-zorro-antd/core/animation';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzCollapseComponent } from './collapse.component';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'collapsePanel';\n\n@Component({\n  selector: 'nz-collapse-panel',\n  exportAs: 'nzCollapsePanel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [collapseMotion],\n  template: `\n    <div role=\"tab\" [attr.aria-expanded]=\"nzActive\" class=\"ant-collapse-header\" (click)=\"clickHeader()\">\n      <ng-container *ngIf=\"nzShowArrow\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; let expandedIcon\">\n          <i nz-icon [nzType]=\"expandedIcon || 'right'\" class=\"ant-collapse-arrow\" [nzRotate]=\"nzActive ? 90 : 0\"></i>\n        </ng-container>\n      </ng-container>\n      <ng-container *nzStringTemplateOutlet=\"nzHeader\">{{ nzHeader }}</ng-container>\n      <div class=\"ant-collapse-extra\" *ngIf=\"nzExtra\">\n        <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-collapse-content\" [class.ant-collapse-content-active]=\"nzActive\" [@collapseMotion]=\"nzActive ? 'expanded' : 'hidden'\">\n      <div class=\"ant-collapse-content-box\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n\n  host: {\n    '[class.ant-collapse-item]': 'true',\n    '[class.ant-collapse-no-arrow]': '!nzShowArrow',\n    '[class.ant-collapse-item-active]': 'nzActive',\n    '[class.ant-collapse-item-disabled]': 'nzDisabled'\n  }\n})\nexport class NzCollapsePanelComponent implements OnInit, OnDestroy {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzActive: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzShowArrow: BooleanInput;\n\n  @Input() @InputBoolean() nzActive = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @WithConfig() @InputBoolean() nzShowArrow: boolean = true;\n  @Input() nzExtra?: string | TemplateRef<void>;\n  @Input() nzHeader?: string | TemplateRef<void>;\n  @Input() nzExpandedIcon?: string | TemplateRef<void>;\n  @Output() readonly nzActiveChange = new EventEmitter<boolean>();\n  private destroy$ = new Subject();\n  clickHeader(): void {\n    if (!this.nzDisabled) {\n      this.nzCollapseComponent.click(this);\n    }\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Host() private nzCollapseComponent: NzCollapseComponent\n  ) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    this.nzCollapseComponent.addPanel(this);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.nzCollapseComponent.removePanel(this);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzCollapsePanelComponent } from './collapse-panel.component';\nimport { NzCollapseComponent } from './collapse.component';\n\n@NgModule({\n  declarations: [NzCollapsePanelComponent, NzCollapseComponent],\n  exports: [NzCollapsePanelComponent, NzCollapseComponent],\n  imports: [CommonModule, NzIconModule, NzOutletModule]\n})\nexport class NzCollapseModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './collapse-panel.component';\nexport * from './collapse.component';\nexport * from './collapse.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}