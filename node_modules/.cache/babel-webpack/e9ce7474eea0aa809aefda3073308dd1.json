{"ast":null,"code":"import _inherits from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Directive, ElementRef, ViewContainerRef, ComponentFactoryResolver, Renderer2, ChangeDetectorRef, ViewChild, TemplateRef, Host, Optional, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { zoomBigMotion } from 'ng-zorro-antd/core/animation';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { DEFAULT_TOOLTIP_POSITIONS, POSITION_MAP, getPlacementName, NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { toBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/overlay';\nimport * as ɵngcc4 from '@angular/common';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\nvar _c0 = [\"overlay\"];\n\nfunction NzToolTipComponent_ng_template_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.nzTitle);\n  }\n}\n\nfunction NzToolTipComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 4);\n    ɵngcc0.ɵɵelement(3, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(5, NzToolTipComponent_ng_template_0_ng_container_5_Template, 2, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1._classMap)(\"ngStyle\", ctx_r1.nzOverlayStyle)(\"@.disabled\", ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation)(\"@zoomBigMotion\", \"active\");\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.nzTitle);\n  }\n}\n\nvar NzTooltipBaseDirective = /*#__PURE__*/function () {\n  function NzTooltipBaseDirective(elementRef, hostView, resolver, renderer, noAnimation) {\n    _classCallCheck(this, NzTooltipBaseDirective);\n\n    this.elementRef = elementRef;\n    this.hostView = hostView;\n    this.resolver = resolver;\n    this.renderer = renderer;\n    this.noAnimation = noAnimation;\n    this.visibleChange = new EventEmitter();\n    this.internalVisible = false;\n    this.destroy$ = new Subject();\n    this.triggerDisposables = [];\n  }\n  /**\n   * This true title that would be used in other parts on this component.\n   */\n\n\n  _createClass(NzTooltipBaseDirective, [{\n    key: \"getProxyPropertyMap\",\n    value: function getProxyPropertyMap() {\n      var _this = this;\n\n      return {\n        noAnimation: ['noAnimation', function () {\n          return _this.noAnimation;\n        }]\n      };\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var specificTrigger = changes.specificTrigger;\n\n      if (specificTrigger && !specificTrigger.isFirstChange()) {\n        this.registerTriggers();\n      }\n\n      if (this.component) {\n        this.updatePropertiesByChanges(changes);\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.createComponent();\n      this.registerTriggers();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete(); // Clear toggling timer. Issue #3875 #4317 #4386\n\n      this.clearTogglingTimer();\n      this.removeTriggerListeners();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _a;\n\n      (_a = this.component) === null || _a === void 0 ? void 0 : _a.show();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _a;\n\n      (_a = this.component) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n    /**\n     * Force the component to update its position.\n     */\n\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      if (this.component) {\n        this.component.updatePosition();\n      }\n    }\n    /**\n     * Create a dynamic tooltip component. This method can be override.\n     */\n\n  }, {\n    key: \"createComponent\",\n    value: function createComponent() {\n      var _this2 = this;\n\n      var componentRef = this.hostView.createComponent(this.componentFactory);\n      this.component = componentRef.instance; // Remove the component's DOM because it should be in the overlay container.\n\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), componentRef.location.nativeElement);\n      this.component.setOverlayOrigin({\n        elementRef: this.origin || this.elementRef\n      });\n      this.initProperties();\n      this.component.nzVisibleChange.pipe(distinctUntilChanged(), takeUntil(this.destroy$)).subscribe(function (visible) {\n        _this2.internalVisible = visible;\n\n        _this2.visibleChange.emit(visible);\n      });\n    }\n  }, {\n    key: \"registerTriggers\",\n    value: function registerTriggers() {\n      var _this3 = this;\n\n      // When the method gets invoked, all properties has been synced to the dynamic component.\n      // After removing the old API, we can just check the directive's own `nzTrigger`.\n      var el = this.elementRef.nativeElement;\n      var trigger = this.trigger;\n      this.removeTriggerListeners();\n\n      if (trigger === 'hover') {\n        var overlayElement;\n        this.triggerDisposables.push(this.renderer.listen(el, 'mouseenter', function () {\n          _this3.delayEnterLeave(true, true, _this3._mouseEnterDelay);\n        }));\n        this.triggerDisposables.push(this.renderer.listen(el, 'mouseleave', function () {\n          var _a;\n\n          _this3.delayEnterLeave(true, false, _this3._mouseLeaveDelay);\n\n          if (((_a = _this3.component) === null || _a === void 0 ? void 0 : _a.overlay.overlayRef) && !overlayElement) {\n            overlayElement = _this3.component.overlay.overlayRef.overlayElement;\n\n            _this3.triggerDisposables.push(_this3.renderer.listen(overlayElement, 'mouseenter', function () {\n              _this3.delayEnterLeave(false, true, _this3._mouseEnterDelay);\n            }));\n\n            _this3.triggerDisposables.push(_this3.renderer.listen(overlayElement, 'mouseleave', function () {\n              _this3.delayEnterLeave(false, false, _this3._mouseLeaveDelay);\n            }));\n          }\n        }));\n      } else if (trigger === 'focus') {\n        this.triggerDisposables.push(this.renderer.listen(el, 'focus', function () {\n          return _this3.show();\n        }));\n        this.triggerDisposables.push(this.renderer.listen(el, 'blur', function () {\n          return _this3.hide();\n        }));\n      } else if (trigger === 'click') {\n        this.triggerDisposables.push(this.renderer.listen(el, 'click', function (e) {\n          e.preventDefault();\n\n          _this3.show();\n        }));\n      } // Else do nothing because user wants to control the visibility programmatically.\n\n    }\n  }, {\n    key: \"updatePropertiesByChanges\",\n    value: function updatePropertiesByChanges(changes) {\n      this.updatePropertiesByKeys(Object.keys(changes));\n    }\n  }, {\n    key: \"updatePropertiesByKeys\",\n    value: function updatePropertiesByKeys(keys) {\n      var _this4 = this;\n\n      var _a;\n\n      var mappingProperties = Object.assign({\n        // common mappings\n        title: ['nzTitle', function () {\n          return _this4._title;\n        }],\n        directiveTitle: ['nzTitle', function () {\n          return _this4._title;\n        }],\n        content: ['nzContent', function () {\n          return _this4._content;\n        }],\n        directiveContent: ['nzContent', function () {\n          return _this4._content;\n        }],\n        trigger: ['nzTrigger', function () {\n          return _this4._trigger;\n        }],\n        placement: ['nzPlacement', function () {\n          return _this4._placement;\n        }],\n        visible: ['nzVisible', function () {\n          return _this4._visible;\n        }],\n        mouseEnterDelay: ['nzMouseEnterDelay', function () {\n          return _this4._mouseEnterDelay;\n        }],\n        mouseLeaveDelay: ['nzMouseLeaveDelay', function () {\n          return _this4._mouseLeaveDelay;\n        }],\n        overlayClassName: ['nzOverlayClassName', function () {\n          return _this4._overlayClassName;\n        }],\n        overlayStyle: ['nzOverlayStyle', function () {\n          return _this4._overlayStyle;\n        }]\n      }, this.getProxyPropertyMap());\n      (keys || Object.keys(mappingProperties).filter(function (key) {\n        return !key.startsWith('directive');\n      })).forEach(function (property) {\n        if (mappingProperties[property]) {\n          var _mappingProperties$pr = _slicedToArray(mappingProperties[property], 2),\n              name = _mappingProperties$pr[0],\n              valueFn = _mappingProperties$pr[1];\n\n          _this4.updateComponentValue(name, valueFn());\n        }\n      });\n      (_a = this.component) === null || _a === void 0 ? void 0 : _a.updateByDirective();\n    }\n  }, {\n    key: \"initProperties\",\n    value: function initProperties() {\n      this.updatePropertiesByKeys();\n    }\n  }, {\n    key: \"updateComponentValue\",\n    value: function updateComponentValue(key, value) {\n      if (typeof value !== 'undefined') {\n        // @ts-ignore\n        this.component[key] = value;\n      }\n    }\n  }, {\n    key: \"delayEnterLeave\",\n    value: function delayEnterLeave(isOrigin, isEnter) {\n      var _this5 = this;\n\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n\n      if (this.delayTimer) {\n        this.clearTogglingTimer();\n      } else if (delay > 0) {\n        this.delayTimer = setTimeout(function () {\n          _this5.delayTimer = undefined;\n          isEnter ? _this5.show() : _this5.hide();\n        }, delay * 1000);\n      } else {\n        // `isOrigin` is used due to the tooltip will not hide immediately\n        // (may caused by the fade-out animation).\n        isEnter && isOrigin ? this.show() : this.hide();\n      }\n    }\n  }, {\n    key: \"removeTriggerListeners\",\n    value: function removeTriggerListeners() {\n      this.triggerDisposables.forEach(function (dispose) {\n        return dispose();\n      });\n      this.triggerDisposables.length = 0;\n    }\n  }, {\n    key: \"clearTogglingTimer\",\n    value: function clearTogglingTimer() {\n      if (this.delayTimer) {\n        clearTimeout(this.delayTimer);\n        this.delayTimer = undefined;\n      }\n    }\n  }, {\n    key: \"_title\",\n    get: function get() {\n      return this.title || this.directiveTitle || null;\n    }\n  }, {\n    key: \"_content\",\n    get: function get() {\n      return this.content || this.directiveContent || null;\n    }\n  }, {\n    key: \"_trigger\",\n    get: function get() {\n      return typeof this.trigger !== 'undefined' ? this.trigger : 'hover';\n    }\n  }, {\n    key: \"_placement\",\n    get: function get() {\n      return this.placement || 'top';\n    }\n  }, {\n    key: \"_visible\",\n    get: function get() {\n      return (typeof this.visible !== 'undefined' ? this.visible : this.internalVisible) || false;\n    }\n  }, {\n    key: \"_mouseEnterDelay\",\n    get: function get() {\n      return this.mouseEnterDelay || 0.15;\n    }\n  }, {\n    key: \"_mouseLeaveDelay\",\n    get: function get() {\n      return this.mouseLeaveDelay || 0.1;\n    }\n  }, {\n    key: \"_overlayClassName\",\n    get: function get() {\n      return this.overlayClassName || null;\n    }\n  }, {\n    key: \"_overlayStyle\",\n    get: function get() {\n      return this.overlayStyle || null;\n    }\n  }]);\n\n  return NzTooltipBaseDirective;\n}();\n\nNzTooltipBaseDirective.ɵfac = function NzTooltipBaseDirective_Factory(t) {\n  return new (t || NzTooltipBaseDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective));\n};\n\nNzTooltipBaseDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTooltipBaseDirective,\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNzTooltipBaseDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: Renderer2\n  }, {\n    type: NzNoAnimationDirective\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTooltipBaseDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.NzNoAnimationDirective\n    }];\n  }, null);\n})(); // tslint:disable-next-line:directive-class-suffix\n\n\nvar NzTooltipBaseComponent = /*#__PURE__*/function () {\n  function NzTooltipBaseComponent(cdr, noAnimation) {\n    _classCallCheck(this, NzTooltipBaseComponent);\n\n    this.cdr = cdr;\n    this.noAnimation = noAnimation;\n    this.nzTitle = null;\n    this.nzContent = null;\n    this.nzOverlayStyle = {};\n    this.nzVisibleChange = new Subject();\n    this._visible = false;\n    this._trigger = 'hover';\n    this.preferredPlacement = 'top';\n    this._classMap = {};\n    this._hasBackdrop = false;\n    this._prefix = 'ant-tooltip-placement';\n    this._positions = _toConsumableArray(DEFAULT_TOOLTIP_POSITIONS);\n  }\n\n  _createClass(NzTooltipBaseComponent, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.nzVisibleChange.complete();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.nzVisible) {\n        return;\n      }\n\n      if (!this.isEmpty()) {\n        this.nzVisible = true;\n        this.nzVisibleChange.next(true);\n        this.cdr.detectChanges();\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this.nzVisible) {\n        return;\n      }\n\n      this.nzVisible = false;\n      this.nzVisibleChange.next(false);\n      this.cdr.detectChanges();\n    }\n  }, {\n    key: \"updateByDirective\",\n    value: function updateByDirective() {\n      var _this6 = this;\n\n      this.setClassMap();\n      this.cdr.detectChanges();\n      Promise.resolve().then(function () {\n        _this6.updatePosition();\n\n        _this6.updateVisibilityByTitle();\n      });\n    }\n    /**\n     * Force the component to update its position.\n     */\n\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      if (this.origin && this.overlay && this.overlay.overlayRef) {\n        this.overlay.overlayRef.updatePosition();\n      }\n    }\n  }, {\n    key: \"onPositionChange\",\n    value: function onPositionChange(position) {\n      this.preferredPlacement = getPlacementName(position);\n      this.setClassMap();\n      this.cdr.detectChanges();\n    }\n  }, {\n    key: \"setClassMap\",\n    value: function setClassMap() {\n      var _this$_classMap;\n\n      this._classMap = (_this$_classMap = {}, _defineProperty(_this$_classMap, this.nzOverlayClassName, true), _defineProperty(_this$_classMap, \"\".concat(this._prefix, \"-\").concat(this.preferredPlacement), true), _this$_classMap);\n    }\n  }, {\n    key: \"setOverlayOrigin\",\n    value: function setOverlayOrigin(origin) {\n      this.origin = origin;\n      this.cdr.markForCheck();\n    }\n    /**\n     * Hide the component while the content is empty.\n     */\n\n  }, {\n    key: \"updateVisibilityByTitle\",\n    value: function updateVisibilityByTitle() {\n      if (this.isEmpty()) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"nzVisible\",\n    set: function set(value) {\n      var visible = toBoolean(value);\n\n      if (this._visible !== visible) {\n        this._visible = visible;\n        this.nzVisibleChange.next(visible);\n      }\n    },\n    get: function get() {\n      return this._visible;\n    }\n  }, {\n    key: \"nzTrigger\",\n    set: function set(value) {\n      this._trigger = value;\n      this._hasBackdrop = this._trigger === 'click';\n    },\n    get: function get() {\n      return this._trigger;\n    }\n  }, {\n    key: \"nzPlacement\",\n    set: function set(value) {\n      if (value !== this.preferredPlacement) {\n        this.preferredPlacement = value;\n        this._positions = [POSITION_MAP[this.nzPlacement]].concat(_toConsumableArray(DEFAULT_TOOLTIP_POSITIONS));\n      }\n    },\n    get: function get() {\n      return this.preferredPlacement;\n    }\n  }]);\n\n  return NzTooltipBaseComponent;\n}();\n\nNzTooltipBaseComponent.ɵfac = function NzTooltipBaseComponent_Factory(t) {\n  return new (t || NzTooltipBaseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective));\n};\n\nNzTooltipBaseComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTooltipBaseComponent,\n  viewQuery: function NzTooltipBaseComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlay = _t.first);\n    }\n  }\n});\n\nNzTooltipBaseComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NzNoAnimationDirective\n  }];\n};\n\nNzTooltipBaseComponent.propDecorators = {\n  overlay: [{\n    type: ViewChild,\n    args: ['overlay', {\n      static: false\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTooltipBaseComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.NzNoAnimationDirective\n    }];\n  }, {\n    overlay: [{\n      type: ViewChild,\n      args: ['overlay', {\n        static: false\n      }]\n    }]\n  });\n})();\n\nfunction isTooltipEmpty(value) {\n  return value instanceof TemplateRef ? false : value === '' || !isNotNil(value);\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTooltipDirective = /*#__PURE__*/function (_NzTooltipBaseDirecti) {\n  _inherits(NzTooltipDirective, _NzTooltipBaseDirecti);\n\n  var _super = _createSuper(NzTooltipDirective);\n\n  function NzTooltipDirective(elementRef, hostView, resolver, renderer, noAnimation) {\n    var _this7;\n\n    _classCallCheck(this, NzTooltipDirective);\n\n    _this7 = _super.call(this, elementRef, hostView, resolver, renderer, noAnimation);\n    _this7.trigger = 'hover';\n    _this7.placement = 'top'; // tslint:disable-next-line:no-output-rename\n\n    _this7.visibleChange = new EventEmitter();\n    _this7.componentFactory = _this7.resolver.resolveComponentFactory(NzToolTipComponent);\n    return _this7;\n  }\n\n  return NzTooltipDirective;\n}(NzTooltipBaseDirective);\n\nNzTooltipDirective.ɵfac = function NzTooltipDirective_Factory(t) {\n  return new (t || NzTooltipDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective, 9));\n};\n\nNzTooltipDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTooltipDirective,\n  selectors: [[\"\", \"nz-tooltip\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzTooltipDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-tooltip-open\", ctx.visible);\n    }\n  },\n  inputs: {\n    trigger: [\"nzTooltipTrigger\", \"trigger\"],\n    placement: [\"nzTooltipPlacement\", \"placement\"],\n    title: [\"nzTooltipTitle\", \"title\"],\n    directiveTitle: [\"nz-tooltip\", \"directiveTitle\"],\n    origin: [\"nzTooltipOrigin\", \"origin\"],\n    visible: [\"nzTooltipVisible\", \"visible\"],\n    mouseEnterDelay: [\"nzTooltipMouseEnterDelay\", \"mouseEnterDelay\"],\n    mouseLeaveDelay: [\"nzTooltipMouseLeaveDelay\", \"mouseLeaveDelay\"],\n    overlayClassName: [\"nzTooltipOverlayClassName\", \"overlayClassName\"],\n    overlayStyle: [\"nzTooltipOverlayStyle\", \"overlayStyle\"]\n  },\n  outputs: {\n    visibleChange: \"nzTooltipVisibleChange\"\n  },\n  exportAs: [\"nzTooltip\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nNzTooltipDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: Renderer2\n  }, {\n    type: NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nNzTooltipDirective.propDecorators = {\n  title: [{\n    type: Input,\n    args: ['nzTooltipTitle']\n  }],\n  directiveTitle: [{\n    type: Input,\n    args: ['nz-tooltip']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['nzTooltipTrigger']\n  }],\n  placement: [{\n    type: Input,\n    args: ['nzTooltipPlacement']\n  }],\n  origin: [{\n    type: Input,\n    args: ['nzTooltipOrigin']\n  }],\n  visible: [{\n    type: Input,\n    args: ['nzTooltipVisible']\n  }],\n  mouseEnterDelay: [{\n    type: Input,\n    args: ['nzTooltipMouseEnterDelay']\n  }],\n  mouseLeaveDelay: [{\n    type: Input,\n    args: ['nzTooltipMouseLeaveDelay']\n  }],\n  overlayClassName: [{\n    type: Input,\n    args: ['nzTooltipOverlayClassName']\n  }],\n  overlayStyle: [{\n    type: Input,\n    args: ['nzTooltipOverlayStyle']\n  }],\n  visibleChange: [{\n    type: Output,\n    args: ['nzTooltipVisibleChange']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-tooltip]',\n      exportAs: 'nzTooltip',\n      host: {\n        '[class.ant-tooltip-open]': 'visible'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    trigger: [{\n      type: Input,\n      args: ['nzTooltipTrigger']\n    }],\n    placement: [{\n      type: Input,\n      args: ['nzTooltipPlacement']\n    }],\n    visibleChange: [{\n      type: Output,\n      args: ['nzTooltipVisibleChange']\n    }],\n    title: [{\n      type: Input,\n      args: ['nzTooltipTitle']\n    }],\n    directiveTitle: [{\n      type: Input,\n      args: ['nz-tooltip']\n    }],\n    origin: [{\n      type: Input,\n      args: ['nzTooltipOrigin']\n    }],\n    visible: [{\n      type: Input,\n      args: ['nzTooltipVisible']\n    }],\n    mouseEnterDelay: [{\n      type: Input,\n      args: ['nzTooltipMouseEnterDelay']\n    }],\n    mouseLeaveDelay: [{\n      type: Input,\n      args: ['nzTooltipMouseLeaveDelay']\n    }],\n    overlayClassName: [{\n      type: Input,\n      args: ['nzTooltipOverlayClassName']\n    }],\n    overlayStyle: [{\n      type: Input,\n      args: ['nzTooltipOverlayStyle']\n    }]\n  });\n})();\n\nvar NzToolTipComponent = /*#__PURE__*/function (_NzTooltipBaseCompone) {\n  _inherits(NzToolTipComponent, _NzTooltipBaseCompone);\n\n  var _super2 = _createSuper(NzToolTipComponent);\n\n  function NzToolTipComponent(cdr, noAnimation) {\n    var _this8;\n\n    _classCallCheck(this, NzToolTipComponent);\n\n    _this8 = _super2.call(this, cdr, noAnimation);\n    _this8.noAnimation = noAnimation;\n    _this8.nzTitle = null;\n    return _this8;\n  }\n\n  _createClass(NzToolTipComponent, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return isTooltipEmpty(this.nzTitle);\n    }\n  }]);\n\n  return NzToolTipComponent;\n}(NzTooltipBaseComponent);\n\nNzToolTipComponent.ɵfac = function NzToolTipComponent_Factory(t) {\n  return new (t || NzToolTipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective, 9));\n};\n\nNzToolTipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzToolTipComponent,\n  selectors: [[\"nz-tooltip\"]],\n  inputs: {\n    nzTitle: \"nzTitle\"\n  },\n  exportAs: [\"nzTooltipComponent\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 5,\n  consts: [[\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPush\", \"backdropClick\", \"detach\", \"positionChange\"], [\"overlay\", \"cdkConnectedOverlay\"], [1, \"ant-tooltip\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\"], [1, \"ant-tooltip-content\"], [1, \"ant-tooltip-arrow\"], [1, \"ant-tooltip-arrow-content\"], [1, \"ant-tooltip-inner\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzToolTipComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzToolTipComponent_ng_template_0_Template, 6, 6, \"ng-template\", 0, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵlistener(\"backdropClick\", function NzToolTipComponent_Template_ng_template_backdropClick_0_listener() {\n        return ctx.hide();\n      })(\"detach\", function NzToolTipComponent_Template_ng_template_detach_0_listener() {\n        return ctx.hide();\n      })(\"positionChange\", function NzToolTipComponent_Template_ng_template_positionChange_0_listener($event) {\n        return ctx.onPositionChange($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayOrigin\", ctx.origin)(\"cdkConnectedOverlayOpen\", ctx._visible)(\"cdkConnectedOverlayHasBackdrop\", ctx._hasBackdrop)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayPush\", true);\n    }\n  },\n  directives: [ɵngcc2.CdkConnectedOverlay, ɵngcc3.NzConnectedOverlayDirective, ɵngcc4.NgClass, ɵngcc4.NgStyle, ɵngcc1.NzNoAnimationDirective, ɵngcc5.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBigMotion]\n  },\n  changeDetection: 0\n});\n\nNzToolTipComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nNzToolTipComponent.propDecorators = {\n  nzTitle: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzToolTipComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tooltip',\n      exportAs: 'nzTooltipComponent',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [zoomBigMotion],\n      template: \"\\n    <ng-template\\n      #overlay=\\\"cdkConnectedOverlay\\\"\\n      cdkConnectedOverlay\\n      nzConnectedOverlay\\n      [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n      [cdkConnectedOverlayOpen]=\\\"_visible\\\"\\n      [cdkConnectedOverlayHasBackdrop]=\\\"_hasBackdrop\\\"\\n      [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n      [cdkConnectedOverlayPush]=\\\"true\\\"\\n      (backdropClick)=\\\"hide()\\\"\\n      (detach)=\\\"hide()\\\"\\n      (positionChange)=\\\"onPositionChange($event)\\\"\\n    >\\n      <div\\n        class=\\\"ant-tooltip\\\"\\n        [ngClass]=\\\"_classMap\\\"\\n        [ngStyle]=\\\"nzOverlayStyle\\\"\\n        [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [@zoomBigMotion]=\\\"'active'\\\"\\n      >\\n        <div class=\\\"ant-tooltip-content\\\">\\n          <div class=\\\"ant-tooltip-arrow\\\">\\n            <span class=\\\"ant-tooltip-arrow-content\\\"></span>\\n          </div>\\n          <div class=\\\"ant-tooltip-inner\\\">\\n            <ng-container *nzStringTemplateOutlet=\\\"nzTitle\\\">{{ nzTitle }}</ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \",\n      preserveWhitespaces: false\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzTitle: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzToolTipModule = function NzToolTipModule() {\n  _classCallCheck(this, NzToolTipModule);\n};\n\nNzToolTipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzToolTipModule\n});\nNzToolTipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzToolTipModule_Factory(t) {\n    return new (t || NzToolTipModule)();\n  },\n  imports: [[CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzToolTipModule, {\n    declarations: function declarations() {\n      return [NzToolTipComponent, NzTooltipDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule];\n    },\n    exports: function exports() {\n      return [NzToolTipComponent, NzTooltipDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzToolTipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzToolTipComponent, NzTooltipDirective],\n      exports: [NzToolTipComponent, NzTooltipDirective],\n      entryComponents: [NzToolTipComponent],\n      imports: [CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzToolTipComponent, NzToolTipModule, NzTooltipBaseComponent, NzTooltipBaseDirective, NzTooltipDirective, isTooltipEmpty };","map":{"version":3,"sources":["../../components/tooltip/base.ts","../../components/tooltip/tooltip.ts","../../components/tooltip/tooltip.module.ts","../../components/tooltip/public-api.ts","../../components/tooltip/ng-zorro-antd-tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { DEFAULT_TOOLTIP_POSITIONS, getPlacementName, POSITION_MAP } from 'ng-zorro-antd/core/overlay';\nimport { BooleanInput, NgClassInterface, NgStyleInterface, NzSafeAny, NzTSType } from 'ng-zorro-antd/core/types';\nimport { isNotNil, toBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nexport interface PropertyMapping {\n  [key: string]: [string, () => unknown];\n}\n\nexport type NzTooltipTrigger = 'click' | 'focus' | 'hover' | null;\n\n@Directive()\nexport abstract class NzTooltipBaseDirective implements OnChanges, OnDestroy, AfterViewInit {\n  directiveTitle?: NzTSType | null;\n  directiveContent?: NzTSType | null;\n  title?: NzTSType | null;\n  content?: NzTSType | null;\n  trigger?: NzTooltipTrigger;\n  placement?: string;\n  origin?: ElementRef<HTMLElement>;\n  visible?: boolean;\n  mouseEnterDelay?: number;\n  mouseLeaveDelay?: number;\n  overlayClassName?: string;\n  overlayStyle?: NgStyleInterface;\n  visibleChange = new EventEmitter<boolean>();\n\n  /**\n   * For create tooltip dynamically. This should be override for each different component.\n   */\n  protected componentFactory!: ComponentFactory<NzTooltipBaseComponent>;\n\n  /**\n   * This true title that would be used in other parts on this component.\n   */\n  protected get _title(): NzTSType | null {\n    return this.title || this.directiveTitle || null;\n  }\n\n  protected get _content(): NzTSType | null {\n    return this.content || this.directiveContent || null;\n  }\n\n  protected get _trigger(): NzTooltipTrigger {\n    return typeof this.trigger !== 'undefined' ? this.trigger : 'hover';\n  }\n\n  protected get _placement(): string {\n    return this.placement || 'top';\n  }\n\n  protected get _visible(): boolean {\n    return (typeof this.visible !== 'undefined' ? this.visible : this.internalVisible) || false;\n  }\n\n  protected get _mouseEnterDelay(): number {\n    return this.mouseEnterDelay || 0.15;\n  }\n\n  protected get _mouseLeaveDelay(): number {\n    return this.mouseLeaveDelay || 0.1;\n  }\n\n  protected get _overlayClassName(): string | null {\n    return this.overlayClassName || null;\n  }\n\n  protected get _overlayStyle(): NgStyleInterface | null {\n    return this.overlayStyle || null;\n  }\n\n  private internalVisible = false;\n\n  protected getProxyPropertyMap(): PropertyMapping {\n    return {\n      noAnimation: ['noAnimation', () => this.noAnimation]\n    };\n  }\n\n  component?: NzTooltipBaseComponent;\n\n  protected readonly destroy$ = new Subject<void>();\n  protected readonly triggerDisposables: Array<() => void> = [];\n\n  private delayTimer?: number;\n\n  constructor(\n    public elementRef: ElementRef,\n    protected hostView: ViewContainerRef,\n    protected resolver: ComponentFactoryResolver,\n    protected renderer: Renderer2,\n    protected noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { specificTrigger } = changes;\n\n    if (specificTrigger && !specificTrigger.isFirstChange()) {\n      this.registerTriggers();\n    }\n\n    if (this.component) {\n      this.updatePropertiesByChanges(changes);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.createComponent();\n    this.registerTriggers();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n\n    // Clear toggling timer. Issue #3875 #4317 #4386\n    this.clearTogglingTimer();\n    this.removeTriggerListeners();\n  }\n\n  show(): void {\n    this.component?.show();\n  }\n\n  hide(): void {\n    this.component?.hide();\n  }\n\n  /**\n   * Force the component to update its position.\n   */\n  updatePosition(): void {\n    if (this.component) {\n      this.component.updatePosition();\n    }\n  }\n\n  /**\n   * Create a dynamic tooltip component. This method can be override.\n   */\n  protected createComponent(): void {\n    const componentRef = this.hostView.createComponent(this.componentFactory);\n\n    this.component = componentRef.instance as NzTooltipBaseComponent;\n\n    // Remove the component's DOM because it should be in the overlay container.\n    this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), componentRef.location.nativeElement);\n    this.component.setOverlayOrigin({ elementRef: this.origin || this.elementRef });\n\n    this.initProperties();\n\n    this.component.nzVisibleChange.pipe(distinctUntilChanged(), takeUntil(this.destroy$)).subscribe((visible: boolean) => {\n      this.internalVisible = visible;\n      this.visibleChange.emit(visible);\n    });\n  }\n\n  protected registerTriggers(): void {\n    // When the method gets invoked, all properties has been synced to the dynamic component.\n    // After removing the old API, we can just check the directive's own `nzTrigger`.\n    const el = this.elementRef.nativeElement;\n    const trigger = this.trigger;\n\n    this.removeTriggerListeners();\n\n    if (trigger === 'hover') {\n      let overlayElement: HTMLElement;\n      this.triggerDisposables.push(\n        this.renderer.listen(el, 'mouseenter', () => {\n          this.delayEnterLeave(true, true, this._mouseEnterDelay);\n        })\n      );\n      this.triggerDisposables.push(\n        this.renderer.listen(el, 'mouseleave', () => {\n          this.delayEnterLeave(true, false, this._mouseLeaveDelay);\n          if (this.component?.overlay.overlayRef && !overlayElement) {\n            overlayElement = this.component.overlay.overlayRef.overlayElement;\n            this.triggerDisposables.push(\n              this.renderer.listen(overlayElement, 'mouseenter', () => {\n                this.delayEnterLeave(false, true, this._mouseEnterDelay);\n              })\n            );\n            this.triggerDisposables.push(\n              this.renderer.listen(overlayElement, 'mouseleave', () => {\n                this.delayEnterLeave(false, false, this._mouseLeaveDelay);\n              })\n            );\n          }\n        })\n      );\n    } else if (trigger === 'focus') {\n      this.triggerDisposables.push(this.renderer.listen(el, 'focus', () => this.show()));\n      this.triggerDisposables.push(this.renderer.listen(el, 'blur', () => this.hide()));\n    } else if (trigger === 'click') {\n      this.triggerDisposables.push(\n        this.renderer.listen(el, 'click', (e: MouseEvent) => {\n          e.preventDefault();\n          this.show();\n        })\n      );\n    }\n    // Else do nothing because user wants to control the visibility programmatically.\n  }\n\n  private updatePropertiesByChanges(changes: SimpleChanges): void {\n    this.updatePropertiesByKeys(Object.keys(changes));\n  }\n\n  private updatePropertiesByKeys(keys?: string[]): void {\n    const mappingProperties: PropertyMapping = {\n      // common mappings\n      title: ['nzTitle', () => this._title],\n      directiveTitle: ['nzTitle', () => this._title],\n      content: ['nzContent', () => this._content],\n      directiveContent: ['nzContent', () => this._content],\n      trigger: ['nzTrigger', () => this._trigger],\n      placement: ['nzPlacement', () => this._placement],\n      visible: ['nzVisible', () => this._visible],\n      mouseEnterDelay: ['nzMouseEnterDelay', () => this._mouseEnterDelay],\n      mouseLeaveDelay: ['nzMouseLeaveDelay', () => this._mouseLeaveDelay],\n      overlayClassName: ['nzOverlayClassName', () => this._overlayClassName],\n      overlayStyle: ['nzOverlayStyle', () => this._overlayStyle],\n      ...this.getProxyPropertyMap()\n    };\n\n    (keys || Object.keys(mappingProperties).filter(key => !key.startsWith('directive'))).forEach((property: NzSafeAny) => {\n      if (mappingProperties[property]) {\n        const [name, valueFn] = mappingProperties[property];\n        this.updateComponentValue(name, valueFn());\n      }\n    });\n\n    this.component?.updateByDirective();\n  }\n\n  private initProperties(): void {\n    this.updatePropertiesByKeys();\n  }\n\n  private updateComponentValue(key: string, value: NzSafeAny): void {\n    if (typeof value !== 'undefined') {\n      // @ts-ignore\n      this.component[key] = value;\n    }\n  }\n\n  private delayEnterLeave(isOrigin: boolean, isEnter: boolean, delay: number = -1): void {\n    if (this.delayTimer) {\n      this.clearTogglingTimer();\n    } else if (delay > 0) {\n      this.delayTimer = setTimeout(() => {\n        this.delayTimer = undefined;\n        isEnter ? this.show() : this.hide();\n      }, delay * 1000);\n    } else {\n      // `isOrigin` is used due to the tooltip will not hide immediately\n      // (may caused by the fade-out animation).\n      isEnter && isOrigin ? this.show() : this.hide();\n    }\n  }\n\n  private removeTriggerListeners(): void {\n    this.triggerDisposables.forEach(dispose => dispose());\n    this.triggerDisposables.length = 0;\n  }\n\n  private clearTogglingTimer(): void {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = undefined;\n    }\n  }\n}\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class NzTooltipBaseComponent implements OnDestroy {\n  static ngAcceptInputType_nzVisible: BooleanInput;\n\n  @ViewChild('overlay', { static: false }) overlay!: CdkConnectedOverlay;\n\n  nzTitle: NzTSType | null = null;\n  nzContent: NzTSType | null = null;\n  nzOverlayClassName!: string;\n  nzOverlayStyle: NgStyleInterface = {};\n  nzMouseEnterDelay?: number;\n  nzMouseLeaveDelay?: number;\n\n  nzVisibleChange = new Subject<boolean>();\n\n  set nzVisible(value: boolean) {\n    const visible = toBoolean(value);\n    if (this._visible !== visible) {\n      this._visible = visible;\n      this.nzVisibleChange.next(visible);\n    }\n  }\n\n  get nzVisible(): boolean {\n    return this._visible;\n  }\n\n  _visible = false;\n\n  set nzTrigger(value: NzTooltipTrigger) {\n    this._trigger = value;\n    this._hasBackdrop = this._trigger === 'click';\n  }\n\n  get nzTrigger(): NzTooltipTrigger {\n    return this._trigger;\n  }\n\n  protected _trigger: NzTooltipTrigger = 'hover';\n\n  set nzPlacement(value: string) {\n    if (value !== this.preferredPlacement) {\n      this.preferredPlacement = value;\n      this._positions = [POSITION_MAP[this.nzPlacement], ...DEFAULT_TOOLTIP_POSITIONS];\n    }\n  }\n\n  get nzPlacement(): string {\n    return this.preferredPlacement;\n  }\n\n  origin!: CdkOverlayOrigin;\n  preferredPlacement = 'top';\n\n  _classMap: NgClassInterface = {};\n  _hasBackdrop = false;\n  _prefix = 'ant-tooltip-placement';\n  _positions: ConnectionPositionPair[] = [...DEFAULT_TOOLTIP_POSITIONS];\n\n  constructor(public cdr: ChangeDetectorRef, public noAnimation?: NzNoAnimationDirective) {}\n\n  ngOnDestroy(): void {\n    this.nzVisibleChange.complete();\n  }\n\n  show(): void {\n    if (this.nzVisible) {\n      return;\n    }\n\n    if (!this.isEmpty()) {\n      this.nzVisible = true;\n      this.nzVisibleChange.next(true);\n      this.cdr.detectChanges();\n    }\n  }\n\n  hide(): void {\n    if (!this.nzVisible) {\n      return;\n    }\n\n    this.nzVisible = false;\n    this.nzVisibleChange.next(false);\n    this.cdr.detectChanges();\n  }\n\n  updateByDirective(): void {\n    this.setClassMap();\n    this.cdr.detectChanges();\n\n    Promise.resolve().then(() => {\n      this.updatePosition();\n      this.updateVisibilityByTitle();\n    });\n  }\n\n  /**\n   * Force the component to update its position.\n   */\n  updatePosition(): void {\n    if (this.origin && this.overlay && this.overlay.overlayRef) {\n      this.overlay.overlayRef.updatePosition();\n    }\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.preferredPlacement = getPlacementName(position)!;\n    this.setClassMap();\n    this.cdr.detectChanges();\n  }\n\n  setClassMap(): void {\n    this._classMap = {\n      [this.nzOverlayClassName]: true,\n      [`${this._prefix}-${this.preferredPlacement}`]: true\n    };\n  }\n\n  setOverlayOrigin(origin: CdkOverlayOrigin): void {\n    this.origin = origin;\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Hide the component while the content is empty.\n   */\n  private updateVisibilityByTitle(): void {\n    if (this.isEmpty()) {\n      this.hide();\n    }\n  }\n\n  /**\n   * Empty component cannot be opened.\n   */\n  protected abstract isEmpty(): boolean;\n}\n\nexport function isTooltipEmpty(value: string | TemplateRef<void> | null): boolean {\n  return value instanceof TemplateRef ? false : value === '' || !isNotNil(value);\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  Renderer2,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { zoomBigMotion } from 'ng-zorro-antd/core/animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NgStyleInterface, NzTSType } from 'ng-zorro-antd/core/types';\n\nimport { isTooltipEmpty, NzTooltipBaseComponent, NzTooltipBaseDirective, NzTooltipTrigger } from './base';\n\n@Directive({\n  selector: '[nz-tooltip]',\n  exportAs: 'nzTooltip',\n  host: {\n    '[class.ant-tooltip-open]': 'visible'\n  }\n})\nexport class NzTooltipDirective extends NzTooltipBaseDirective {\n  @Input('nzTooltipTitle') title?: NzTSType | null;\n  @Input('nz-tooltip') directiveTitle?: NzTSType | null;\n  @Input('nzTooltipTrigger') trigger?: NzTooltipTrigger = 'hover';\n  @Input('nzTooltipPlacement') placement?: string = 'top';\n  @Input('nzTooltipOrigin') origin?: ElementRef<HTMLElement>;\n  @Input('nzTooltipVisible') visible?: boolean;\n  @Input('nzTooltipMouseEnterDelay') mouseEnterDelay?: number;\n  @Input('nzTooltipMouseLeaveDelay') mouseLeaveDelay?: number;\n  @Input('nzTooltipOverlayClassName') overlayClassName?: string;\n  @Input('nzTooltipOverlayStyle') overlayStyle?: NgStyleInterface;\n\n  // tslint:disable-next-line:no-output-rename\n  @Output('nzTooltipVisibleChange') readonly visibleChange = new EventEmitter<boolean>();\n\n  componentFactory: ComponentFactory<NzToolTipComponent> = this.resolver.resolveComponentFactory(NzToolTipComponent);\n\n  constructor(\n    elementRef: ElementRef,\n    hostView: ViewContainerRef,\n    resolver: ComponentFactoryResolver,\n    renderer: Renderer2,\n    @Host() @Optional() noAnimation?: NzNoAnimationDirective\n  ) {\n    super(elementRef, hostView, resolver, renderer, noAnimation);\n  }\n}\n\n@Component({\n  selector: 'nz-tooltip',\n  exportAs: 'nzTooltipComponent',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [zoomBigMotion],\n  template: `\n    <ng-template\n      #overlay=\"cdkConnectedOverlay\"\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayOpen]=\"_visible\"\n      [cdkConnectedOverlayHasBackdrop]=\"_hasBackdrop\"\n      [cdkConnectedOverlayPositions]=\"_positions\"\n      [cdkConnectedOverlayPush]=\"true\"\n      (backdropClick)=\"hide()\"\n      (detach)=\"hide()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        class=\"ant-tooltip\"\n        [ngClass]=\"_classMap\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [@zoomBigMotion]=\"'active'\"\n      >\n        <div class=\"ant-tooltip-content\">\n          <div class=\"ant-tooltip-arrow\">\n            <span class=\"ant-tooltip-arrow-content\"></span>\n          </div>\n          <div class=\"ant-tooltip-inner\">\n            <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  preserveWhitespaces: false\n})\nexport class NzToolTipComponent extends NzTooltipBaseComponent {\n  @Input() nzTitle: NzTSType | null = null;\n\n  constructor(cdr: ChangeDetectorRef, @Host() @Optional() public noAnimation?: NzNoAnimationDirective) {\n    super(cdr, noAnimation);\n  }\n\n  protected isEmpty(): boolean {\n    return isTooltipEmpty(this.nzTitle);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n// NOTE: the `t` is not uppercase in directives. Change this would however introduce breaking change.\nimport { NzToolTipComponent, NzTooltipDirective } from './tooltip';\n\n@NgModule({\n  declarations: [NzToolTipComponent, NzTooltipDirective],\n  exports: [NzToolTipComponent, NzTooltipDirective],\n  entryComponents: [NzToolTipComponent],\n  imports: [CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule]\n})\nexport class NzToolTipModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './tooltip';\nexport * from './tooltip.module';\nexport * from './base';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}