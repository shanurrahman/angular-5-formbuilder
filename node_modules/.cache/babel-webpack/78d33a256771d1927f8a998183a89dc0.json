{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng-zorro-antd/icon';\n\nfunction NzTagComponent_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"i\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTagComponent_i_1_Template_i_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.closeTag($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c0 = [\"*\"];\n\nvar NzTagComponent = /*#__PURE__*/function () {\n  function NzTagComponent(renderer, elementRef) {\n    _classCallCheck(this, NzTagComponent);\n\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.isPresetColor = false;\n    this.nzMode = 'default';\n    this.nzChecked = false;\n    this.nzOnClose = new EventEmitter();\n    this.nzCheckedChange = new EventEmitter();\n  }\n\n  _createClass(NzTagComponent, [{\n    key: \"updateCheckedStatus\",\n    value: function updateCheckedStatus() {\n      if (this.nzMode === 'checkable') {\n        this.nzChecked = !this.nzChecked;\n        this.nzCheckedChange.emit(this.nzChecked);\n      }\n    }\n  }, {\n    key: \"closeTag\",\n    value: function closeTag(e) {\n      this.nzOnClose.emit(e);\n\n      if (!e.defaultPrevented) {\n        this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzColor = changes.nzColor;\n\n      if (nzColor) {\n        if (!this.nzColor) {\n          this.isPresetColor = false;\n        } else {\n          this.isPresetColor = /^(pink|red|yellow|orange|cyan|green|blue|purple|geekblue|magenta|volcano|gold|lime)(-inverse)?$/.test(this.nzColor) || /^(success|processing|error|default|warning)$/.test(this.nzColor);\n        }\n      }\n    }\n  }]);\n\n  return NzTagComponent;\n}();\n\nNzTagComponent.ɵfac = function NzTagComponent_Factory(t) {\n  return new (t || NzTagComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNzTagComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTagComponent,\n  selectors: [[\"nz-tag\"]],\n  hostVars: 12,\n  hostBindings: function NzTagComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NzTagComponent_click_HostBindingHandler() {\n        return ctx.updateCheckedStatus();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.isPresetColor ? \"ant-tag-\" + ctx.nzColor : \"\");\n      ɵngcc0.ɵɵstyleProp(\"background-color\", ctx.isPresetColor ? \"\" : ctx.nzColor);\n      ɵngcc0.ɵɵclassProp(\"ant-tag\", true)(\"ant-tag-has-color\", ctx.nzColor && !ctx.isPresetColor)(\"ant-tag-checkable\", ctx.nzMode === \"checkable\")(\"ant-tag-checkable-checked\", ctx.nzChecked);\n    }\n  },\n  inputs: {\n    nzMode: \"nzMode\",\n    nzChecked: \"nzChecked\",\n    nzColor: \"nzColor\"\n  },\n  outputs: {\n    nzOnClose: \"nzOnClose\",\n    nzCheckedChange: \"nzCheckedChange\"\n  },\n  exportAs: [\"nzTag\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 1,\n  consts: [[\"nz-icon\", \"\", \"nzType\", \"close\", \"class\", \"ant-tag-close-icon\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"close\", \"tabindex\", \"-1\", 1, \"ant-tag-close-icon\", 3, \"click\"]],\n  template: function NzTagComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵtemplate(1, NzTagComponent_i_1_Template, 1, 0, \"i\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzMode === \"closeable\");\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc2.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzTagComponent.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nNzTagComponent.propDecorators = {\n  nzMode: [{\n    type: Input\n  }],\n  nzColor: [{\n    type: Input\n  }],\n  nzChecked: [{\n    type: Input\n  }],\n  nzOnClose: [{\n    type: Output\n  }],\n  nzCheckedChange: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTagComponent.prototype, \"nzChecked\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTagComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tag',\n      exportAs: 'nzTag',\n      preserveWhitespaces: false,\n      template: \"\\n    <ng-content></ng-content>\\n    <i nz-icon nzType=\\\"close\\\" class=\\\"ant-tag-close-icon\\\" *ngIf=\\\"nzMode === 'closeable'\\\" tabindex=\\\"-1\\\" (click)=\\\"closeTag($event)\\\"></i>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[style.background-color]': \"isPresetColor ? '' : nzColor\",\n        '[class]': \"isPresetColor ? ('ant-tag-' + nzColor) : ''\",\n        '[class.ant-tag]': \"true\",\n        '[class.ant-tag-has-color]': \"nzColor && !isPresetColor\",\n        '[class.ant-tag-checkable]': \"nzMode === 'checkable'\",\n        '[class.ant-tag-checkable-checked]': \"nzChecked\",\n        '(click)': 'updateCheckedStatus()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    nzMode: [{\n      type: Input\n    }],\n    nzChecked: [{\n      type: Input\n    }],\n    nzOnClose: [{\n      type: Output\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }],\n    nzColor: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTagModule = function NzTagModule() {\n  _classCallCheck(this, NzTagModule);\n};\n\nNzTagModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzTagModule\n});\nNzTagModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzTagModule_Factory(t) {\n    return new (t || NzTagModule)();\n  },\n  imports: [[CommonModule, FormsModule, NzIconModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTagModule, {\n    declarations: function declarations() {\n      return [NzTagComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, NzIconModule];\n    },\n    exports: function exports() {\n      return [NzTagComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTagModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, NzIconModule],\n      declarations: [NzTagComponent],\n      exports: [NzTagComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTagComponent, NzTagModule };","map":{"version":3,"sources":["../../components/tag/tag.component.ts","../../components/tag/tag.module.ts","../../components/tag/public-api.ts","../../components/tag/ng-zorro-antd-tag.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'nz-tag',\n  exportAs: 'nzTag',\n  preserveWhitespaces: false,\n  template: `\n    <ng-content></ng-content>\n    <i nz-icon nzType=\"close\" class=\"ant-tag-close-icon\" *ngIf=\"nzMode === 'closeable'\" tabindex=\"-1\" (click)=\"closeTag($event)\"></i>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[style.background-color]': `isPresetColor ? '' : nzColor`,\n    '[class]': `isPresetColor ? ('ant-tag-' + nzColor) : ''`,\n    '[class.ant-tag]': `true`,\n    '[class.ant-tag-has-color]': `nzColor && !isPresetColor`,\n    '[class.ant-tag-checkable]': `nzMode === 'checkable'`,\n    '[class.ant-tag-checkable-checked]': `nzChecked`,\n    '(click)': 'updateCheckedStatus()'\n  }\n})\nexport class NzTagComponent implements OnChanges {\n  static ngAcceptInputType_nzChecked: BooleanInput;\n  isPresetColor = false;\n  @Input() nzMode: 'default' | 'closeable' | 'checkable' = 'default';\n  @Input() nzColor?: string;\n  @Input() @InputBoolean() nzChecked = false;\n  @Output() readonly nzOnClose = new EventEmitter<MouseEvent>();\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n\n  updateCheckedStatus(): void {\n    if (this.nzMode === 'checkable') {\n      this.nzChecked = !this.nzChecked;\n      this.nzCheckedChange.emit(this.nzChecked);\n    }\n  }\n\n  closeTag(e: MouseEvent): void {\n    this.nzOnClose.emit(e);\n    if (!e.defaultPrevented) {\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n    }\n  }\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzColor } = changes;\n    if (nzColor) {\n      if (!this.nzColor) {\n        this.isPresetColor = false;\n      } else {\n        this.isPresetColor =\n          /^(pink|red|yellow|orange|cyan|green|blue|purple|geekblue|magenta|volcano|gold|lime)(-inverse)?$/.test(this.nzColor) ||\n          /^(success|processing|error|default|warning)$/.test(this.nzColor);\n      }\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTagComponent } from './tag.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NzIconModule],\n  declarations: [NzTagComponent],\n  exports: [NzTagComponent]\n})\nexport class NzTagModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './tag.component';\nexport * from './tag.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}