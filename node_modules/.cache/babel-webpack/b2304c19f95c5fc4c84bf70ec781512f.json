{"ast":null,"code":"import _classCallCheck from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shanur/Documents/personal/angular-5-formbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Renderer2, ContentChild, Input, NgModule } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzIconDirective, NzIconModule } from 'ng-zorro-antd/icon';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith, filter } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { ɵNzTransitionPatchModule } from 'ng-zorro-antd/core/transition-patch';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/icon';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/transition-patch';\nvar _c0 = [\"nz-button\", \"\"];\n\nfunction NzButtonComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 1);\n  }\n}\n\nvar _c1 = [\"*\"];\nvar NZ_CONFIG_MODULE_NAME = 'button';\n\nvar NzButtonComponent = /*#__PURE__*/function () {\n  function NzButtonComponent(elementRef, cdr, renderer, nzConfigService) {\n    var _this = this;\n\n    _classCallCheck(this, NzButtonComponent);\n\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.nzConfigService = nzConfigService;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzBlock = false;\n    this.nzGhost = false;\n    this.nzSearch = false;\n    this.nzLoading = false;\n    this.nzDanger = false;\n    this.disabled = false;\n    this.tabIndex = null;\n    this.nzType = null;\n    this.nzShape = null;\n    this.nzSize = 'default';\n    this.destroy$ = new Subject();\n    this.loading$ = new Subject();\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(function () {\n      _this.cdr.markForCheck();\n    });\n  }\n\n  _createClass(NzButtonComponent, [{\n    key: \"insertSpan\",\n    value: function insertSpan(nodes, renderer) {\n      nodes.forEach(function (node) {\n        if (node.nodeName === '#text') {\n          var span = renderer.createElement('span');\n          var parent = renderer.parentNode(node);\n          renderer.insertBefore(parent, span, node);\n          renderer.appendChild(span, node);\n        }\n      });\n    }\n  }, {\n    key: \"assertIconOnly\",\n    value: function assertIconOnly(element, renderer) {\n      var listOfNode = Array.from(element.childNodes);\n      var iconCount = listOfNode.filter(function (node) {\n        return node.nodeName === 'I';\n      }).length;\n      var noText = listOfNode.every(function (node) {\n        return node.nodeName !== '#text';\n      });\n      var noSpan = listOfNode.every(function (node) {\n        return node.nodeName !== 'SPAN';\n      });\n      var isIconOnly = noSpan && noText && iconCount >= 1;\n\n      if (isIconOnly) {\n        renderer.addClass(element, 'ant-btn-icon-only');\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzLoading = changes.nzLoading;\n\n      if (nzLoading) {\n        this.loading$.next(this.nzLoading);\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.assertIconOnly(this.elementRef.nativeElement, this.renderer);\n      this.insertSpan(this.elementRef.nativeElement.childNodes, this.renderer);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this.loading$.pipe(startWith(this.nzLoading), filter(function () {\n        return !!_this2.nzIconDirectiveElement;\n      }), takeUntil(this.destroy$)).subscribe(function (loading) {\n        var nativeElement = _this2.nzIconDirectiveElement.nativeElement;\n\n        if (loading) {\n          _this2.renderer.setStyle(nativeElement, 'display', 'none');\n        } else {\n          _this2.renderer.removeStyle(nativeElement, 'display');\n        }\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzButtonComponent;\n}();\n\nNzButtonComponent.ɵfac = function NzButtonComponent_Factory(t) {\n  return new (t || NzButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService));\n};\n\nNzButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzButtonComponent,\n  selectors: [[\"button\", \"nz-button\", \"\"], [\"a\", \"nz-button\", \"\"]],\n  contentQueries: function NzButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzIconDirective, true, ElementRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzIconDirectiveElement = _t.first);\n    }\n  },\n  hostVars: 32,\n  hostBindings: function NzButtonComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex === null ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null);\n      ɵngcc0.ɵɵclassProp(\"ant-btn\", true)(\"ant-btn-primary\", ctx.nzType === \"primary\")(\"ant-btn-dashed\", ctx.nzType === \"dashed\")(\"ant-btn-link\", ctx.nzType === \"link\")(\"ant-btn-text\", ctx.nzType === \"text\")(\"ant-btn-danger\", ctx.nzType === \"danger\")(\"ant-btn-circle\", ctx.nzShape === \"circle\")(\"ant-btn-round\", ctx.nzShape === \"round\")(\"ant-btn-lg\", ctx.nzSize === \"large\")(\"ant-btn-sm\", ctx.nzSize === \"small\")(\"ant-btn-dangerous\", ctx.nzDanger)(\"ant-btn-loading\", ctx.nzLoading)(\"ant-btn-background-ghost\", ctx.nzGhost)(\"ant-btn-block\", ctx.nzBlock)(\"ant-input-search-button\", ctx.nzSearch);\n    }\n  },\n  inputs: {\n    nzBlock: \"nzBlock\",\n    nzGhost: \"nzGhost\",\n    nzSearch: \"nzSearch\",\n    nzLoading: \"nzLoading\",\n    nzDanger: \"nzDanger\",\n    disabled: \"disabled\",\n    tabIndex: \"tabIndex\",\n    nzType: \"nzType\",\n    nzShape: \"nzShape\",\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"nzButton\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 1,\n  consts: [[\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"]],\n  template: function NzButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzButtonComponent_i_0_Template, 1, 0, \"i\", 0);\n      ɵngcc0.ɵɵprojection(1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzLoading);\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc3.NzIconDirective, ɵngcc4.ɵNzTransitionPatchDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzButtonComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NzConfigService\n  }];\n};\n\nNzButtonComponent.propDecorators = {\n  nzIconDirectiveElement: [{\n    type: ContentChild,\n    args: [NzIconDirective, {\n      read: ElementRef\n    }]\n  }],\n  nzBlock: [{\n    type: Input\n  }],\n  nzGhost: [{\n    type: Input\n  }],\n  nzSearch: [{\n    type: Input\n  }],\n  nzLoading: [{\n    type: Input\n  }],\n  nzDanger: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  nzType: [{\n    type: Input\n  }],\n  nzShape: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzBlock\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzGhost\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzSearch\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzLoading\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzDanger\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"disabled\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", String)], NzButtonComponent.prototype, \"nzSize\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'button[nz-button], a[nz-button]',\n      exportAs: 'nzButton',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <i nz-icon nzType=\\\"loading\\\" *ngIf=\\\"nzLoading\\\"></i>\\n    <ng-content></ng-content>\\n  \",\n      host: {\n        '[class.ant-btn]': \"true\",\n        '[class.ant-btn-primary]': \"nzType === 'primary'\",\n        '[class.ant-btn-dashed]': \"nzType === 'dashed'\",\n        '[class.ant-btn-link]': \"nzType === 'link'\",\n        '[class.ant-btn-text]': \"nzType === 'text'\",\n        '[class.ant-btn-danger]': \"nzType === 'danger'\",\n        '[class.ant-btn-circle]': \"nzShape === 'circle'\",\n        '[class.ant-btn-round]': \"nzShape === 'round'\",\n        '[class.ant-btn-lg]': \"nzSize === 'large'\",\n        '[class.ant-btn-sm]': \"nzSize === 'small'\",\n        '[class.ant-btn-dangerous]': \"nzDanger\",\n        '[class.ant-btn-loading]': \"nzLoading\",\n        '[class.ant-btn-background-ghost]': \"nzGhost\",\n        '[class.ant-btn-block]': \"nzBlock\",\n        '[class.ant-input-search-button]': \"nzSearch\",\n        '[attr.tabindex]': 'disabled ? -1 : (tabIndex === null ? null : tabIndex)',\n        '[attr.disabled]': 'disabled || null'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.NzConfigService\n    }];\n  }, {\n    nzBlock: [{\n      type: Input\n    }],\n    nzGhost: [{\n      type: Input\n    }],\n    nzSearch: [{\n      type: Input\n    }],\n    nzLoading: [{\n      type: Input\n    }],\n    nzDanger: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzShape: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzIconDirectiveElement: [{\n      type: ContentChild,\n      args: [NzIconDirective, {\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzButtonGroupComponent = function NzButtonGroupComponent() {\n  _classCallCheck(this, NzButtonGroupComponent);\n\n  this.nzSize = 'default';\n};\n\nNzButtonGroupComponent.ɵfac = function NzButtonGroupComponent_Factory(t) {\n  return new (t || NzButtonGroupComponent)();\n};\n\nNzButtonGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzButtonGroupComponent,\n  selectors: [[\"nz-button-group\"]],\n  hostVars: 6,\n  hostBindings: function NzButtonGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-btn-group\", true)(\"ant-btn-group-lg\", ctx.nzSize === \"large\")(\"ant-btn-group-sm\", ctx.nzSize === \"small\");\n    }\n  },\n  inputs: {\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"nzButtonGroup\"],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function NzButtonGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzButtonGroupComponent.propDecorators = {\n  nzSize: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzButtonGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-button-group',\n      exportAs: 'nzButtonGroup',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.ant-btn-group]': \"true\",\n        '[class.ant-btn-group-lg]': \"nzSize === 'large'\",\n        '[class.ant-btn-group-sm]': \"nzSize === 'small'\"\n      },\n      preserveWhitespaces: false,\n      template: \" <ng-content></ng-content> \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzButtonModule = function NzButtonModule() {\n  _classCallCheck(this, NzButtonModule);\n};\n\nNzButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzButtonModule\n});\nNzButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzButtonModule_Factory(t) {\n    return new (t || NzButtonModule)();\n  },\n  imports: [[CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule], ɵNzTransitionPatchModule, NzWaveModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzButtonModule, {\n    declarations: function declarations() {\n      return [NzButtonComponent, NzButtonGroupComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule];\n    },\n    exports: function exports() {\n      return [NzButtonComponent, NzButtonGroupComponent, ɵNzTransitionPatchModule, NzWaveModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzButtonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzButtonComponent, NzButtonGroupComponent],\n      exports: [NzButtonComponent, NzButtonGroupComponent, ɵNzTransitionPatchModule, NzWaveModule],\n      imports: [CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzButtonComponent, NzButtonGroupComponent, NzButtonModule };","map":{"version":3,"sources":["../../components/button/button.component.ts","../../components/button/button-group.component.ts","../../components/button/button.module.ts","../../components/button/public-api.ts","../../components/button/ng-zorro-antd-button.ts"],"names":["NzTransitionPatchModule"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\n\nexport type NzButtonType = 'primary' | 'default' | 'dashed' | 'danger' | 'link' | 'text' | null;\nexport type NzButtonShape = 'circle' | 'round' | null;\nexport type NzButtonSize = 'large' | 'default' | 'small';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'button';\n\n@Component({\n  selector: 'button[nz-button], a[nz-button]',\n  exportAs: 'nzButton',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <i nz-icon nzType=\"loading\" *ngIf=\"nzLoading\"></i>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-btn]': `true`,\n    '[class.ant-btn-primary]': `nzType === 'primary'`,\n    '[class.ant-btn-dashed]': `nzType === 'dashed'`,\n    '[class.ant-btn-link]': `nzType === 'link'`,\n    '[class.ant-btn-text]': `nzType === 'text'`,\n    '[class.ant-btn-danger]': `nzType === 'danger'`,\n    '[class.ant-btn-circle]': `nzShape === 'circle'`,\n    '[class.ant-btn-round]': `nzShape === 'round'`,\n    '[class.ant-btn-lg]': `nzSize === 'large'`,\n    '[class.ant-btn-sm]': `nzSize === 'small'`,\n    '[class.ant-btn-dangerous]': `nzDanger`,\n    '[class.ant-btn-loading]': `nzLoading`,\n    '[class.ant-btn-background-ghost]': `nzGhost`,\n    '[class.ant-btn-block]': `nzBlock`,\n    '[class.ant-input-search-button]': `nzSearch`,\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex === null ? null : tabIndex)',\n    '[attr.disabled]': 'disabled || null'\n  }\n})\nexport class NzButtonComponent implements OnDestroy, OnChanges, AfterViewInit, AfterContentInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzBlock: BooleanInput;\n  static ngAcceptInputType_nzGhost: BooleanInput;\n  static ngAcceptInputType_nzSearch: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzDanger: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n\n  @ContentChild(NzIconDirective, { read: ElementRef }) nzIconDirectiveElement!: ElementRef;\n  @Input() @InputBoolean() nzBlock: boolean = false;\n  @Input() @InputBoolean() nzGhost: boolean = false;\n  @Input() @InputBoolean() nzSearch: boolean = false;\n  @Input() @InputBoolean() nzLoading: boolean = false;\n  @Input() @InputBoolean() nzDanger: boolean = false;\n  @Input() @InputBoolean() disabled: boolean = false;\n  @Input() tabIndex: number | string | null = null;\n  @Input() nzType: NzButtonType = null;\n  @Input() nzShape: NzButtonShape = null;\n  @Input() @WithConfig() nzSize: NzButtonSize = 'default';\n  private destroy$ = new Subject<void>();\n  private loading$ = new Subject<boolean>();\n\n  insertSpan(nodes: NodeList, renderer: Renderer2): void {\n    nodes.forEach(node => {\n      if (node.nodeName === '#text') {\n        const span = renderer.createElement('span');\n        const parent = renderer.parentNode(node);\n        renderer.insertBefore(parent, span, node);\n        renderer.appendChild(span, node);\n      }\n    });\n  }\n\n  assertIconOnly(element: HTMLButtonElement, renderer: Renderer2): void {\n    const listOfNode = Array.from(element.childNodes);\n    const iconCount = listOfNode.filter(node => node.nodeName === 'I').length;\n    const noText = listOfNode.every(node => node.nodeName !== '#text');\n    const noSpan = listOfNode.every(node => node.nodeName !== 'SPAN');\n    const isIconOnly = noSpan && noText && iconCount >= 1;\n    if (isIconOnly) {\n      renderer.addClass(element, 'ant-btn-icon-only');\n    }\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    public nzConfigService: NzConfigService\n  ) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzLoading } = changes;\n    if (nzLoading) {\n      this.loading$.next(this.nzLoading);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.assertIconOnly(this.elementRef.nativeElement, this.renderer);\n    this.insertSpan(this.elementRef.nativeElement.childNodes, this.renderer);\n  }\n\n  ngAfterContentInit(): void {\n    this.loading$\n      .pipe(\n        startWith(this.nzLoading),\n        filter(() => !!this.nzIconDirectiveElement),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(loading => {\n        const nativeElement = this.nzIconDirectiveElement.nativeElement;\n        if (loading) {\n          this.renderer.setStyle(nativeElement, 'display', 'none');\n        } else {\n          this.renderer.removeStyle(nativeElement, 'display');\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport type NzButtonGroupSize = 'large' | 'default' | 'small';\n\n@Component({\n  selector: 'nz-button-group',\n  exportAs: 'nzButtonGroup',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-btn-group]': `true`,\n    '[class.ant-btn-group-lg]': `nzSize === 'large'`,\n    '[class.ant-btn-group-sm]': `nzSize === 'small'`\n  },\n  preserveWhitespaces: false,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzButtonGroupComponent {\n  @Input() nzSize: NzButtonGroupSize = 'default';\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ɵNzTransitionPatchModule as NzTransitionPatchModule } from 'ng-zorro-antd/core/transition-patch';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzButtonGroupComponent } from './button-group.component';\nimport { NzButtonComponent } from './button.component';\n\n@NgModule({\n  declarations: [NzButtonComponent, NzButtonGroupComponent],\n  exports: [NzButtonComponent, NzButtonGroupComponent, NzTransitionPatchModule, NzWaveModule],\n  imports: [CommonModule, NzWaveModule, NzIconModule, NzTransitionPatchModule]\n})\nexport class NzButtonModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './button.component';\nexport * from './button-group.component';\nexport * from './button.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}