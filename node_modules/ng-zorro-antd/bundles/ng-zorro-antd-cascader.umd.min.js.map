{"version":3,"sources":["../../components/cascader/typings.ts","../../components/cascader/utils.ts","../../node_modules/tslib/tslib.es6.js","../../components/cascader/cascader-li.component.ts","../../components/cascader/cascader.service.ts","../../components/cascader/cascader.component.ts","../../components/cascader/cascader.module.ts"],"names":["isShowSearchObject","options","isChildOption","o","isLeaf","children","length","isParentOption","__decorate","decorators","target","key","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","create","__read","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","NzCascaderOptionComponent","cdr","elementRef","renderer","this","optionTemplate","activated","nzLabelProperty","addClass","nativeElement","prototype","option","markForCheck","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","selector","exportAs","template","host","[attr.title]","[class.ant-cascader-menu-item-active]","[class.ant-cascader-menu-item-expand]","[class.ant-cascader-menu-item-disabled]","ChangeDetectorRef","ElementRef","Renderer2","Input","NzCascaderService","activatedOptions","columns","inSearchingMode","selectedOptions","values","$loading","BehaviorSubject","$redraw","Subject","$optionSelected","$quitSearching","columnsSnapshot","activatedOptionsSnapshot","ngOnDestroy","complete","syncOptions","first","_this","hasValue","lastColumnIndex","initColumnWithIndex","columnIndex","activatedOptionSetter","currentValue","isNotNil","findOptionWithValue","cascaderComponent","nzValueProperty","_a","setOptionActivated","dropBehindColumns","isLoaded","nzLoadData","loadChildren","withComponent","withOptions","prepareSearchOptions","inputValue","performSelect","loadingChildren","disabled","trackAncestorActivatedOptions","dropBehindActivatedOptions","setColumnData","setOptionSelected","index","changeOn","nzChangeOn","nzChangeOnSelect","prepareEmitValue","setOptionDeactivatedSinceColumn","column","setSearchOptionSelected","path","setTimeout","searchValue","results","showSearch","nzShowSearch","filter","p","some","label","getOptionLabel","indexOf","sorter","loopChild","node","forceDisabled","cPath","Array","from","map","join","pop","loopParent","forEach","sNode","parent","sort","a","b","toggleSearchingMode","toSearching","clear","getOptionValue","existingOptions","arraysEqual","startIndex","lastReserveIndex","splice","slice","success","failure","loadFn","loading","then","targetColumn","v_1","find","Injectable","NZ_CONFIG_MODULE_NAME","defaultDisplayRender","labels","NzCascaderComponent","cascaderService","i18nService","nzConfigService","noAnimation","_nzModuleName","nzOptionRender","nzShowInput","nzShowArrow","nzAllowClear","nzAutoFocus","nzDisabled","nzExpandTrigger","nzLabelRender","nzSize","nzPlaceHolder","nzMenuStyle","nzMouseEnterDelay","nzMouseLeaveDelay","nzTriggerAction","nzVisibleChange","EventEmitter","nzSelectionChange","nzSelect","nzClear","shouldShowEmpty","menuVisible","isLoading","labelRenderContext","onChange","Function","onTouched","positions","DEFAULT_CASCADER_POSITIONS","dropdownHeightStyle","isFocused","destroy$","inputString","isOpening","delayMenuTimer","delaySelectTimer","el","nzOptions","nzMenuClassName","nzColumnClassName","hasInput","ngOnInit","srv","pipe","takeUntil","subscribe","checkChildren","setDisplayLabel","reposition","setDropdownStyles","data","delaySetMenuVisible","emit","dropdownWidthStyle","localeChange","startWith","setLocale","getConfigChangeEventForComponent","clearDelayMenuTimer","clearDelaySelectTimer","registerOnChange","fn","registerOnTouched","writeValue","toArray","visible","delay","setOpening","setMenuVisible","detectChanges","clearTimeout","clearSelection","event","preventDefault","stopPropagation","labelRenderText","getSubmitValue","focus","input","blur","handleInputBlur","handleInputFocus","onKeyDown","keyCode","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","BACKSPACE","ESCAPE","moveUpOrDown","moveLeft","moveRight","onEnter","onTriggerClick","isActionTrigger","onTriggerMouseEnter","onTriggerMouseLeave","mouseTarget","relatedTarget","hostEl","menuEl","menu","contains","onOptionMouseEnter","delaySetOptionActivated","onOptionMouseLeave","_columnIndex","onOptionClick","action","Math","max","isUp","activeOption","nextIndex","nextOption","nextOpt","isOptionActivated","setDisabledState","isDisabled","closeMenu","overlay","overlayRef","Promise","resolve","updatePosition","cascaderItems","item","isLabelRenderTemplate","firstColumn","offsetWidth","locale","getLocaleData","preserveWhitespaces","animations","slideMotion","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","[attr.tabIndex]","[class.ant-cascader-lg]","[class.ant-cascader-sm]","[class.ant-cascader-picker-disabled]","[class.ant-cascader-picker-open]","[class.ant-cascader-picker-with-value]","[class.ant-cascader-focused]","NzI18nService","NzConfigService","NzNoAnimationDirective","type","Host","Optional","ViewChild","static","CdkConnectedOverlay","ViewChildren","Output","HostListener","InputBoolean","WithConfig","NgModule","imports","CommonModule","FormsModule","OverlayModule","NzOutletModule","NzEmptyModule","NzHighlightModule","NzIconModule","NzInputModule","NzNoAnimationModule","NzOverlayModule","declarations","exports"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport type NzCascaderExpandTrigger = 'click' | 'hover';\nexport type NzCascaderTriggerType = 'click' | 'hover';\nexport type NzCascaderSize = 'small' | 'large' | 'default';\n\nexport type NzCascaderFilter = (searchValue: string, path: NzCascaderOption[]) => boolean;\nexport type NzCascaderSorter = (a: NzCascaderOption[], b: NzCascaderOption[], inputValue: string) => number;\n\nexport interface NzCascaderOption {\n  value?: NzSafeAny;\n  label?: string;\n  title?: string;\n  disabled?: boolean;\n  loading?: boolean;\n  isLeaf?: boolean;\n  parent?: NzCascaderOption;\n  children?: NzCascaderOption[];\n\n  [key: string]: NzSafeAny;\n}\n\nexport interface NzCascaderSearchOption extends NzCascaderOption {\n  path: NzCascaderOption[];\n}\n\nexport interface NzShowSearchOptions {\n  filter?: NzCascaderFilter;\n  sorter?: NzCascaderSorter;\n}\n\nexport function isShowSearchObject(options: NzShowSearchOptions | boolean): options is NzShowSearchOptions {\n  return typeof options !== 'boolean';\n}\n\n/**\n * To avoid circular dependency, provide an interface of `NzCascaderComponent`\n * for `NzCascaderService`.\n */\nexport interface NzCascaderComponentAsSource {\n  inputValue: string;\n  nzShowSearch: NzShowSearchOptions | boolean;\n  nzLabelProperty: string;\n  nzValueProperty: string;\n  nzChangeOnSelect: boolean;\n\n  nzChangeOn?(option: NzCascaderOption, level: number): boolean;\n\n  nzLoadData?(node: NzCascaderOption, index: number): PromiseLike<NzSafeAny>;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzCascaderOption } from './typings';\n\nexport function isChildOption(o: NzCascaderOption): boolean {\n  return o.isLeaf || !o.children || !o.children.length;\n}\n\nexport function isParentOption(o: NzCascaderOption): boolean {\n  return !!o.children && !!o.children.length && !o.isLeaf;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzCascaderOption } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: '[nz-cascader-option]',\n  exportAs: 'nzCascaderOption',\n  template: `\n    <ng-container *ngIf=\"optionTemplate; else defaultOptionTemplate\">\n      <ng-template [ngTemplateOutlet]=\"optionTemplate\" [ngTemplateOutletContext]=\"{ $implicit: option, index: columnIndex }\"></ng-template>\n    </ng-container>\n    <ng-template #defaultOptionTemplate>\n      <span [innerHTML]=\"optionLabel | nzHighlight: highlightText:'g':'ant-cascader-menu-item-keyword'\"></span>\n    </ng-template>\n    <span *ngIf=\"!option.isLeaf || option.children?.length || option.loading\" class=\"ant-cascader-menu-item-expand-icon\">\n      <i nz-icon [nzType]=\"option.loading ? 'loading' : 'right'\"></i>\n    </span>\n  `,\n  host: {\n    '[attr.title]': 'option.title || optionLabel',\n    '[class.ant-cascader-menu-item-active]': 'activated',\n    '[class.ant-cascader-menu-item-expand]': '!option.isLeaf',\n    '[class.ant-cascader-menu-item-disabled]': 'option.disabled'\n  }\n})\nexport class NzCascaderOptionComponent {\n  @Input() optionTemplate: TemplateRef<NzCascaderOption> | null = null;\n  @Input() option!: NzCascaderOption;\n  @Input() activated = false;\n  @Input() highlightText!: string;\n  @Input() nzLabelProperty = 'label';\n  @Input() columnIndex!: number;\n\n  constructor(private cdr: ChangeDetectorRef, elementRef: ElementRef, renderer: Renderer2) {\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader-menu-item');\n  }\n\n  get optionLabel(): string {\n    return this.option[this.nzLabelProperty];\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { arraysEqual, isNotNil } from 'ng-zorro-antd/core/util';\n\nimport { isShowSearchObject, NzCascaderComponentAsSource, NzCascaderFilter, NzCascaderOption, NzCascaderSearchOption } from './typings';\nimport { isChildOption, isParentOption } from './utils';\n\n/**\n * All data is stored and parsed in NzCascaderService.\n */\n@Injectable()\nexport class NzCascaderService implements OnDestroy {\n  /** Activated options in each column. */\n  activatedOptions: NzCascaderOption[] = [];\n\n  /** An array to store cascader items arranged in different layers. */\n  columns: NzCascaderOption[][] = [];\n\n  /** If user has entered searching mode. */\n  inSearchingMode = false;\n\n  /** Selected options would be output to user. */\n  selectedOptions: NzCascaderOption[] = [];\n\n  values: NzSafeAny[] = [];\n\n  readonly $loading = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Emit an event to notify cascader it needs to redraw because activated or\n   * selected options are changed.\n   */\n  readonly $redraw = new Subject<void>();\n\n  /**\n   * Emit an event when an option gets selected.\n   * Emit true if a leaf options is selected.\n   */\n  readonly $optionSelected = new Subject<{\n    option: NzCascaderOption;\n    index: number;\n  } | null>();\n\n  /**\n   * Emit an event to notify cascader it needs to quit searching mode.\n   * Only emit when user do select a searching option.\n   */\n  readonly $quitSearching = new Subject<void>();\n\n  /** To hold columns before entering searching mode. */\n  private columnsSnapshot: NzCascaderOption[][] = [[]];\n\n  /** To hold activated options before entering searching mode. */\n  private activatedOptionsSnapshot: NzCascaderOption[] = [];\n\n  private cascaderComponent!: NzCascaderComponentAsSource;\n\n  /** Return cascader options in the first layer. */\n  get nzOptions(): NzCascaderOption[] {\n    return this.columns[0];\n  }\n\n  ngOnDestroy(): void {\n    this.$redraw.complete();\n    this.$quitSearching.complete();\n    this.$optionSelected.complete();\n    this.$loading.complete();\n  }\n\n  /**\n   * Make sure that value matches what is displayed in the dropdown.\n   */\n  syncOptions(first: boolean = false): void {\n    const values = this.values;\n    const hasValue = values && values.length;\n    const lastColumnIndex = values.length - 1;\n    const initColumnWithIndex = (columnIndex: number) => {\n      const activatedOptionSetter = () => {\n        const currentValue = values[columnIndex];\n\n        if (!isNotNil(currentValue)) {\n          this.$redraw.next();\n          return;\n        }\n\n        const option =\n          this.findOptionWithValue(columnIndex, values[columnIndex]) ||\n          (typeof currentValue === 'object'\n            ? currentValue\n            : {\n                [`${this.cascaderComponent.nzValueProperty}`]: currentValue,\n                [`${this.cascaderComponent.nzLabelProperty}`]: currentValue\n              });\n\n        this.setOptionActivated(option, columnIndex, false, false);\n\n        if (columnIndex < lastColumnIndex) {\n          initColumnWithIndex(columnIndex + 1);\n        } else {\n          this.dropBehindColumns(columnIndex);\n          this.selectedOptions = [...this.activatedOptions];\n          this.$redraw.next();\n        }\n      };\n\n      if (this.isLoaded(columnIndex) || !this.cascaderComponent.nzLoadData) {\n        activatedOptionSetter();\n      } else {\n        const option = this.activatedOptions[columnIndex - 1] || {};\n        this.loadChildren(option, columnIndex - 1, activatedOptionSetter);\n      }\n    };\n\n    this.activatedOptions = [];\n    this.selectedOptions = [];\n\n    if (first && this.cascaderComponent.nzLoadData && !hasValue) {\n      // Should also notify the component that value changes. Fix #3480.\n      this.$redraw.next();\n      return;\n    } else {\n      initColumnWithIndex(0);\n    }\n  }\n\n  /**\n   * Bind cascader component so this service could use inputs.\n   */\n  withComponent(cascaderComponent: NzCascaderComponentAsSource): void {\n    this.cascaderComponent = cascaderComponent;\n  }\n\n  /**\n   * Reset all options. Rebuild searching options if in searching mode.\n   */\n  withOptions(options: NzCascaderOption[] | null): void {\n    this.columnsSnapshot = this.columns = options && options.length ? [options] : [];\n\n    if (this.inSearchingMode) {\n      this.prepareSearchOptions(this.cascaderComponent.inputValue);\n    } else if (this.columns.length) {\n      this.syncOptions();\n    }\n  }\n\n  /**\n   * Try to set a option as activated.\n   * @param option Cascader option\n   * @param columnIndex Of which column this option is in\n   * @param performSelect Select\n   * @param loadingChildren Try to load children asynchronously.\n   */\n  setOptionActivated(option: NzCascaderOption, columnIndex: number, performSelect: boolean = false, loadingChildren: boolean = true): void {\n    if (option.disabled) {\n      return;\n    }\n\n    this.activatedOptions[columnIndex] = option;\n    this.trackAncestorActivatedOptions(columnIndex);\n    this.dropBehindActivatedOptions(columnIndex);\n\n    const isParent = isParentOption(option);\n\n    if (isParent) {\n      // Parent option that has children.\n      this.setColumnData(option.children!, columnIndex + 1, option);\n    } else if (!option.isLeaf && loadingChildren) {\n      // Parent option that should try to load children asynchronously.\n      this.loadChildren(option, columnIndex);\n    } else if (option.isLeaf) {\n      // Leaf option.\n      this.dropBehindColumns(columnIndex);\n    }\n\n    // Actually perform selection to make an options not only activated but also selected.\n    if (performSelect) {\n      this.setOptionSelected(option, columnIndex);\n    }\n\n    this.$redraw.next();\n  }\n\n  setOptionSelected(option: NzCascaderOption, index: number): void {\n    const changeOn = this.cascaderComponent.nzChangeOn;\n    const shouldPerformSelection = (o: NzCascaderOption, i: number): boolean => {\n      return typeof changeOn === 'function' ? changeOn(o, i) : false;\n    };\n\n    if (option.isLeaf || this.cascaderComponent.nzChangeOnSelect || shouldPerformSelection(option, index)) {\n      this.selectedOptions = [...this.activatedOptions];\n      this.prepareEmitValue();\n      this.$redraw.next();\n      this.$optionSelected.next({ option, index });\n    }\n  }\n\n  setOptionDeactivatedSinceColumn(column: number): void {\n    this.dropBehindActivatedOptions(column - 1);\n    this.dropBehindColumns(column);\n    this.$redraw.next();\n  }\n\n  /**\n   * Set a searching option as selected, finishing up things.\n   * @param option\n   */\n  setSearchOptionSelected(option: NzCascaderSearchOption): void {\n    this.activatedOptions = [option];\n    this.selectedOptions = [...option.path];\n    this.prepareEmitValue();\n    this.$redraw.next();\n    this.$optionSelected.next({ option, index: 0 });\n\n    setTimeout(() => {\n      // Reset data and tell UI only to remove input and reset dropdown width style.\n      this.$quitSearching.next();\n      this.$redraw.next();\n      this.inSearchingMode = false;\n      this.columns = [...this.columnsSnapshot];\n      this.activatedOptions = [...this.selectedOptions];\n    }, 200);\n  }\n\n  /**\n   * Filter cascader options to reset `columns`.\n   * @param searchValue The string user wants to search.\n   */\n  prepareSearchOptions(searchValue: string): void {\n    const results: NzCascaderOption[] = []; // Search results only have one layer.\n    const path: NzCascaderOption[] = [];\n    const defaultFilter: NzCascaderFilter = (i, p) => {\n      return p.some(o => {\n        const label = this.getOptionLabel(o);\n        return !!label && label.indexOf(i) !== -1;\n      });\n    };\n    const showSearch = this.cascaderComponent.nzShowSearch;\n    const filter = isShowSearchObject(showSearch) && showSearch.filter ? showSearch.filter : defaultFilter;\n    const sorter = isShowSearchObject(showSearch) && showSearch.sorter ? showSearch.sorter : null;\n    const loopChild = (node: NzCascaderOption, forceDisabled = false) => {\n      path.push(node);\n      const cPath = Array.from(path);\n      if (filter(searchValue, cPath)) {\n        const disabled = forceDisabled || node.disabled;\n        const option: NzCascaderSearchOption = {\n          disabled,\n          isLeaf: true,\n          path: cPath,\n          [this.cascaderComponent.nzLabelProperty]: cPath.map(p => this.getOptionLabel(p)).join(' / ')\n        };\n        results.push(option);\n      }\n      path.pop();\n    };\n    const loopParent = (node: NzCascaderOption, forceDisabled = false) => {\n      const disabled = forceDisabled || node.disabled;\n      path.push(node);\n      node.children!.forEach(sNode => {\n        if (!sNode.parent) {\n          sNode.parent = node;\n        }\n        if (!sNode.isLeaf) {\n          loopParent(sNode, disabled);\n        }\n        if (sNode.isLeaf || !sNode.children || !sNode.children.length) {\n          loopChild(sNode, disabled);\n        }\n      });\n      path.pop();\n    };\n\n    if (!this.columnsSnapshot.length) {\n      this.columns = [[]];\n      return;\n    }\n\n    this.columnsSnapshot[0].forEach(o => (isChildOption(o) ? loopChild(o) : loopParent(o)));\n\n    if (sorter) {\n      results.sort((a, b) => sorter(a.path, b.path, searchValue));\n    }\n\n    this.columns = [results];\n\n    this.$redraw.next(); // Search results may be empty, so should redraw.\n  }\n\n  /**\n   * Toggle searching mode by UI. It deals with things not directly related to UI.\n   * @param toSearching If this cascader is entering searching mode\n   */\n  toggleSearchingMode(toSearching: boolean): void {\n    this.inSearchingMode = toSearching;\n\n    if (toSearching) {\n      this.activatedOptionsSnapshot = [...this.activatedOptions];\n      this.activatedOptions = [];\n      this.selectedOptions = [];\n      this.$redraw.next();\n    } else {\n      // User quit searching mode without selecting an option.\n      this.activatedOptions = [...this.activatedOptionsSnapshot];\n      this.selectedOptions = [...this.activatedOptions];\n      this.columns = [...this.columnsSnapshot];\n      this.syncOptions();\n      this.$redraw.next();\n    }\n  }\n\n  /**\n   * Clear selected options.\n   */\n  clear(): void {\n    this.values = [];\n    this.selectedOptions = [];\n    this.activatedOptions = [];\n    this.dropBehindColumns(0);\n    this.prepareEmitValue();\n    this.$redraw.next();\n    this.$optionSelected.next(null);\n  }\n\n  getOptionLabel(o: NzCascaderOption): string {\n    return o[this.cascaderComponent.nzLabelProperty || 'label'] as string;\n  }\n\n  getOptionValue(o: NzCascaderOption): NzSafeAny {\n    return o[this.cascaderComponent.nzValueProperty || 'value'];\n  }\n\n  /**\n   * Try to insert options into a column.\n   * @param options Options to insert\n   * @param columnIndex Position\n   */\n  private setColumnData(options: NzCascaderOption[], columnIndex: number, parent: NzCascaderOption): void {\n    const existingOptions = this.columns[columnIndex];\n    if (!arraysEqual(existingOptions, options)) {\n      options.forEach(o => (o.parent = parent));\n      this.columns[columnIndex] = options;\n      this.dropBehindColumns(columnIndex);\n    }\n  }\n\n  /**\n   * Set all ancestor options as activated.\n   */\n  private trackAncestorActivatedOptions(startIndex: number): void {\n    for (let i = startIndex - 1; i >= 0; i--) {\n      if (!this.activatedOptions[i]) {\n        this.activatedOptions[i] = this.activatedOptions[i + 1].parent!;\n      }\n    }\n  }\n\n  private dropBehindActivatedOptions(lastReserveIndex: number): void {\n    this.activatedOptions = this.activatedOptions.splice(0, lastReserveIndex + 1);\n  }\n\n  private dropBehindColumns(lastReserveIndex: number): void {\n    if (lastReserveIndex < this.columns.length - 1) {\n      this.columns = this.columns.slice(0, lastReserveIndex + 1);\n    }\n  }\n\n  /**\n   * Load children of an option asynchronously.\n   */\n  loadChildren(option: NzCascaderOption | NzSafeAny, columnIndex: number, success?: VoidFunction, failure?: VoidFunction): void {\n    const loadFn = this.cascaderComponent.nzLoadData;\n\n    if (loadFn) {\n      // If there isn't any option in columns.\n      this.$loading.next(columnIndex < 0);\n\n      if (typeof option === 'object') {\n        option.loading = true;\n      }\n\n      loadFn(option, columnIndex).then(\n        () => {\n          option.loading = false;\n          if (option.children) {\n            this.setColumnData(option.children, columnIndex + 1, option);\n          }\n          if (success) {\n            success();\n          }\n          this.$loading.next(false);\n          this.$redraw.next();\n        },\n        () => {\n          option.loading = false;\n          option.isLeaf = true;\n          if (failure) {\n            failure();\n          }\n          this.$redraw.next();\n        }\n      );\n    }\n  }\n\n  private isLoaded(index: number): boolean {\n    return this.columns[index] && this.columns[index].length > 0;\n  }\n\n  /**\n   * Find a option that has a given value in a given column.\n   */\n  private findOptionWithValue(columnIndex: number, value: NzCascaderOption | NzSafeAny): NzCascaderOption | null {\n    const targetColumn = this.columns[columnIndex];\n    if (targetColumn) {\n      const v = typeof value === 'object' ? this.getOptionValue(value) : value;\n      return targetColumn.find(o => v === this.getOptionValue(o))!;\n    }\n    return null;\n  }\n\n  private prepareEmitValue(): void {\n    this.values = this.selectedOptions.map(o => this.getOptionValue(o));\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BACKSPACE, DOWN_ARROW, ENTER, ESCAPE, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { DEFAULT_CASCADER_POSITIONS } from 'ng-zorro-antd/core/overlay';\nimport { BooleanInput, NgClassType, NgStyleInterface, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, toArray } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { NzCascaderI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';\nimport { NzCascaderOptionComponent } from './cascader-li.component';\nimport { NzCascaderService } from './cascader.service';\nimport {\n  NzCascaderComponentAsSource,\n  NzCascaderExpandTrigger,\n  NzCascaderOption,\n  NzCascaderSearchOption,\n  NzCascaderSize,\n  NzCascaderTriggerType,\n  NzShowSearchOptions\n} from './typings';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'cascader';\nconst defaultDisplayRender = (labels: string[]) => labels.join(' / ');\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-cascader, [nz-cascader]',\n  exportAs: 'nzCascader',\n  preserveWhitespaces: false,\n  template: `\n    <div cdkOverlayOrigin #origin=\"cdkOverlayOrigin\" #trigger>\n      <div *ngIf=\"nzShowInput\">\n        <input\n          #input\n          nz-input\n          class=\"ant-cascader-input\"\n          [class.ant-cascader-input-disabled]=\"nzDisabled\"\n          [class.ant-cascader-input-lg]=\"nzSize === 'large'\"\n          [class.ant-cascader-input-sm]=\"nzSize === 'small'\"\n          [attr.autoComplete]=\"'off'\"\n          [attr.placeholder]=\"showPlaceholder ? nzPlaceHolder || locale?.placeholder : null\"\n          [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n          [readonly]=\"!nzShowSearch\"\n          [disabled]=\"nzDisabled\"\n          [nzSize]=\"nzSize\"\n          [(ngModel)]=\"inputValue\"\n          (blur)=\"handleInputBlur()\"\n          (focus)=\"handleInputFocus()\"\n          (change)=\"$event.stopPropagation()\"\n        />\n        <i\n          *ngIf=\"clearIconVisible\"\n          nz-icon\n          nzType=\"close-circle\"\n          nzTheme=\"fill\"\n          class=\"ant-cascader-picker-clear\"\n          (click)=\"clearSelection($event)\"\n        ></i>\n        <i\n          *ngIf=\"nzShowArrow && !isLoading\"\n          nz-icon\n          nzType=\"down\"\n          class=\"ant-cascader-picker-arrow\"\n          [class.ant-cascader-picker-arrow-expand]=\"menuVisible\"\n        ></i>\n        <i *ngIf=\"isLoading\" nz-icon nzType=\"loading\" class=\"ant-cascader-picker-arrow\"></i>\n        <span\n          class=\"ant-cascader-picker-label\"\n          [class.ant-cascader-show-search]=\"!!nzShowSearch\"\n          [class.ant-focusd]=\"!!nzShowSearch && isFocused && !inputValue\"\n        >\n          <ng-container *ngIf=\"!isLabelRenderTemplate; else labelTemplate\">{{ labelRenderText }}</ng-container>\n          <ng-template #labelTemplate>\n            <ng-template [ngTemplateOutlet]=\"nzLabelRender\" [ngTemplateOutletContext]=\"labelRenderContext\"></ng-template>\n          </ng-template>\n        </span>\n      </div>\n      <ng-content></ng-content>\n    </div>\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      cdkConnectedOverlayHasBackdrop\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayPositions]=\"positions\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-cascader-menus'\"\n      (backdropClick)=\"closeMenu()\"\n      (detach)=\"closeMenu()\"\n      [cdkConnectedOverlayOpen]=\"menuVisible\"\n    >\n      <div\n        #menu\n        class=\"ant-cascader-menus\"\n        [class.ant-cascader-menus-hidden]=\"!menuVisible\"\n        [ngClass]=\"menuCls\"\n        [ngStyle]=\"nzMenuStyle\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [@slideMotion]=\"'enter'\"\n        (mouseleave)=\"onTriggerMouseLeave($event)\"\n      >\n        <ul\n          *ngIf=\"shouldShowEmpty; else hasOptionsTemplate\"\n          class=\"ant-cascader-menu\"\n          [style.width]=\"dropdownWidthStyle\"\n          [style.height]=\"dropdownHeightStyle\"\n        >\n          <li class=\"ant-cascader-menu-item ant-cascader-menu-item-expanded ant-cascader-menu-item-disabled\">\n            <nz-embed-empty [nzComponentName]=\"'cascader'\" [specificContent]=\"nzNotFoundContent\"></nz-embed-empty>\n          </li>\n        </ul>\n        <ng-template #hasOptionsTemplate>\n          <ul\n            *ngFor=\"let options of cascaderService.columns; let i = index\"\n            class=\"ant-cascader-menu\"\n            [ngClass]=\"menuColumnCls\"\n            [style.height]=\"dropdownHeightStyle\"\n            [style.width]=\"dropdownWidthStyle\"\n          >\n            <li\n              nz-cascader-option\n              *ngFor=\"let option of options\"\n              [columnIndex]=\"i\"\n              [nzLabelProperty]=\"nzLabelProperty\"\n              [optionTemplate]=\"nzOptionRender\"\n              [activated]=\"isOptionActivated(option, i)\"\n              [highlightText]=\"inSearchingMode ? inputValue : ''\"\n              [option]=\"option\"\n              (mouseenter)=\"onOptionMouseEnter(option, i, $event)\"\n              (mouseleave)=\"onOptionMouseLeave(option, i, $event)\"\n              (click)=\"onOptionClick(option, i, $event)\"\n            ></li>\n          </ul>\n        </ng-template>\n      </div>\n    </ng-template>\n  `,\n  animations: [slideMotion],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCascaderComponent),\n      multi: true\n    },\n    NzCascaderService\n  ],\n  host: {\n    '[attr.tabIndex]': '\"0\"',\n    '[class.ant-cascader-lg]': 'nzSize === \"large\"',\n    '[class.ant-cascader-sm]': 'nzSize === \"small\"',\n    '[class.ant-cascader-picker-disabled]': 'nzDisabled',\n    '[class.ant-cascader-picker-open]': 'menuVisible',\n    '[class.ant-cascader-picker-with-value]': '!!inputValue',\n    '[class.ant-cascader-focused]': 'isFocused'\n  }\n})\nexport class NzCascaderComponent implements NzCascaderComponentAsSource, OnInit, OnDestroy, ControlValueAccessor {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzShowInput: BooleanInput;\n  static ngAcceptInputType_nzShowArrow: BooleanInput;\n  static ngAcceptInputType_nzAllowClear: BooleanInput;\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n  static ngAcceptInputType_nzChangeOnSelect: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  @ViewChild('input', { static: false }) input!: ElementRef;\n  @ViewChild('menu', { static: false }) menu!: ElementRef;\n  @ViewChild(CdkConnectedOverlay, { static: false }) overlay!: CdkConnectedOverlay;\n  @ViewChildren(NzCascaderOptionComponent) cascaderItems!: QueryList<NzCascaderOptionComponent>;\n\n  @Input() nzOptionRender: TemplateRef<{ $implicit: NzCascaderOption; index: number }> | null = null;\n  @Input() @InputBoolean() nzShowInput = true;\n  @Input() @InputBoolean() nzShowArrow = true;\n  @Input() @InputBoolean() nzAllowClear = true;\n  @Input() @InputBoolean() nzAutoFocus = false;\n  @Input() @InputBoolean() nzChangeOnSelect = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() nzColumnClassName?: string;\n  @Input() nzExpandTrigger: NzCascaderExpandTrigger = 'click';\n  @Input() nzValueProperty = 'value';\n  @Input() nzLabelRender: TemplateRef<void> | null = null;\n  @Input() nzLabelProperty = 'label';\n  @Input() nzNotFoundContent?: string | TemplateRef<void>;\n  @Input() @WithConfig() nzSize: NzCascaderSize = 'default';\n  @Input() nzShowSearch: boolean | NzShowSearchOptions = false;\n  @Input() nzPlaceHolder: string = '';\n  @Input() nzMenuClassName?: string;\n  @Input() nzMenuStyle: NgStyleInterface | null = null;\n  @Input() nzMouseEnterDelay: number = 150; // ms\n  @Input() nzMouseLeaveDelay: number = 150; // ms\n  @Input() nzTriggerAction: NzCascaderTriggerType | NzCascaderTriggerType[] = ['click'] as NzCascaderTriggerType[];\n  @Input() nzChangeOn?: (option: NzCascaderOption, level: number) => boolean;\n  @Input() nzLoadData?: (node: NzCascaderOption, index: number) => PromiseLike<NzSafeAny>;\n\n  @Input()\n  get nzOptions(): NzCascaderOption[] | null {\n    return this.cascaderService.nzOptions;\n  }\n\n  set nzOptions(options: NzCascaderOption[] | null) {\n    this.cascaderService.withOptions(options);\n  }\n\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n  @Output() readonly nzSelectionChange = new EventEmitter<NzCascaderOption[]>();\n  @Output() readonly nzSelect = new EventEmitter<{ option: NzCascaderOption; index: number } | null>();\n  @Output() readonly nzClear = new EventEmitter<void>();\n\n  /**\n   * If the dropdown should show the empty content.\n   * `true` if there's no options.\n   */\n  shouldShowEmpty: boolean = false;\n\n  el: HTMLElement;\n  menuVisible = false;\n  isLoading = false;\n  labelRenderText?: string;\n  labelRenderContext = {};\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n  positions: ConnectionPositionPair[] = [...DEFAULT_CASCADER_POSITIONS];\n\n  /**\n   * Dropdown's with in pixel.\n   */\n  dropdownWidthStyle?: string;\n  dropdownHeightStyle: 'auto' | '' = '';\n  isFocused = false;\n\n  locale!: NzCascaderI18nInterface;\n\n  private destroy$ = new Subject<void>();\n  private inputString = '';\n  private isOpening = false;\n  private delayMenuTimer: number | null = null;\n  private delaySelectTimer: number | null = null;\n\n  get inSearchingMode(): boolean {\n    return this.cascaderService.inSearchingMode;\n  }\n\n  set inputValue(inputValue: string) {\n    this.inputString = inputValue;\n    this.toggleSearchingMode(!!inputValue);\n  }\n\n  get inputValue(): string {\n    return this.inputString;\n  }\n\n  get menuCls(): NgClassType {\n    return { [`${this.nzMenuClassName}`]: !!this.nzMenuClassName };\n  }\n\n  get menuColumnCls(): NgClassType {\n    return { [`${this.nzColumnClassName}`]: !!this.nzColumnClassName };\n  }\n\n  private get hasInput(): boolean {\n    return !!this.inputValue;\n  }\n\n  private get hasValue(): boolean {\n    return this.cascaderService.values && this.cascaderService.values.length > 0;\n  }\n\n  get showPlaceholder(): boolean {\n    return !(this.hasInput || this.hasValue);\n  }\n\n  get clearIconVisible(): boolean {\n    return this.nzAllowClear && !this.nzDisabled && (this.hasValue || this.hasInput);\n  }\n\n  get isLabelRenderTemplate(): boolean {\n    return !!this.nzLabelRender;\n  }\n\n  constructor(\n    public cascaderService: NzCascaderService,\n    private i18nService: NzI18nService,\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    this.el = elementRef.nativeElement;\n    this.cascaderService.withComponent(this);\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader');\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader-picker');\n  }\n\n  ngOnInit(): void {\n    const srv = this.cascaderService;\n\n    srv.$redraw.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      // These operations would not mutate data.\n      this.checkChildren();\n      this.setDisplayLabel();\n      this.reposition();\n      this.setDropdownStyles();\n\n      this.cdr.markForCheck();\n    });\n\n    srv.$loading.pipe(takeUntil(this.destroy$)).subscribe(loading => {\n      this.isLoading = loading;\n    });\n\n    srv.$optionSelected.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      if (!data) {\n        this.onChange([]);\n        this.nzSelect.emit(null);\n        this.nzSelectionChange.emit([]);\n      } else {\n        const { option, index } = data;\n        const shouldClose = option.isLeaf;\n        if (shouldClose) {\n          this.delaySetMenuVisible(false);\n        }\n        this.onChange(this.cascaderService.values);\n        this.nzSelectionChange.emit(this.cascaderService.selectedOptions);\n        this.nzSelect.emit({ option, index });\n        this.cdr.markForCheck();\n      }\n    });\n\n    srv.$quitSearching.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.inputString = '';\n      this.dropdownWidthStyle = '';\n    });\n\n    this.i18nService.localeChange.pipe(startWith(), takeUntil(this.destroy$)).subscribe(() => {\n      this.setLocale();\n    });\n\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.clearDelayMenuTimer();\n    this.clearDelaySelectTimer();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: NzSafeAny): void {\n    this.cascaderService.values = toArray(value);\n    this.cascaderService.syncOptions(true);\n  }\n\n  delaySetMenuVisible(visible: boolean, delay: number = 100, setOpening: boolean = false): void {\n    this.clearDelayMenuTimer();\n    if (delay) {\n      if (visible && setOpening) {\n        this.isOpening = true;\n      }\n      this.delayMenuTimer = setTimeout(() => {\n        this.setMenuVisible(visible);\n        this.cdr.detectChanges();\n        this.clearDelayMenuTimer();\n        if (visible) {\n          setTimeout(() => {\n            this.isOpening = false;\n          }, 100);\n        }\n      }, delay);\n    } else {\n      this.setMenuVisible(visible);\n    }\n  }\n\n  setMenuVisible(visible: boolean): void {\n    if (this.nzDisabled || this.menuVisible === visible) {\n      return;\n    }\n    if (visible) {\n      this.cascaderService.syncOptions();\n    }\n\n    this.menuVisible = visible;\n    this.nzVisibleChange.emit(visible);\n    this.cdr.detectChanges();\n  }\n\n  private clearDelayMenuTimer(): void {\n    if (this.delayMenuTimer) {\n      clearTimeout(this.delayMenuTimer);\n      this.delayMenuTimer = null;\n    }\n  }\n\n  clearSelection(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.labelRenderText = '';\n    this.labelRenderContext = {};\n    this.inputValue = '';\n    this.setMenuVisible(false);\n    this.cascaderService.clear();\n  }\n\n  getSubmitValue(): NzSafeAny[] {\n    return this.cascaderService.selectedOptions.map(o => this.cascaderService.getOptionValue(o));\n  }\n\n  focus(): void {\n    if (!this.isFocused) {\n      (this.input ? this.input.nativeElement : this.el).focus();\n      this.isFocused = true;\n    }\n  }\n\n  blur(): void {\n    if (this.isFocused) {\n      (this.input ? this.input.nativeElement : this.el).blur();\n      this.isFocused = false;\n    }\n  }\n\n  handleInputBlur(): void {\n    this.menuVisible ? this.focus() : this.blur();\n  }\n\n  handleInputFocus(): void {\n    this.focus();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    if (\n      keyCode !== DOWN_ARROW &&\n      keyCode !== UP_ARROW &&\n      keyCode !== LEFT_ARROW &&\n      keyCode !== RIGHT_ARROW &&\n      keyCode !== ENTER &&\n      keyCode !== BACKSPACE &&\n      keyCode !== ESCAPE\n    ) {\n      return;\n    }\n\n    // Press any keys above to reopen menu.\n    if (!this.menuVisible && keyCode !== BACKSPACE && keyCode !== ESCAPE) {\n      return this.setMenuVisible(true);\n    }\n\n    // Make these keys work as default in searching mode.\n    if (this.inSearchingMode && (keyCode === BACKSPACE || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW)) {\n      return;\n    }\n\n    // Interact with the component.\n    if (this.menuVisible) {\n      event.preventDefault();\n      if (keyCode === DOWN_ARROW) {\n        this.moveUpOrDown(false);\n      } else if (keyCode === UP_ARROW) {\n        this.moveUpOrDown(true);\n      } else if (keyCode === LEFT_ARROW) {\n        this.moveLeft();\n      } else if (keyCode === RIGHT_ARROW) {\n        this.moveRight();\n      } else if (keyCode === ENTER) {\n        this.onEnter();\n      }\n    }\n  }\n\n  @HostListener('click')\n  onTriggerClick(): void {\n    if (this.nzDisabled) {\n      return;\n    }\n    if (this.nzShowSearch) {\n      this.focus();\n    }\n    if (this.isActionTrigger('click')) {\n      this.delaySetMenuVisible(!this.menuVisible, 100);\n    }\n    this.onTouched();\n  }\n\n  @HostListener('mouseenter')\n  onTriggerMouseEnter(): void {\n    if (this.nzDisabled || !this.isActionTrigger('hover')) {\n      return;\n    }\n\n    this.delaySetMenuVisible(true, this.nzMouseEnterDelay, true);\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  onTriggerMouseLeave(event: MouseEvent): void {\n    if (this.nzDisabled || !this.menuVisible || this.isOpening || !this.isActionTrigger('hover')) {\n      event.preventDefault();\n      return;\n    }\n    const mouseTarget = event.relatedTarget as HTMLElement;\n    const hostEl = this.el;\n    const menuEl = this.menu && (this.menu.nativeElement as HTMLElement);\n    if (hostEl.contains(mouseTarget) || (menuEl && menuEl.contains(mouseTarget))) {\n      return;\n    }\n    this.delaySetMenuVisible(false, this.nzMouseLeaveDelay);\n  }\n\n  onOptionMouseEnter(option: NzCascaderOption, columnIndex: number, event: Event): void {\n    event.preventDefault();\n    if (this.nzExpandTrigger === 'hover') {\n      if (!option.isLeaf) {\n        this.delaySetOptionActivated(option, columnIndex, false);\n      } else {\n        this.cascaderService.setOptionDeactivatedSinceColumn(columnIndex);\n      }\n    }\n  }\n\n  onOptionMouseLeave(option: NzCascaderOption, _columnIndex: number, event: Event): void {\n    event.preventDefault();\n    if (this.nzExpandTrigger === 'hover' && !option.isLeaf) {\n      this.clearDelaySelectTimer();\n    }\n  }\n\n  onOptionClick(option: NzCascaderOption, columnIndex: number, event: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (option && option.disabled) {\n      return;\n    }\n    this.el.focus();\n    this.inSearchingMode\n      ? this.cascaderService.setSearchOptionSelected(option as NzCascaderSearchOption)\n      : this.cascaderService.setOptionActivated(option, columnIndex, true);\n  }\n\n  private isActionTrigger(action: 'click' | 'hover'): boolean {\n    return typeof this.nzTriggerAction === 'string' ? this.nzTriggerAction === action : this.nzTriggerAction.indexOf(action) !== -1;\n  }\n\n  private onEnter(): void {\n    const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n    const option = this.cascaderService.activatedOptions[columnIndex];\n    if (option && !option.disabled) {\n      this.inSearchingMode\n        ? this.cascaderService.setSearchOptionSelected(option as NzCascaderSearchOption)\n        : this.cascaderService.setOptionActivated(option, columnIndex, true);\n    }\n  }\n\n  private moveUpOrDown(isUp: boolean): void {\n    const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n    const activeOption = this.cascaderService.activatedOptions[columnIndex];\n    const options = this.cascaderService.columns[columnIndex] || [];\n    const length = options.length;\n    let nextIndex = -1;\n    if (!activeOption) {\n      // Not selected options in this column\n      nextIndex = isUp ? length : -1;\n    } else {\n      nextIndex = options.indexOf(activeOption);\n    }\n\n    while (true) {\n      nextIndex = isUp ? nextIndex - 1 : nextIndex + 1;\n      if (nextIndex < 0 || nextIndex >= length) {\n        break;\n      }\n      const nextOption = options[nextIndex];\n      if (!nextOption || nextOption.disabled) {\n        continue;\n      }\n      this.cascaderService.setOptionActivated(nextOption, columnIndex);\n      break;\n    }\n  }\n\n  private moveLeft(): void {\n    const options = this.cascaderService.activatedOptions;\n    if (options.length) {\n      options.pop(); // Remove the last one\n    }\n  }\n\n  private moveRight(): void {\n    const length = this.cascaderService.activatedOptions.length;\n    const options = this.cascaderService.columns[length];\n    if (options && options.length) {\n      const nextOpt = options.find(o => !o.disabled);\n      if (nextOpt) {\n        this.cascaderService.setOptionActivated(nextOpt, length);\n      }\n    }\n  }\n\n  private clearDelaySelectTimer(): void {\n    if (this.delaySelectTimer) {\n      clearTimeout(this.delaySelectTimer);\n      this.delaySelectTimer = null;\n    }\n  }\n\n  private delaySetOptionActivated(option: NzCascaderOption, columnIndex: number, performSelect: boolean): void {\n    this.clearDelaySelectTimer();\n    this.delaySelectTimer = setTimeout(() => {\n      this.cascaderService.setOptionActivated(option, columnIndex, performSelect);\n      this.delaySelectTimer = null;\n    }, 150);\n  }\n\n  private toggleSearchingMode(toSearching: boolean): void {\n    if (this.inSearchingMode !== toSearching) {\n      this.cascaderService.toggleSearchingMode(toSearching);\n    }\n\n    if (this.inSearchingMode) {\n      this.cascaderService.prepareSearchOptions(this.inputValue);\n    }\n  }\n\n  isOptionActivated(option: NzCascaderOption, index: number): boolean {\n    const activeOpt = this.cascaderService.activatedOptions[index];\n    return activeOpt === option;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.closeMenu();\n    }\n    this.nzDisabled = isDisabled;\n  }\n\n  closeMenu(): void {\n    this.blur();\n    this.clearDelayMenuTimer();\n    this.setMenuVisible(false);\n  }\n\n  /**\n   * Reposition the cascader panel. When a menu opens, the cascader expands\n   * and may exceed the boundary of browser's window.\n   */\n  private reposition(): void {\n    if (this.overlay && this.overlay.overlayRef && this.menuVisible) {\n      Promise.resolve().then(() => {\n        this.overlay.overlayRef.updatePosition();\n      });\n    }\n  }\n\n  /**\n   * When a cascader options is changed, a child needs to know that it should re-render.\n   */\n  private checkChildren(): void {\n    if (this.cascaderItems) {\n      this.cascaderItems.forEach(item => item.markForCheck());\n    }\n  }\n\n  private setDisplayLabel(): void {\n    const selectedOptions = this.cascaderService.selectedOptions;\n    const labels: string[] = selectedOptions.map(o => this.cascaderService.getOptionLabel(o));\n\n    if (this.isLabelRenderTemplate) {\n      this.labelRenderContext = { labels, selectedOptions };\n    } else {\n      this.labelRenderText = defaultDisplayRender.call(this, labels, selectedOptions);\n    }\n  }\n\n  private setDropdownStyles(): void {\n    const firstColumn = this.cascaderService.columns[0];\n\n    this.shouldShowEmpty =\n      (this.inSearchingMode && (!firstColumn || !firstColumn.length)) || // Should show empty when there's no searching result\n      (!(this.nzOptions && this.nzOptions.length) && !this.nzLoadData); // Should show when there's no options and developer does not use nzLoadData\n    this.dropdownHeightStyle = this.shouldShowEmpty ? 'auto' : '';\n\n    if (this.input) {\n      this.dropdownWidthStyle = this.inSearchingMode || this.shouldShowEmpty ? `${this.input.nativeElement.offsetWidth}px` : '';\n    }\n  }\n\n  private setLocale(): void {\n    this.locale = this.i18nService.getLocaleData('global');\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n\nimport { NzCascaderOptionComponent } from './cascader-li.component';\nimport { NzCascaderComponent } from './cascader.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    OverlayModule,\n    NzOutletModule,\n    NzEmptyModule,\n    NzHighlightModule,\n    NzIconModule,\n    NzInputModule,\n    NzNoAnimationModule,\n    NzOverlayModule\n  ],\n  declarations: [NzCascaderComponent, NzCascaderOptionComponent],\n  exports: [NzCascaderComponent]\n})\nexport class NzCascaderModule {}\n"]}