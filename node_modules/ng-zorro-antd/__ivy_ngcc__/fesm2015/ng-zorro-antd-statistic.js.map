{"version":3,"file":"ng-zorro-antd-statistic.js","sources":["../../components/statistic/statistic.component.ts","../../components/statistic/countdown.component.ts","../../components/statistic/statistic-number.component.ts","../../components/statistic/statistic.module.ts","../../components/statistic/public-api.ts","../../components/statistic/ng-zorro-antd-statistic.ts"],"names":["NzPipesModuleFromCore"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NgStyleInterface } from 'ng-zorro-antd/core/types';\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-statistic',\n  exportAs: 'nzStatistic',\n  template: `\n    <div class=\"ant-statistic\">\n      <div class=\"ant-statistic-title\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </div>\n      <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n        <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n          <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n        </span>\n        <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"> </nz-statistic-number>\n        <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n          <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        </span>\n      </div>\n    </div>\n  `\n})\nexport class NzStatisticComponent {\n  @Input() nzPrefix?: string | TemplateRef<void>;\n  @Input() nzSuffix?: string | TemplateRef<void>;\n  @Input() nzTitle?: string | TemplateRef<void>;\n  @Input() nzValue?: NzStatisticValueType;\n  @Input() nzValueStyle: NgStyleInterface = {};\n  @Input() nzValueTemplate?: TemplateRef<{ $implicit: NzStatisticValueType }>;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\n\nimport { NzStatisticComponent } from './statistic.component';\n\nconst REFRESH_INTERVAL = 1000 / 30;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-countdown',\n  exportAs: 'nzCountdown',\n  template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    >\n    </nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `\n})\nexport class NzCountdownComponent extends NzStatisticComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() nzFormat: string = 'HH:mm:ss';\n  @Output() readonly nzCountdownFinish = new EventEmitter<void>();\n\n  diff!: number;\n\n  private target: number = 0;\n  private updater_?: Subscription | null;\n\n  constructor(private cdr: ChangeDetectorRef, private ngZone: NgZone, private platform: Platform) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzValue) {\n      this.target = Number(changes.nzValue.currentValue);\n      if (!changes.nzValue.isFirstChange()) {\n        this.syncTimer();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.syncTimer();\n  }\n\n  ngOnDestroy(): void {\n    this.stopTimer();\n  }\n\n  syncTimer(): void {\n    if (this.target >= Date.now()) {\n      this.startTimer();\n    } else {\n      this.stopTimer();\n    }\n  }\n\n  startTimer(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.stopTimer();\n        this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n          this.updateValue();\n          this.cdr.detectChanges();\n        });\n      });\n    }\n  }\n\n  stopTimer(): void {\n    if (this.updater_) {\n      this.updater_.unsubscribe();\n      this.updater_ = null;\n    }\n  }\n\n  /**\n   * Update time that should be displayed on the screen.\n   */\n  protected updateValue(): void {\n    this.diff = Math.max(this.target - Date.now(), 0);\n\n    if (this.diff === 0) {\n      this.stopTimer();\n      this.nzCountdownFinish.emit();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Inject, Input, LOCALE_ID, OnChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-statistic-number',\n  exportAs: 'nzStatisticNumber',\n  template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container *ngIf=\"nzValueTemplate\" [ngTemplateOutlet]=\"nzValueTemplate\" [ngTemplateOutletContext]=\"{ $implicit: nzValue }\">\n      </ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `\n})\nexport class NzStatisticNumberComponent implements OnChanges {\n  @Input() nzValue?: NzStatisticValueType;\n  @Input() nzValueTemplate?: TemplateRef<{ $implicit: NzStatisticValueType }>;\n\n  displayInt = '';\n  displayDecimal = '';\n\n  constructor(@Inject(LOCALE_ID) private locale_id: string) {}\n\n  ngOnChanges(): void {\n    this.formatNumber();\n  }\n\n  private formatNumber(): void {\n    const decimalSeparator: string = typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n    const value = String(this.nzValue);\n    const [int, decimal] = value.split(decimalSeparator);\n\n    this.displayInt = int;\n    this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzPipesModule as NzPipesModuleFromCore } from 'ng-zorro-antd/core/pipe';\n\nimport { NzCountdownComponent } from './countdown.component';\nimport { NzStatisticNumberComponent } from './statistic-number.component';\nimport { NzStatisticComponent } from './statistic.component';\n\n@NgModule({\n  imports: [CommonModule, PlatformModule, NzOutletModule, NzPipesModuleFromCore],\n  declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n  exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n})\nexport class NzStatisticModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './countdown.component';\nexport * from './statistic.component';\nexport * from './statistic.module';\nexport * from './statistic-number.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}