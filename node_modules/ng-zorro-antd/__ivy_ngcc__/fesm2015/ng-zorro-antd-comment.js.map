{"version":3,"file":"ng-zorro-antd-comment.js","sources":["../../components/comment/comment-cells.ts","../../components/comment/comment.component.ts","../../components/comment/comment.module.ts","../../components/comment/public-api.ts","../../components/comment/ng-zorro-antd-comment.ts"],"names":["CommentAction"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentFactoryResolver,\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Directive({\n  selector: 'nz-avatar[nz-comment-avatar]',\n  exportAs: 'nzCommentAvatar'\n})\nexport class NzCommentAvatarDirective {}\n\n@Directive({\n  selector: 'nz-comment-content, [nz-comment-content]',\n  exportAs: 'nzCommentContent',\n  host: { class: 'ant-comment-content-detail' }\n})\nexport class NzCommentContentDirective {}\n\n@Directive({\n  selector: '[nzCommentActionHost]',\n  exportAs: 'nzCommentActionHost'\n})\nexport class NzCommentActionHostDirective extends CdkPortalOutlet implements OnInit, OnDestroy, AfterViewInit {\n  @Input() nzCommentActionHost?: TemplatePortal | null;\n\n  constructor(componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef) {\n    super(componentFactoryResolver, viewContainerRef);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n  ngAfterViewInit(): void {\n    this.attach(this.nzCommentActionHost);\n  }\n}\n\n@Component({\n  selector: 'nz-comment-action',\n  exportAs: 'nzCommentAction',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class NzCommentActionComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) implicitContent!: TemplateRef<void>;\n  private contentPortal: TemplatePortal | null = null;\n\n  get content(): TemplatePortal | null {\n    return this.contentPortal;\n  }\n\n  constructor(private viewContainerRef: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    this.contentPortal = new TemplatePortal(this.implicitContent, this.viewContainerRef);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ContentChildren, Input, QueryList, TemplateRef, ViewEncapsulation } from '@angular/core';\n\nimport { NzCommentActionComponent as CommentAction } from './comment-cells';\n\n@Component({\n  selector: 'nz-comment',\n  exportAs: 'nzComment',\n  template: `\n    <div class=\"ant-comment-inner\">\n      <div class=\"ant-comment-avatar\">\n        <ng-content select=\"nz-avatar[nz-comment-avatar]\"></ng-content>\n      </div>\n      <div class=\"ant-comment-content\">\n        <div class=\"ant-comment-content-author\">\n          <span *ngIf=\"nzAuthor\" class=\"ant-comment-content-author-name\">\n            <ng-container *nzStringTemplateOutlet=\"nzAuthor\">{{ nzAuthor }}</ng-container>\n          </span>\n          <span *ngIf=\"nzDatetime\" class=\"ant-comment-content-author-time\">\n            <ng-container *nzStringTemplateOutlet=\"nzDatetime\">{{ nzDatetime }}</ng-container>\n          </span>\n        </div>\n        <ng-content select=\"nz-comment-content\"></ng-content>\n        <ul class=\"ant-comment-actions\" *ngIf=\"actions?.length\">\n          <li *ngFor=\"let action of actions\">\n            <span><ng-template [nzCommentActionHost]=\"action.content\"></ng-template></span>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"ant-comment-nested\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'ant-comment'\n  }\n})\nexport class NzCommentComponent {\n  @Input() nzAuthor?: string | TemplateRef<void>;\n  @Input() nzDatetime?: string | TemplateRef<void>;\n\n  @ContentChildren(CommentAction) actions!: QueryList<CommentAction>;\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport {\n  NzCommentActionComponent,\n  NzCommentActionHostDirective,\n  NzCommentAvatarDirective,\n  NzCommentContentDirective\n} from './comment-cells';\nimport { NzCommentComponent } from './comment.component';\n\nconst NZ_COMMENT_CELLS = [NzCommentAvatarDirective, NzCommentContentDirective, NzCommentActionComponent, NzCommentActionHostDirective];\n\n@NgModule({\n  imports: [CommonModule, NzOutletModule],\n  exports: [NzCommentComponent, ...NZ_COMMENT_CELLS],\n  declarations: [NzCommentComponent, ...NZ_COMMENT_CELLS]\n})\nexport class NzCommentModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './comment.module';\nexport * from './comment.component';\nexport * from './comment-cells';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}